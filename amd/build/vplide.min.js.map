{"version":3,"file":"vplide.min.js","sources":["../src/vplide.js"],"sourcesContent":["// This file is part of VPL for Moodle - http://vpl.dis.ulpgc.es/\n//\n// VPL for Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// VPL for Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with VPL for Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * IDE Control\n *\n * @copyright 2017 Juan Carlos Rodríguez-del-Pino\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author Juan Carlos Rodríguez-del-Pino <jcrodriguez@dis.ulpgc.es>\n */\n\n/* globals openpopup */\n\ndefine(\n    [\n        'jquery',\n        'jqueryui',\n        'core/url',\n        'mod_vpl/vplutil',\n        'mod_vpl/vplui',\n        'mod_vpl/vplidefile',\n        'mod_vpl/vplidebutton',\n        'mod_vpl/vplterminal',\n        'mod_vpl/vplvnc',\n    ],\n    function($, jqui, coreURL, VPLUtil, VPLUI, VPLFile, VPLIDEButtons, VPLTerminal, VPLVNCClient) {\n        if (typeof VPLIDE !== 'undefined') {\n            return VPLIDE;\n        }\n        var vplIdeInstance;\n        var VPLIDE = function(rootId, options) {\n            var self = this;\n            var fileManager;\n            var adjustTabsTitles;\n            var autoResizeTab;\n            var showErrorMessage;\n            var updateMenu;\n            var executionActions;\n            var minNumberOfFiles = options.minfiles || 0;\n            var maxNumberOfFiles = options.maxfiles || 0;\n            var restrictedEdit = options.restrictededitor || options.example;\n            var readOnly = options.example;\n            var readOnlyFiles = options.readOnlyFiles;\n            var isTeacher = options.isTeacher;\n            var fullScreen = false;\n            var scrollBarWidth = VPLUI.scrollBarWidth();\n            var str = VPLUtil.str;\n            var rootObj = $('#' + rootId);\n            $(\"head\").append('<meta name=\"viewport\" content=\"initial-scale=1\">')\n                          .append('<meta name=\"viewport\" width=\"device-width\">')\n                          .append('<link rel=\"stylesheet\" href=\"' + coreURL.relativeUrl('/mod/vpl/editor/VPLIDE.css') + '\"/>');\n            if (typeof rootObj != 'object') {\n                throw new Error(\"VPL: constructor tag_id not found\");\n            }\n            var optionsToCheck = {\n                'new': true,\n                'rename': true,\n                'delete': true,\n                'save': true,\n                'run': true,\n                'edit': true,\n                'debug': true,\n                'evaluate': true,\n                'import': true,\n                'resetfiles': true,\n                'sort': true,\n                'multidelete': true,\n                'showparentfiles': true,\n                'acetheme': true,\n                'console': true,\n                'comments': true\n            };\n            if ((typeof options.loadajaxurl) == 'undefined') {\n                options.loadajaxurl = options.ajaxurl;\n            }\n            (function() {\n                var activateModification = (minNumberOfFiles < maxNumberOfFiles);\n                options.new = activateModification;\n                options.rename = activateModification;\n                options.delete = activateModification;\n                options.comments = options.comments && !options.example;\n                options.acetheme = true;\n            })();\n            options.sort = (maxNumberOfFiles - minNumberOfFiles >= 2);\n            options.multidelete = options.sort;\n            options.import = !restrictedEdit;\n            var isOptionAllowed = function(op) {\n                if (!optionsToCheck[op]) {\n                    return true;\n                }\n                return options[op];\n            };\n            options.console = isOptionAllowed('run') || isOptionAllowed('debug');\n            if ((typeof options.fontSize) == 'undefined') {\n                options.fontSize = 12;\n            }\n            options.fontSize = parseInt(options.fontSize);\n            /**\n             * Handler for dragover event.\n             * @param {object} e event.\n             */\n            function dragoverHandler(e) {\n                if (restrictedEdit) {\n                    e.originalEvent.dataTransfer.dropEffect = 'none';\n                } else {\n                    e.originalEvent.dataTransfer.dropEffect = 'copy';\n                }\n                e.preventDefault();\n            }\n            /**\n             * Handler for drop event.\n             * @param {object} e event.\n             * @returns {boolean}\n             */\n            function dropHandler(e) {\n                if (restrictedEdit) { // No drop allowed.\n                    e.stopImmediatePropagation();\n                    return false;\n                }\n                var droppedFiles = [];\n                // Function that lists all files and subfiles of given entry into droppedFiles.\n                var listDroppedFiles = function(entry, path = '') {\n                    return new Promise(function(resolve) {\n                        if (entry.isFile) {\n                            // Current entry is a file : add it to the list.\n                            entry.file(function(file) {\n                                // Change its name s.t. it preserves directories structure.\n                                var fullName = path + file.name;\n                                Object.defineProperty(file, \"name\", {\n                                    get: function() {\n                                            return fullName;\n                                         }\n                                });\n                                droppedFiles.push(file);\n                                resolve();\n                            });\n                        } else if (entry.isDirectory) {\n                            // Current entry is a directory : process its content.\n                            var dirReader = entry.createReader();\n                            dirReader.readEntries(function(entries) {\n                                var dirPromises = [];\n                                for (var i = 0; i < entries.length; i++) {\n                                    dirPromises.push(listDroppedFiles(entries[i], path + entry.name + \"/\"));\n                                }\n                                Promise.all(dirPromises).then(resolve).catch(function(err) {\n                                    VPLUtil.log(\"Error reading directory entries: \" + err);\n                                });\n                            });\n                        } else {\n                            // This is neither a directory nor a file : ignore it.\n                            resolve();\n                        }\n                    });\n                };\n                var dt = e.originalEvent.dataTransfer;\n\n                // List every element of the drop event.\n                var promises = [];\n                for (var i = 0; i < dt.items.length; i++) {\n                    var entry = dt.items[i].webkitGetAsEntry();\n                    if (!entry) { // Used if testing with Behat\n                        const file = dt.items[i].getAsFile();\n                        if (file) {\n                            // Create a fake entry to handle it like a file.\n                            entry = {\n                                isFile: true,\n                                isDirectory: false,\n                                file: function(callback) {\n                                    callback(file);\n                                }\n                            };\n                            promises.push(listDroppedFiles(entry));\n                        }\n                    } else if (entry.isFile || entry.isDirectory) {\n                        promises.push(listDroppedFiles(entry));\n                    }\n                }\n\n                // Drop files.\n                if (dt.files.length > 0) {\n                    Promise.all(promises)\n                    .then(function() {\n                        VPLUI.readSelectedFiles(droppedFiles, function(file) {\n                            return fileManager.addFile(file, true, updateMenu, showErrorMessage);\n                        },\n                        function() {\n                            fileManager.fileListVisibleIfNeeded();\n                        });\n                        return;\n                    })\n                    .catch(function(err) {\n                        VPLUtil.log(\"Error processing dropped files: \" + err);\n                    });\n\n                    e.stopImmediatePropagation();\n                    return false;\n                }\n                return false;\n            }\n            rootObj.on('drop', dropHandler);\n            rootObj.on('dragover', dragoverHandler);\n            /**\n             * Handler for paste limited by restrictedEdit var.\n             * @param {object} e event.\n             * @returns {boolean}\n             */\n            function restrictedPaste(e) {\n                if (restrictedEdit) {\n                    e.stopPropagation();\n                    return false;\n                }\n                return true;\n            }\n            // Init editor vars.\n            var menu = $('#vpl_menu');\n            var menuButtons = new VPLIDEButtons(menu, isOptionAllowed);\n            var tr = $('#vpl_tr');\n            var fileListContainer = $('#vpl_filelist');\n            var fileList = $('#vpl_filelist_header');\n            var fileListContent = $('#vpl_filelist_content');\n            var tabsUl = $('#vpl_tabs_ul');\n            var tabs = $('#vpl_tabs');\n            var resultContainer = $('#vpl_results');\n            var result = $('#vpl_results_accordion');\n            var renameDiretoryAction = VPLUtil.doNothing;\n            fileListContainer.vplMinWidth = 80;\n            resultContainer.vplMinWidth = 100;\n            /**\n             * Avoids selecting grade.\n             * @param {object} event Unuse.\n             * @param {object} ui UI origen.\n             * @returns {boolean}\n             */\n            function avoidSelectGrade(event, ui) {\n                if (\"newHeader\" in ui) {\n                    if (ui.newHeader.hasClass('vpl_ide_accordion_t_grade')) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            /**\n             * Constructor of FileManager objects\n             */\n            function FileManager() {\n                var tabsUl = $('#vpl_tabs_ul');\n                $('#vpl_tabs').tabs();\n                var tabs = $('#vpl_tabs').tabs(\"widget\");\n                var files = [];\n                var openFiles = [];\n                var modified = true;\n                var self = this;\n                (function() {\n                    var version;\n                    self.setVersion = function(v) {\n                       version = v;\n                    };\n                    self.getVersion = function() {\n                       return version;\n                    };\n                })();\n                this.updateFileList = function() {\n                    self.generateFileList();\n                };\n                this.fileNameExists = function(name) {\n                    var checkName = name.toLowerCase();\n                    for (var i = 0; i < files.length; i++) {\n                        if (files[i].getFileName().toLowerCase() == checkName) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n                /**\n                 * Checks if name is included in current files names\n                 * @param {string} name Name of file\n                 * @returns {boolean} if found or not found\n                 */\n                function fileNameIncluded(name) {\n                    var checkName = name.toLowerCase() + '/';\n                    for (var i = 0; i < files.length; i++) {\n                        var nameMod = files[i].getFileName().toLowerCase() + '/';\n                        // Check for name as directory existent.\n                        if (nameMod.indexOf(checkName) === 0 || checkName.indexOf(nameMod) === 0) {\n                            return true;\n                        }\n                    }\n                    return false;\n                }\n                /**\n                 * Checks if changing file name results in two blovkly files\n                 * @param {string} oldname The old file name\n                 * @param {string} newname The new file name\n                 * @returns {boolean} if results two two blovkly files\n                 */\n                function twoBlockly(oldname, newname) {\n                    if (VPLUtil.isBlockly(oldname)) {\n                        return false;\n                    }\n                    if (VPLUtil.isBlockly(newname)) {\n                        for (var i = 0; i < files.length; i++) {\n                            if (VPLUtil.isBlockly(files[i].getFileName())) {\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                }\n                this.restrictedPaste = restrictedPaste;\n                this.dropHandler = dropHandler;\n                this.dragoverHandler = dragoverHandler;\n                this.readOnly = readOnly;\n                this.readOnlyFiles = readOnlyFiles;\n                this.restrictedEdit = restrictedEdit;\n                this.adjustTabsTitles = adjustTabsTitles;\n                this.minNumberOfFiles = minNumberOfFiles;\n                this.scrollBarWidth = scrollBarWidth;\n                var localClipboard = \"\";\n                this.setClipboard = function(t) {\n                    localClipboard = t;\n                };\n                this.getClipboard = function() {\n                    return localClipboard;\n                };\n                this.getTabPos = function(fileId) {\n                    for (var i = 0; i < openFiles.length; i++) {\n                        if (openFiles[i].getId() == fileId) {\n                            return i;\n                        }\n                    }\n                    return openFiles.length;\n                };\n                this.getTheme = function() {\n                    return options.theme;\n                };\n                this.setTheme = function(theme) {\n                    options.theme = theme;\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].setTheme(theme);\n                    }\n                };\n                this.addTab = function(fid) {\n                    var hlink = '<a href=\"#vpl_file' + fid + '\"></a>';\n                    tabsUl.append('<li id=\"vpl_tab_name' + fid + '\">' + hlink + '</li>');\n                    tabs.append('<div id=\"vpl_file' + fid + '\" class=\"vpl_ide_file\"></div>');\n                };\n                this.removeTab = function(fid) {\n                    tabsUl.find('#vpl_tab_name' + fid).remove();\n                    tabs.find('#vpl_file' + fid).remove();\n                };\n                this.isReadOnly = function(fileName) {\n                    return this.readOnly || this.readOnlyFiles.indexOf(fileName) != -1;\n                };\n                this.open = function(pos) {\n                    var file;\n                    if (typeof pos == 'object') {\n                        file = pos;\n                    } else {\n                        file = files[pos];\n                    }\n                    if (file.isOpen()) {\n                        return;\n                    }\n                    var fid = file.getId();\n                    self.addTab(fid);\n                    openFiles.push(file);\n                    menuButtons.setGetkeys(file.open());\n                    tabs.tabs('refresh');\n                    adjustTabsTitles(false);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    VPLUtil.delay('updateMenu', updateMenu);\n                };\n                this.closeFile = function(file) {\n                    if (!file.isOpen()) {\n                        return;\n                    }\n                    var pos;\n                    var fid = file.getId();\n                    file.close();\n                    VPLUI.hideIDEStatus();\n                    self.removeTab(fid);\n                    var ptab = self.getTabPos(fid);\n                    openFiles.splice(ptab, 1);\n                    tabs.tabs('refresh');\n                    adjustTabsTitles(false);\n                    self.fileListVisible(true);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    VPLUtil.delay('adjustTabsTitles', adjustTabsTitles, false);\n                    if (openFiles.length == ptab) {\n                        ptab--;\n                    }\n                    if (ptab >= 0 && openFiles.length > ptab) {\n                        pos = self.getFilePosById(openFiles[ptab].getId());\n                        self.gotoFile(pos, 'c');\n                        return;\n                    }\n                };\n                this.isClosed = function(pos) {\n                    return !files[pos].isOpen();\n                };\n                this.fileListVisible = function(b) {\n                    if (b === fileListContainer.vplVisible) {\n                        return;\n                    }\n                    if (b) {\n                        VPLUtil.delay('fileListVisible', function() {\n                            fileListContainer.vplVisible = true;\n                            self.updateFileList();\n                            fileListContainer.show();\n                            autoResizeTab();\n                         });\n                    } else {\n                        VPLUtil.delay('fileListVisible', function() {\n                            fileListContainer.vplVisible = false;\n                            fileListContainer.hide();\n                            autoResizeTab();\n                         });\n                    }\n                };\n                this.isFileListVisible = function() {\n                    return fileListContainer.vplVisible;\n                };\n                this.fileListVisibleIfNeeded = function() {\n                    if (this.isFileListVisible()) {\n                        return;\n                    }\n                    for (var i = 0; i < files.length; i++) {\n                        if (!files[i].isOpen()) {\n                            this.fileListVisible(true);\n                            return;\n                        }\n                    }\n                };\n                this.setFontSize = function(size) {\n                    options.fontSize = size;\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].setFontSize(size);\n                    }\n                    terminal.setFontSize(size);\n                };\n                this.getFontSize = function() {\n                    return options.fontSize;\n                };\n                this.addFile = function(file, replace, ok, showError) {\n                    if ((typeof file.name != 'string') || !VPLUtil.validPath(file.name)) {\n                        showError(str('incorrect_file_name') + '\\n(' + file.name + ')');\n                        return false;\n                    }\n                    if (replace !== true) {\n                        replace = false;\n                    }\n                    var pos = this.fileNameExists(file.name);\n                    if (pos != -1) {\n                        if (replace && !files[pos].isReadOnly()) {\n                            files[pos].setContent(file.contents);\n                            self.setModified();\n                            ok();\n                            VPLUtil.delay('updateFileList', self.updateFileList);\n                            return file;\n                        } else {\n                            showError(str('filenotadded', file.name));\n                            return false;\n                        }\n                    }\n                    if (fileNameIncluded(file.name) || twoBlockly('', file.name)) {\n                        showError(str('filenotadded', file.name));\n                        return false;\n                    }\n                    if (files.length >= maxNumberOfFiles) {\n                        showError(str('maxfilesexceeded') + '\\n(' + maxNumberOfFiles + ')');\n                        return false;\n                    }\n                    var fid = VPLUtil.getUniqueId();\n                    var newfile = new VPLFile(fid, file.name, file.contents, this, vplIdeInstance);\n                    if (file.encoding == 1) {\n                        newfile.extendToBinary();\n                    } else {\n                        if (VPLUtil.isBlockly(file.name)) {\n                            newfile.extendToBlockly();\n                        } else {\n                            newfile.extendToCodeEditor();\n                        }\n                    }\n                    newfile.setFileName(file.name);\n                    files.push(newfile);\n                    self.setModified();\n                    if (files.length > 5) {\n                        self.fileListVisible(true);\n                    }\n                    ok();\n                    return newfile;\n                };\n                this.renameFile = function(oldname, newname, showError) {\n                    var pos = this.fileNameExists(oldname);\n                    try {\n                        if (pos == -1) {\n                            throw new Error(\"Internal error: File name not found\");\n                        }\n                        if (files[pos].getId() < this.minNumberOfFiles) {\n                            throw new Error(\"Internal error: Renaming requested filename\");\n                        }\n                        if (files[pos].getFileName() == newname) {\n                            return true; // Equals name file.\n                        }\n                        if (!VPLUtil.validPath(newname) ||\n                               fileNameIncluded(newname) ||\n                               twoBlockly(oldname, newname)) {\n                            throw str('incorrect_file_name');\n                        }\n                        if (VPLUtil.isBinary(oldname) && VPLUtil.fileExtension(oldname) != VPLUtil.fileExtension(newname)) {\n                            throw str('incorrect_file_name');\n                        }\n                        if (VPLUtil.isBlockly(oldname) != VPLUtil.isBlockly(newname)) {\n                            if (files[pos].getContent() > '') {\n                                showMessage(str('delete_file_fq', oldname), {\n                                    ok: function() {\n                                        var file = {\n                                            name: newname,\n                                            contents: '',\n                                            encoding: 0\n                                        };\n                                        fileManager.deleteFile(oldname, showError);\n                                        var fileResult = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                                        if (fileResult) {\n                                            fileManager.gotoFileName(newname);\n                                        }\n                                    }\n                                });\n                            } else {\n                                var file = {\n                                    name: newname,\n                                    contents: '',\n                                    encoding: 0\n                                };\n                                fileManager.deleteFile(oldname, showError);\n                                var fileResult = fileManager.addFile(file, false, updateMenu, showError);\n                                if (fileResult) {\n                                    fileManager.gotoFileName(newname);\n                                }\n                            }\n                            return true;\n                        }\n                        files[pos].setFileName(newname);\n                    } catch (e) {\n                        showError(str('filenotrenamed', oldname) + '\\n' + e);\n                        return false;\n                    }\n                    self.setModified();\n                    adjustTabsTitles(false);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    return true;\n                };\n                this.directoryExists = function(dirName) {\n                    var checkName = dirName.toLowerCase() + '/';\n                    for (var i = 0; i < files.length; i++) {\n                        if (files[i].getFileName().toLowerCase().startsWith(checkName)) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n                this.renameDirectory = function(oldName, newName, showError) {\n                    if (oldName == newName) {\n                        return false;\n                    }\n                    try {\n                        if (!this.directoryExists(oldName)) {\n                            throw new Error(\"Trying to rename a directory that doesn't exist: \" + oldName);\n                        }\n                        if (!VPLUtil.validPath(newName + '/file.txt')) {\n                            throw str('incorrect_directory_name');\n                        }\n                        // Prepare new names\n                        var oldNameLength = oldName.length + 1;\n                        var checkDirName = oldName.toLowerCase() + '/';\n                        var newFileNames = [];\n                        var i;\n                        for (i = 0; i < files.length; i++) {\n                            var fileName = files[i].getFileName();\n                            if (fileName.toLowerCase().startsWith(checkDirName)) {\n                                if (files[i].getId() < this.minNumberOfFiles) { // Renaming required filename\n                                    throw str('incorrect_file_name');\n                                }\n                                newFileNames[i] = newName + '/' + fileName.substr(oldNameLength);\n                            }\n                        }\n                        if (this.directoryExists(newName)) { // Checks if the merge is possible (no repeated names)\n                            var oldNames = [];\n                            for (i = 0; i < files.length; i++) {\n                                oldNames[files[i].getFileName().toLowerCase()] = true;\n                            }\n                            for (i = 0; i < files.length; i++) {\n                                if (newFileNames[i] && oldNames[newFileNames[i].toLowerCase()]) {\n                                    throw str('incorrect_file_name');\n                                }\n                            }\n                        }\n                        // Set the new file names\n                        for (i = 0; i < newFileNames.length; i++) {\n                            if (newFileNames[i]) {\n                                files[i].setFileName(newFileNames[i]);\n                            }\n                        }\n                    } catch (e) {\n                        showError(str('directory_not_renamed', oldName) + '\\n' + e);\n                        return false;\n                    }\n                    self.setModified();\n                    adjustTabsTitles(false);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    return true;\n                };\n                this.deleteFile = function(name, showError) {\n                    var pos = this.fileNameExists(name);\n                    if (pos == -1) {\n                        showError(str('filenotdeleted', name));\n                        return false;\n                    }\n                    if (files[pos].getId() < minNumberOfFiles) {\n                        showError(str('filenotdeleted', name));\n                        return false;\n                    }\n                    this.setModified();\n                    this.closeFile(files[pos]);\n                    files.splice(pos, 1);\n                    if (openFiles.length == 0) {\n                        VPLUI.hideIDEStatus();\n                    }\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    return true;\n                };\n                this.currentFile = function() {\n                    var id = tabs.tabs('option', 'active');\n                    if (id in openFiles) {\n                        var file = openFiles[id];\n                        if (arguments.length === 0) {\n                            return file;\n                        }\n                        var action = arguments[0];\n                        if (typeof file[action] === 'function') {\n                            var fun = file[action];\n                            var args = Array.prototype.slice(arguments);\n                            args.shift();\n                            return fun.apply(file, args);\n                        }\n                    }\n                    return false;\n                };\n                this.getCurrentFileName = function() {\n                    var currentFileName = '';\n                    var currentFile = fileManager.currentFile();\n                    if (currentFile) {\n                        currentFileName = currentFile.name;\n                    }\n                    return currentFileName;\n                };\n                this.currentPos = function() {\n                    return tabs.tabs('option', 'active');\n                };\n                this.getFileTab = function(id) {\n                    for (var i = 0; i < openFiles.length; i++) {\n                        if (openFiles[i].getId() == id) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n                this.getFilePosById = function(id) {\n                    for (var i = 0; i < files.length; i++) {\n                        if (files[i].getId() == id) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n                this.gotoFile = function(pos, l) {\n                    var file = files[pos];\n                    self.open(file);\n                    tabs.tabs('option', 'active', self.getFileTab(file.getId()));\n                    if (l !== 'c') {\n                        file.gotoLine(parseInt(l, 10));\n                    }\n                    file.focus();\n                };\n                this.gotoFileLink = function(a) {\n                    var tag = $(a);\n                    var fname = tag.data('file');\n                    var fpos = -1;\n                    if (fname > '') {\n                        fpos = this.fileNameExists(fname);\n                    } else {\n                        fpos = self.getFilePosById(tag.data('fileid'));\n                    }\n                    if (fpos >= 0) {\n                        var line = tag.data('line');\n                        if (typeof line == 'undefined') {\n                            line = 'c';\n                        }\n                        self.gotoFile(fpos, line);\n                        return true;\n                    }\n                    return false;\n                };\n                this.gotoFileName = function(fname, line) {\n                    var fpos = this.fileNameExists(fname);\n                    if (fpos >= 0) {\n                        if (typeof line == 'undefined') {\n                            line = 'c';\n                        }\n                        self.gotoFile(fpos, line);\n                        return true;\n                    }\n                    return false;\n                };\n                this.getFilesToSave = function() {\n                    var ret = [];\n                    for (var i = 0; i < files.length; i++) {\n                        var file = {};\n                        file.name = files[i].getFileName();\n                        file.contents = files[i].getContent();\n                        file.encoding = files[i].isBinary() ? 1 : 0;\n                        ret.push(file);\n                    }\n                    return ret;\n                };\n                this.resetModified = function() {\n                    modified = false;\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].resetModified();\n                    }\n                    VPLUtil.delay('updateMenu', updateMenu);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                };\n                this.setModified = function() {\n                    modified = true;\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    VPLUtil.delay('updateMenu', updateMenu);\n                };\n                this.isModified = function() {\n                    return modified;\n                };\n                this.length = function() {\n                    return files.length;\n                };\n                this.clearAnnotations = function() {\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].clearAnnotations();\n                    }\n                };\n                this.getFile = function(i) {\n                    return files[i];\n                };\n                this.getFiles = function() {\n                    return files;\n                };\n                this.getDirectoryStructure = function() {\n                    var structure = {\n                        isDir: true,\n                        content: {},\n                        path: '',\n                    };\n                    /**\n                     * Adds a new file the structure of directories\n                     * @param {int} i Index of file to add in the file array\n                     */\n                    function addFilePath(i) {\n                        var file = files[i];\n                        var fileName = file.getFileName();\n                        var path = fileName.split(\"/\");\n                        var curdir = structure;\n                        var pathdir = '';\n                        for (var p = 0; p < path.length; p++) {\n                            var part = path[p];\n                            if (p == path.length - 1) { // File.\n                                curdir.content[part] = {\n                                    isDir: false,\n                                    content: file,\n                                    pos: i,\n                                };\n                            } else {\n                                pathdir += part;\n                                if (!curdir.content[part]) { // New dir.\n                                    curdir.content[part] = {\n                                        isDir: true,\n                                        content: {},\n                                        path: pathdir,\n                                    };\n                                }\n                                // Descend Dir.\n                                pathdir += '/';\n                                curdir = curdir.content[part];\n                            }\n                        }\n                    }\n                    for (var i in files) {\n                        if (files.hasOwnProperty(i)) {\n                            addFilePath(i);\n                        }\n                    }\n                    return structure;\n                };\n                this.generateFileList = function() {\n                    if (!self.isFileListVisible()) {\n                        return;\n                    }\n                    var dirIndent = '<span class=\"vpl_ide_dirindent\"></span>';\n                    /**\n                     * Generates an array of string with the HTML code to represent the list of IDE files\n                     * @param {Object} dir Current directory\n                     * @param {int} indent Html code to indent subdirectories\n                     * @param {Array} lines Output. Each line contains the HTML to represent an IDE file\n                     */\n                    function lister(dir, indent, lines) {\n                        var name, fd, sname, attrs, dirline, file, path, line;\n                        for (name in dir.content) {\n                            if (dir.content.hasOwnProperty(name)) {\n                                fd = dir.content[name];\n                                if (fd.isDir) {\n                                    var dirpath = VPLUtil.sanitizeText(fd.path);\n                                    attrs = 'href=\"#\" data-dirname=\"' + dirpath + '\" ';\n                                    sname = VPLUtil.sanitizeText(name);\n                                    dirline = indent;\n                                    dirline += VPLUI.iconFolder() + '<a ' + attrs + '>' + sname + '</a>';\n                                    lines.push(dirline);\n                                    lister(fd, indent + dirIndent, lines);\n                                } else {\n                                    file = fd.content;\n                                    sname = VPLUtil.sanitizeText(name);\n                                    path = VPLUtil.sanitizeText(file.getFileName());\n                                    if (file.isOpen()) {\n                                        sname = '<b>' + sname + '</b>';\n                                    }\n                                    attrs = 'href=\"#\" data-fileid=\"' + file.getId() + '\" title=\"' + path + '\"';\n                                    line = '<a ' + attrs + '>' + sname + '</a>';\n                                    if (file.isModified()) {\n                                        line = VPLUI.iconModified() + line;\n                                    }\n                                    if (file.isReadOnly()) {\n                                        line = line + VPLUI.iconReadOnly();\n                                    } else if (file.getId() < minNumberOfFiles) {\n                                        line = line + VPLUI.iconRequired();\n                                    }\n                                    lines.push(indent + line);\n                                }\n                            }\n                        }\n                    }\n\n                    var structure = self.getDirectoryStructure();\n                    var lines = [];\n                    var html = '';\n                    lister(structure, '', lines);\n                    for (var i = 0; i < lines.length; i++) {\n                        html += lines[i] + '<br>';\n                    }\n                    fileListContent.html('<div>' + html + '</div>');\n                };\n                tabsUl.on('click', 'span.vpl_ide_closeicon', function() {\n                    fileManager.closeFile(fileManager.currentFile());\n                });\n                tabsUl.on('dblclick', 'span.vpl_ide_closeicon', menuButtons.getAction('delete'));\n                tabsUl.on('dblclick', 'a', menuButtons.getAction('rename'));\n                fileListContent.on('dblclick', 'a[data-fileid]', menuButtons.getAction('rename'));\n                fileListContent.on('dblclick', 'a[data-dirname]', renameDiretoryAction);\n            }\n            this.updateEvaluationNumber = function(res) {\n                if (typeof res.nevaluations != 'undefined') {\n                    var text = res.nevaluations;\n                    if (typeof res.reductionbyevaluation != 'undefined'\n                         && res.reductionbyevaluation > ''\n                         && res.reductionbyevaluation != 0) {\n                        if (res.freeevaluations != 0) {\n                            text = text + '/' + res.freeevaluations;\n                        }\n                        text = text + ' -' + res.reductionbyevaluation;\n                    }\n                    menuButtons.setExtracontent('evaluate', text);\n                }\n            };\n            this.lastResult = null;\n            this.getTerminal = function() {\n                return terminal;\n            };\n            this.setResultGrade = function(content, raw) {\n                var name = 'grade';\n                var titleclass = 'vpl_ide_accordion_t_' + name;\n                var contentclass = 'vpl_ide_accordion_c_' + name;\n                if (result.find('.' + contentclass).length == 0) {\n                    result.append('<div class=\"' + titleclass + '\"></div>');\n                    result.append('<div class=\"' + contentclass + '\"></div>');\n                }\n                if (typeof raw == 'undefined') {\n                    return result.find('h4.' + titleclass).length > 0;\n                }\n                var titleTag = result.find('.' + titleclass);\n                if (content > '') {\n                    titleTag.replaceWith('<h4 class=\"' + titleclass + '\">' + content + '</h4>');\n                    return true;\n                } else {\n                    titleTag.replaceWith('<div class=\"' + titleclass + '\"></div>');\n                    return false;\n                }\n            };\n            this.setResultTab = function(name, content, raw) {\n                var titleclass = 'vpl_ide_accordion_t_' + name;\n                var contentclass = 'vpl_ide_accordion_c_' + name;\n                if (result.find('.' + contentclass).length == 0) {\n                    result.append('<div class=\"' + titleclass + '\"></div>');\n                    result.append('<div class=\"' + contentclass + '\"></div>');\n                }\n                if (typeof raw == 'undefined') {\n                    return result.find('h4.' + titleclass).length > 0;\n                }\n                var titleTag = result.find('.' + titleclass);\n                var contentTag = result.find('.' + contentclass);\n                var HTMLcontent = $('<div>' + content + '</div>');\n                HTMLcontent.find('h4').replaceWith(function() {\n                    return $(\"<h5>\").append($(this).contents());\n                });\n                if (contentTag.html() == HTMLcontent.html()) {\n                    return content > '';\n                }\n                if (content > '') {\n                    titleTag.replaceWith('<h4 class=\"' + titleclass + '\">' + str(name) + '</h4>');\n                    contentTag.replaceWith('<div class=\"ui-widget ' + contentclass + '\">' + HTMLcontent.html() + '</div>');\n                    return true;\n                } else {\n                    titleTag.replaceWith('<div class=\"' + titleclass + '\"></div>');\n                    contentTag.replaceWith('<div class=\"' + contentclass + '\"></div>');\n                    return false;\n                }\n            };\n            this.applyMathJax = function() {\n                if (typeof window.MathJax == 'object') { // MathJax is loaded\n                    try {\n                        let math = result.find(\".vpl_ide_accordion_c_description\")[0];\n                        if (math) {\n                            if (window.MathJax.Hub && window.MathJax.Hub.Queue) {\n                                window.MathJax.Hub.Queue([\"Typeset\", window.MathJax.Hub, math]);\n                            } else if (window.MathJax.startup && window.MathJax.startup.promise) {\n                                window.MathJax.startup.promise = window.MathJax.startup.promise\n                                .then(() => window.MathJax.typesetPromise([math]))\n                                .catch(e => {\n                                    VPLUtil.log(\"MathJax error\" + e);\n                                });\n                            }\n                        }\n                    } catch (e) {\n                        VPLUtil.log(\"MathJax error\" + e);\n                    }\n                }\n            };\n            this.setResult = function(res, go) {\n                self.updateEvaluationNumber(res);\n                var files = fileManager.getFiles();\n                var fileNames = [];\n                var i;\n                for (i = 0; i < files.length; i++) {\n                    fileNames[i] = files[i].getFileName();\n                    files[i].clearAnnotations();\n                }\n                var show = false;\n                var hasContent;\n                var grade = VPLUtil.sanitizeText(res.grade);\n                var gradeShow;\n                var formated;\n                gradeShow = self.setResultGrade(grade, res.grade);\n                show = show || gradeShow;\n                hasContent = self.setResultTab('variables', res.variables, res.variables);\n                show = show || hasContent;\n                formated = VPLUtil.processResult(res.compilation, fileNames, files, true, false);\n                hasContent = self.setResultTab('compilation', formated, res.compilation);\n                show = show || hasContent;\n                formated = VPLUtil.processResult(res.evaluation, fileNames, files, false, false);\n                hasContent = self.setResultTab('comments', formated, res.evaluation);\n                show = show || hasContent;\n                formated = VPLUtil.sanitizeText(res.execution);\n                hasContent = self.setResultTab('execution', formated, res.execution);\n                show = show || hasContent;\n                hasContent = self.setResultTab('description', window.VPLDescription, window.VPLDescription);\n                if (hasContent) {\n                    self.applyMathJax();\n                }\n                show = show || hasContent;\n                if (show) {\n                    resultContainer.show();\n                    resultContainer.vplVisible = true;\n                    result.accordion(\"refresh\");\n                    result.accordion('option', 'active', gradeShow ? 1 : 0);\n                    for (i = 0; i < files.length; i++) {\n                        var anot = files[i].getAnnotations();\n                        for (var j = 0; j < anot.length; j++) {\n                            if (go || anot[j].type == 'error') {\n                                fileManager.gotoFile(i, anot[j].row + 1);\n                                break;\n                            }\n                        }\n                    }\n                    $('#vpl_ide_shrightpanel').show();\n                } else {\n                    resultContainer.hide();\n                    resultContainer.vplVisible = false;\n                    $('#vpl_ide_shrightpanel').hide();\n                }\n                VPLUtil.delay('autoResizeTab', autoResizeTab);\n                VPLUtil.delay('fixAccordion', function() {\n                    result.accordion('option', 'active', gradeShow ? 1 : 0);\n                });\n            };\n\n            result.accordion({\n                heightStyle: 'fill',\n                header: 'h4',\n                animate: false,\n                beforeActivate: avoidSelectGrade,\n            });\n            resultContainer.width(2 * resultContainer.vplMinWidth);\n            result.on('click', 'a', function(event) {\n                if (fileManager.gotoFileLink(event.currentTarget)) {\n                    event.preventDefault();\n                }\n            });\n            resultContainer.vplVisible = false;\n            resultContainer.hide();\n\n            fileListContainer.addClass('ui-tabs ui-widget ui-widget-content ui-corner-all');\n            fileList.text(str('filelist'));\n            fileList.html(VPLUI.iconFolder() + fileList.html());\n            fileList.addClass(\"ui-widget-header ui-button-text-only ui-corner-all\");\n            fileListContent.addClass(\"ui-widget ui-corner-all\");\n            fileListContainer.width(2 * fileListContainer.vplMinWidth);\n            fileListContainer.on('click', 'a', function(event) {\n                event.preventDefault();\n                fileManager.gotoFileLink(event.currentTarget);\n            });\n            fileListContainer.vplVisible = false;\n            fileListContainer.hide();\n            var tabsAir = false;\n            /**\n             * Returns separation space\n             * @returns {int} size in pixels\n             */\n            function getTabsAir() {\n                if (tabsAir === false) {\n                    tabsAir = (tabs.outerWidth(true) - tabs.width()) / 2;\n                }\n                return tabsAir;\n            }\n            /**\n             * Resize tab width\n             * @param {Event} e Unused\n             * @param {Object} ui UI object\n             */\n            function resizeTabWidth(e, ui) {\n                var diffLeft = ui.position.left - ui.originalPosition.left;\n                var maxWidth;\n                if (diffLeft !== 0) {\n                    maxWidth = tabs.width() + fileListContainer.width() - fileListContainer.vplMinWidth;\n                    tabs.resizable('option', 'maxWidth', maxWidth);\n                    fileListContainer.width(fileListContainer.vplOriginalWidth + diffLeft);\n                } else {\n                    maxWidth = tabs.width() + resultContainer.width() - resultContainer.vplMinWidth;\n                    tabs.resizable('option', 'maxWidth', maxWidth);\n                    var diffWidth = ui.size.width - ui.originalSize.width;\n                    resultContainer.width(resultContainer.vplOriginalWidth - diffWidth);\n                }\n                fileManager.currentFile('adjustSize');\n            }\n            var resizableOptions = {\n                containment: 'parent',\n                resize: resizeTabWidth,\n                start: function() {\n                    $(window).off('resize', autoResizeTab);\n                    tabs.resizable('option', 'minWidth', 100);\n                    if (resultContainer.vplVisible) {\n                        resultContainer.vplOriginalWidth = resultContainer.width();\n                    }\n                    if (fileListContainer.vplVisible) {\n                        fileListContainer.vplOriginalWidth = fileListContainer.width();\n                    }\n                },\n                stop: function(e, ui) {\n                    resizeTabWidth(e, ui);\n                    tabs.resizable('option', 'maxWidth', 100000);\n                    tabs.resizable('option', 'minWidth', 0);\n                    autoResizeTab();\n                    $(window).on('resize', autoResizeTab);\n                },\n                handles: \"\"\n            };\n            tabs.resizable(resizableOptions);\n             /**\n              * Updates handles for internal IDE resize\n              */\n            function updateTabsHandles() {\n                var handles = ['e', 'w', 'e', 'e, w'];\n                var index = 0;\n                index += fileListContainer.vplVisible ? 1 : 0;\n                index += resultContainer.vplVisible ? 2 : 0;\n                tabs.resizable('destroy');\n                resizableOptions.handles = handles[index];\n                resizableOptions.disable = index === 0;\n                tabs.resizable(resizableOptions);\n            }\n            /**\n             * Resize the IDE height\n             */\n            function resizeHeight() {\n                var newHeight = $(window).outerHeight();\n                newHeight -= menu.offset().top + menu.height() + (fullScreen ? getTabsAir() : 20);\n                if (newHeight < 250) {\n                    newHeight = 250;\n                }\n                tr.height(newHeight);\n                var panelHeight = newHeight - 3 * getTabsAir();\n                tabs.height(panelHeight);\n                if (resultContainer.vplVisible) {\n                    resultContainer.height(panelHeight + getTabsAir());\n                    result.accordion('refresh');\n                }\n                if (fileListContainer.vplVisible) {\n                    fileListContent.height(panelHeight - (fileList.outerHeight() + getTabsAir()));\n                    fileListContainer.height(panelHeight);\n                }\n            }\n            adjustTabsTitles = function(center) {\n                var newWidth = tabs.width();\n                var tabsUlWidth = 0;\n                tabsUl.width(100000);\n                var last = tabsUl.children('li:visible').last();\n                if (last.length) {\n                    var parentScrollLeft = tabsUl.parent().scrollLeft();\n                    tabsUlWidth = parentScrollLeft + last.position().left + last.width() + tabsAir;\n                    tabsUl.width(tabsUlWidth);\n                    var file = fileManager.currentFile();\n                    if (file && center) {\n                        var fileTab = $(file.getTabNameId());\n                        var scroll = parentScrollLeft + fileTab.position().left;\n                        scroll -= (newWidth - fileTab.outerWidth()) / 2;\n                        if (scroll < 0) {\n                            scroll = 0;\n                        }\n                        tabsUl.parent().finish().animate({\n                            scrollLeft: scroll\n                        }, 'slow');\n                    }\n                }\n                if (tabsUlWidth < newWidth) {\n                    tabsUl.width('');\n                }\n            };\n            autoResizeTab = function() {\n                var oldWidth = tabs.width();\n                var newWidth = menu.width();\n                var planb = false;\n                updateTabsHandles();\n                tr.width(menu.outerWidth());\n                if (fileListContainer.vplVisible) {\n                    var left = fileListContainer.outerWidth() + tabsAir;\n                    oldWidth += left;\n                    if (left >= 100) {\n                        newWidth -= left;\n                        tabs.css('left', left);\n                    } else {\n                        planb = true;\n                    }\n                } else {\n                    tabs.css('left', 0);\n                }\n                if (resultContainer.vplVisible) {\n                    var right = resultContainer.outerWidth() + tabsAir;\n                    oldWidth += right;\n                    newWidth -= right;\n                    if (newWidth < 100) {\n                        planb = true;\n                    }\n                }\n                if (planb) {\n                    var rel = menu.width() / oldWidth;\n                    var wfl = 0;\n                    if (fileListContainer.vplVisible) {\n                        wfl = fileListContainer.width() * rel;\n                        fileListContainer.width(wfl - tabsAir);\n                        wfl += tabsAir;\n                        tabs.css('left', wfl);\n                    }\n                    tabs.width(tabs.width() * rel);\n                    if (resultContainer.vplVisible) {\n                        resultContainer.width(menu.width() - (wfl + tabs.width() + tabsAir));\n                    }\n                } else {\n                    tabs.width(newWidth);\n                }\n                adjustTabsTitles(true);\n                resizeHeight();\n                fileManager.currentFile('adjustSize');\n            };\n            /**\n             * Transfer focus to current file\n             */\n            function focusCurrentFile() {\n                fileManager.currentFile('focus');\n            }\n            var dialogbaseOptions = $.extend({}, {\n                close: focusCurrentFile\n            }, VPLUI.dialogbaseOptions);\n            /**\n             * Shows a dialog with a message.\n             * @param {string} message\n             * @param {Object} options icon, title, actions handler (ok, yes, no, close)\n             * @returns {JQuery} JQueryUI Dialog object already open\n             */\n            function showMessage(message, options) {\n                return VPLUI.showMessage(message, $.extend({}, dialogbaseOptions, options));\n            }\n            showErrorMessage = function(message) {\n                return VPLUI.showErrorMessage(message, {\n                    close: focusCurrentFile\n                });\n            };\n\n            var dialogNew = $('#vpl_ide_dialog_new');\n            /**\n             * The event handler for the new file action\n             * @param {Object} event\n             * @return {boolean}\n             */\n            function newFileHandler(event) {\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n                    return true;\n                }\n                dialogNew.dialog('close');\n                var file = {\n                    name: $('#vpl_ide_input_newfilename').val(),\n                    contents: '',\n                    encoding: 0\n                };\n                var newfile = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                if (newfile) {\n                    fileManager.open(newfile);\n                    tabs.tabs('option', 'active', fileManager.getTabPos(newfile.getId()));\n                    newfile.focus();\n                    return true;\n                }\n                return false;\n            }\n\n            var dialogButtons = {};\n            dialogButtons[str('ok')] = newFileHandler;\n            dialogButtons[str('cancel')] = function() {\n                $(this).dialog('close');\n            };\n            dialogNew.find('input').on('keypress', newFileHandler);\n            dialogNew.dialog($.extend({}, dialogbaseOptions, {\n                title: str('create_new_file'),\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogNew, 'new');\n\n            var dialogRename = $('#vpl_ide_dialog_rename');\n            /**\n             * The event handler for the rename current file action\n             * @param {Object} event\n             */\n            function renameHandler(event) {\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n                    return;\n                }\n                dialogRename.dialog('close');\n                fileManager.renameFile(fileManager.currentFile('getFileName'),\n                        $('#vpl_ide_input_renamefilename').val(), showErrorMessage);\n                event.preventDefault();\n            }\n            dialogRename.find('input').on('keypress', renameHandler);\n            dialogButtons[str('ok')] = renameHandler;\n            dialogRename.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    $('#vpl_ide_input_renamefilename').val(fileManager.currentFile('getFileName'));\n                },\n                title: str('rename_file'),\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogRename, 'rename');\n\n            var dialogRenameDirectory = $('#vpl_ide_dialog_renamedir');\n            /**\n             * The event handler for rename a directory\n             * @param {Object} event\n             */\n            function renameDirectoryHandler(event) {\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n                    return;\n                }\n                dialogRenameDirectory.dialog('close');\n                fileManager.renameDirectory($('#vpl_ide_input_olddirectoryname').val(),\n                        $('#vpl_ide_input_renamedirectory').val(), showErrorMessage);\n                event.preventDefault();\n            }\n            dialogRenameDirectory.find('input').on('keypress', renameDirectoryHandler);\n            dialogButtons[str('ok')] = renameDirectoryHandler;\n            dialogRenameDirectory.dialog($.extend({}, dialogbaseOptions, {\n                title: str('rename_directory'),\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogRenameDirectory, 'filelist');\n            renameDiretoryAction = function(event) {\n                if (event.target.hasAttribute('data-dirname')) {\n                    var dirname = event.target.getAttribute('data-dirname');\n                    $('#vpl_ide_input_olddirectoryname').val(dirname);\n                    $('#vpl_ide_input_renamedirectory').val(dirname);\n                    dialogRenameDirectory.dialog('open');\n                }\n            };\n            var dialogComments = $('#vpl_ide_dialog_comments');\n            var oldStudentComments = '';\n            dialogButtons[str('ok')] = function() {\n                if (oldStudentComments != $('#vpl_ide_input_comments').val()) {\n                    fileManager.setModified();\n                }\n                $(this).dialog('close');\n            };\n            dialogComments.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    oldStudentComments = $('#vpl_ide_input_comments').val();\n                },\n                title: str('comments'),\n                width: '40em',\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogComments, 'comments');\n\n            $('#vpl_ide_input_comments').width('30em');\n            var aboutDialog = $('#vpl_ide_dialog_about');\n            var OKButtons = {};\n            OKButtons[str('ok')] = function() {\n                $(this).dialog('close');\n            };\n            var shortcutDialog = $('#vpl_ide_dialog_shortcuts');\n            shortcutDialog.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    var html = menuButtons.getShortcuts(fileManager.currentFile('getEditor'));\n                    $('#vpl_ide_dialog_shortcuts').html(html);\n                },\n                title: str('shortcuts'),\n                width: 400,\n                height: 300,\n                buttons: OKButtons\n            }));\n            shortcutDialog.dialog('option', 'height', 300);\n            VPLUI.setDialogTitleIcon(shortcutDialog, 'shortcuts');\n\n            OKButtons[str('shortcuts')] = function() {\n                $(this).dialog('close');\n                shortcutDialog.dialog('open');\n            };\n            aboutDialog.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    var html = menuButtons.getShortcuts(fileManager.currentFile('getEditor'));\n                    aboutDialog.next().find(\"button\").filter(\n                        function() {\n                            return $(this).text() == str('shortcuts');\n                        }\n                  ).button(html != '' ? 'enable' : 'disable');\n                },\n                title: str('about'),\n                width: 400,\n                height: 300,\n                buttons: OKButtons\n            }));\n            aboutDialog.dialog('option', 'height', 300);\n            VPLUI.setDialogTitleIcon(aboutDialog, 'about');\n\n            var dialogSort = $('#vpl_ide_dialog_sort');\n            var dialogSortButtons = {};\n            dialogSortButtons[str('ok')] = function() {\n                var files = fileManager.getFiles();\n                var regNoNumber = /[^\\d]*/;\n                var sorted = [];\n                var i = 0;\n                var newOrder = $('#vpl_sort_list li');\n                if (newOrder.length != files.length) {\n                    return;\n                }\n                newOrder.each(function() {\n                    var orig = parseInt(this.id.replace(regNoNumber, ''));\n                    sorted.push(files[orig]);\n                });\n                for (i = 0; i < newOrder.length; i++) {\n                    files[i] = sorted[i];\n                }\n                fileManager.setModified();\n                $(this).dialog('close');\n            };\n            dialogSortButtons[str('cancel')] = function() {\n                $(this).dialog('close');\n            };\n            dialogSort.dialog($.extend({}, dialogbaseOptions, {\n                title: str('sort'),\n                buttons: dialogSortButtons,\n                open: function() {\n                    var list = $('#vpl_sort_list');\n                    list.html('');\n                    var files = fileManager.getFiles();\n                    for (var i = 0; i < files.length; i++) {\n                        var file = $('<li id=\"vpl_fsort_' + i + '\"class=\"ui-widget-content\"></li>');\n                        if (files[i].getId() < minNumberOfFiles) {\n                            file.addClass('ui-state-disabled');\n                        }\n                        file.text((i + 1) + '-' + files[i].getFileName());\n                        list.append(file);\n                    }\n                    list.sortable({\n                        items: \"li:not(.ui-state-disabled)\",\n                        placeholder: \"ui-state-highlight\",\n                        start: function(event, ui) {\n                            ui.item.addClass('ui-state-highlight');\n                        },\n                        stop: function(event, ui) {\n                            ui.item.removeClass('ui-state-highlight');\n                        },\n                    });\n                    list.disableSelection();\n                },\n                maxHeight: 400\n            }));\n            VPLUI.setDialogTitleIcon(dialogSort, 'sort');\n\n            var dialogMultidelete = $('#vpl_ide_dialog_multidelete');\n            var dialogMultideleteButtons = {};\n            dialogMultideleteButtons[str('selectall')] = function() {\n                $(this).find('input').prop(\"checked\", true);\n            };\n            dialogMultideleteButtons[str('deselectall')] = function() {\n                $(this).find('input').prop(\"checked\", false);\n            };\n            dialogMultideleteButtons[str('deleteselected')] = function() {\n                var files = fileManager.getFiles();\n                var toDeleteList = [];\n                var labelList = $('#vpl_multidelete_list label');\n                labelList.each(function() {\n                    var label = $(this);\n                    if (label.find('input').prop('checked')) {\n                        var id = label.data('fileid');\n                        toDeleteList.push(files[id].getFileName());\n                    }\n                });\n                for (var i = 0; i < toDeleteList.length; i++) {\n                    fileManager.deleteFile(toDeleteList[i], showErrorMessage);\n                }\n                VPLUtil.delay('updateMenu', updateMenu);\n                VPLUtil.delay('updateFileList', fileManager.updateFileList);\n                $(this).dialog('close');\n            };\n            dialogMultideleteButtons[str('cancel')] = function() {\n                $(this).dialog('close');\n            };\n            dialogMultidelete.dialog($.extend({}, dialogbaseOptions, {\n                title: str('multidelete'),\n                buttons: dialogMultideleteButtons,\n                open: function() {\n                    var list = $('#vpl_multidelete_list');\n                    list.html('');\n                    var files = fileManager.getFiles();\n                    for (var i = minNumberOfFiles; i < files.length; i++) {\n                        var name = VPLUtil.sanitizeText(files[i].getFileName());\n                        var file = $('<label><input type=\"checkbox\"> ' + name + '</label>');\n                        file.data('fileid', i);\n                        list.append(file);\n                        list.append('<br>');\n                    }\n                    list.find('label').button();\n                },\n                maxHeight: 400,\n                maxWidth: 400\n            }));\n            VPLUI.setDialogTitleIcon(dialogMultidelete, 'multidelete');\n\n            var dialogFontsize = $('#vpl_ide_dialog_fontsize');\n            var fontsizeSlider = $('#vpl_ide_dialog_fontsize .vpl_fontsize_slider');\n            var dialogFontFizeButtons = {};\n            dialogFontFizeButtons[str('ok')] = function() {\n                var value = fontsizeSlider.slider(\"value\");\n                fileManager.setFontSize(value);\n                $(this).dialog('close');\n                VPLUtil.setUserPreferences({fontSize: value});\n            };\n            dialogFontFizeButtons[str('cancel')] = function() {\n                fileManager.setFontSize(fontsizeSlider.data(\"vpl_fontsize\"));\n                $(this).dialog('close');\n            };\n            dialogFontFizeButtons[str('reset')] = function() {\n                fontsizeSlider.slider('value', 12);\n            };\n            dialogFontsize.dialog($.extend({}, dialogbaseOptions, {\n                title: str('fontsize'),\n                buttons: dialogFontFizeButtons,\n                open: function() {\n                    fontsizeSlider.data(\"vpl_fontsize\", fileManager.getFontSize());\n                    fontsizeSlider.slider('value', fileManager.getFontSize());\n                },\n            }));\n            fontsizeSlider.slider({\n                min: 1,\n                max: 48,\n                change: function() {\n                    var value = fontsizeSlider.slider(\"value\");\n                    fileManager.setFontSize(value);\n                    dialogFontsize.find('.vpl_fontsize_slider_value').text(value);\n                }\n            });\n            VPLUI.setDialogTitleIcon(dialogFontsize, 'fontsize');\n\n            var dialogAceTheme = $('#vpl_ide_dialog_acetheme');\n            var acethemeSelect = $('#vpl_ide_dialog_acetheme select');\n            var dialogAceThemeButtons = {};\n            dialogAceThemeButtons[str('ok')] = function() {\n                fileManager.setTheme(acethemeSelect.val());\n                $(this).dialog('close');\n                VPLUtil.setUserPreferences({aceTheme: acethemeSelect.val()});\n            };\n            dialogAceThemeButtons[str('cancel')] = function() {\n                fileManager.setTheme(acethemeSelect.data(\"acetheme\"));\n                $(this).dialog('close');\n            };\n            dialogAceThemeButtons[str('reset')] = function() {\n                acethemeSelect.val(acethemeSelect.data(\"acetheme\"));\n                fileManager.setTheme(acethemeSelect.val());\n            };\n            dialogAceTheme.dialog($.extend({}, dialogbaseOptions, {\n                title: str('theme'),\n                buttons: dialogAceThemeButtons,\n                modal: false,\n                open: function() {\n                    acethemeSelect.data(\"acetheme\", fileManager.getTheme());\n                    acethemeSelect.val(fileManager.getTheme());\n                },\n            }));\n            acethemeSelect.on('change', function() {\n                    fileManager.setTheme(acethemeSelect.val());\n            });\n            VPLUI.setDialogTitleIcon(dialogAceTheme, 'theme');\n\n            var terminal = new VPLTerminal('vpl_dialog_terminal', 'vpl_terminal', str);\n            var VNCClient = new VPLVNCClient('vpl_dialog_vnc', str);\n            var lastConsole = terminal;\n            var fileSelect = $('#vpl_ide_input_file');\n            var fileSelectHandler = function() {\n                VPLUI.readSelectedFiles(this.files, function(file) {\n                    return fileManager.addFile(file, true, updateMenu, showErrorMessage);\n                },\n                function() {\n                    fileManager.fileListVisibleIfNeeded();\n                });\n            };\n            fileSelect.on('change', fileSelectHandler);\n            // Menu acctions.\n            menuButtons.add({\n                name: 'filelist',\n                originalAction: function() {\n                    fileManager.fileListVisible(!fileManager.isFileListVisible());\n                    VPLUtil.delay('updateMenu', updateMenu);\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\n                    VPLUtil.delay('updateFileList', fileManager.updateFileList);\n                },\n                bindKey: {\n                    win: 'Ctrl-L',\n                    mac: 'Ctrl-L'\n                }\n            });\n\n            menuButtons.add({\n                name: 'new',\n                originalAction: function() {\n                    if (fileManager.length() < maxNumberOfFiles) {\n                        dialogNew.dialog('open');\n                    }\n                },\n                bindKey: {\n                    win: 'Alt-N',\n                    mac: 'Option-N'\n                }\n            });\n            menuButtons.add({\n                name: 'rename',\n                originalAction: function() {\n                    var file = fileManager.currentFile();\n                    if (file && file.getId() >= minNumberOfFiles) {\n                        dialogRename.dialog('open');\n                    }\n                },\n                bindKey: {\n                    win: 'Ctrl-R',\n                    mac: 'Ctrl-R'\n                }\n            });\n            menuButtons.add({\n                name: 'delete',\n                originalAction: function() {\n                    var file = fileManager.currentFile();\n                    if (!file) {\n                        return;\n                    }\n                    var filename = file.getFileName();\n                    var message = str('delete_file_fq', filename);\n                    showMessage(message, {\n                        ok: function() {\n                            fileManager.deleteFile(filename, showErrorMessage);\n                        },\n                        title: str('delete_file_q'),\n                        icon: 'trash'\n                    });\n                },\n                bindKey: {\n                    win: 'Ctrl-D',\n                    mac: 'Ctrl-D'\n                }\n            });\n            menuButtons.add({\n                name: 'close',\n                originalAction: function() {\n                    var file = fileManager.currentFile();\n                    if (!file) {\n                        return;\n                    }\n                    fileManager.closeFile(file);\n                },\n                bindKey: {\n                    win: 'Alt-W',\n                    mac: 'Option-W'\n                }\n            });\n            menuButtons.add({\n                name: 'import',\n                originalAction: function() {\n                    fileSelect.val('');\n                    fileSelect.trigger('click');\n                },\n                bindKey: {\n                    win: 'Ctrl-I',\n                    mac: 'Ctrl-I'\n                }\n            });\n            menuButtons.add({\n                name: 'sort',\n                originalAction: function() {\n                    dialogSort.dialog('open');\n                },\n                bindKey: {\n                    win: 'Ctrl-O',\n                    mac: 'Ctrl-O'\n                }\n            });\n            menuButtons.add({\n                name: 'multidelete',\n                originalAction: function() {\n                    dialogMultidelete.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'showparentfiles',\n                originalAction: function() {\n                    openpopup(null, {\n                        url: options.showparentfilesurl,\n                        options: 'width=' + Math.max(screen.availWidth / 2, 780) +\n                                 ',height=' + screen.availHeight +\n                                 ',left=' + (screen.availWidth / 4)\n                    });\n                }\n            });\n            menuButtons.add({\n                name: 'fontsize',\n                originalAction: function() {\n                    dialogFontsize.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'theme',\n                originalAction: function() {\n                    dialogAceTheme.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'print',\n                originalAction: function() {\n                    window.print();\n                },\n                bindKey: {\n                    win: 'Alt-P',\n                    mac: 'Command-P'\n                }\n            });\n            menuButtons.add({\n                name: 'undo',\n                originalAction: function() {\n                    fileManager.currentFile('undo');\n                }\n            });\n            menuButtons.add({\n                name: 'redo',\n                originalAction: function() {\n                    fileManager.currentFile('redo');\n                }\n            });\n            menuButtons.add({\n                name: 'select_all',\n                editorName: 'selectall',\n                originalAction: function() {\n                    fileManager.currentFile('selectAll');\n                }\n            });\n            menuButtons.add({\n                name: 'find',\n                originalAction: function() {\n                    fileManager.currentFile('find');\n                }\n            });\n            menuButtons.add({\n                name: 'find_replace',\n                editorName: 'replace',\n                originalAction: function() {\n                    fileManager.currentFile('replace');\n                }\n            });\n            menuButtons.add({\n                name: 'next',\n                editorName: 'findnext',\n                originalAction: function() {\n                    fileManager.currentFile('next');\n                }\n            });\n            menuButtons.add({\n                name: 'fullscreen',\n                originalAction: function() {\n                    if (fullScreen) {\n                        rootObj.removeClass('vpl_ide_root_fullscreen');\n                        $('body').removeClass('vpl_body_fullscreen');\n                        menuButtons.setText('fullscreen', 'fullscreen');\n                        $('#vpl_ide_user').hide();\n                        fullScreen = false;\n                    } else {\n                        $('body').addClass('vpl_body_fullscreen').scrollTop(0);\n                        rootObj.addClass('vpl_ide_root_fullscreen');\n                        menuButtons.setText('fullscreen', 'regularscreen');\n                        if (options.username) {\n                            $('#vpl_ide_user').show();\n                        }\n                        fullScreen = true;\n                    }\n                    focusCurrentFile();\n                    setTimeout(autoResizeTab, 10);\n                },\n                bindKey: {\n                    win: 'Alt-F',\n                    mac: 'Ctrl-F'\n                }\n            });\n            menuButtons.add({\n                name: 'download',\n                originalAction: function() {\n                    window.location = options.download;\n                }\n            });\n            /**\n             * Reset files action\n             */\n            function resetFiles() {\n                VPLUI.requestAction('resetfiles', '', {}, options.ajaxurl)\n                .done(function(response) {\n                    var files = response.files;\n                    for (var fileName in files) {\n                        if (files.hasOwnProperty(fileName)) {\n                            fileManager.addFile(files[fileName], true, VPLUtil.doNothing, showErrorMessage);\n                        }\n                    }\n                    fileManager.fileListVisibleIfNeeded();\n                    VPLUtil.delay('updateMenu', updateMenu);\n                }).fail(showErrorMessage);\n            }\n            menuButtons.add({\n                name: 'resetfiles',\n                originalAction: function() {\n                    showMessage(str('sureresetfiles'), {\n                        title: str('resetfiles'),\n                        ok: resetFiles,\n                        icon: 'resetfiles'\n                    });\n                }\n            });\n            var noconfirmation = false;\n            menuButtons.add({\n                name: 'save',\n                originalAction: function() {\n                    var data = {\n                        files: fileManager.getFilesToSave(),\n                        comments: $('#vpl_ide_input_comments').val(),\n                        version: noconfirmation ? -1 : fileManager.getVersion()\n                    };\n                    if (JSON.stringify(data).length > options.postMaxSize) {\n                        showErrorMessage(str('maxpostsizeexceeded'));\n                        return;\n                    }\n                    /**\n                     * Save action\n                     */\n                    function doSave() {\n                        VPLUI.requestAction('save', 'saving', data, options.ajaxurl)\n                        .done(function(response) {\n                            if (response.requestsconfirmation && !noconfirmation) {\n                                var checkboxID = 'vpl_donotshowagain';\n                                var donotshowagain = '<input type=\"checkbox\" id=\"' + checkboxID + '\"'\n                                                    + ' class=\"align-text-bottom mr-1 mt-3\">'\n                                                    + '<label for=\"' + checkboxID + '\">' + str('donotshowagain') + '</label>';\n                                var $checkbox;\n                                showMessage(response.question + '<br>' + donotshowagain, {\n                                    title: str('saving'),\n                                    icon: 'alert',\n                                    yes: function() {\n                                        if ($checkbox.length == 1 && $checkbox.prop('checked')) {\n                                            noconfirmation = true;\n                                        }\n                                        data.version = 0;\n                                        doSave();\n                                    }\n                                });\n                                $checkbox = $('#' + checkboxID);\n                            } else {\n                                fileManager.resetModified();\n                                fileManager.setVersion(response.version);\n                                menuButtons.setTimeLeft(response);\n                                VPLUtil.delay('updateMenu', updateMenu);\n                                if (VPLUI.monitorRunning()) {\n                                    data.processid = VPLUtil.getProcessId();\n                                    VPLUI.requestAction('update', 'updating', data, options.ajaxurl);\n                                }\n                            }\n                        }).fail(showErrorMessage);\n                    }\n                    doSave();\n                },\n                bindKey: {\n                    win: 'Ctrl-S',\n                    mac: 'Command-S'\n                }\n            });\n\n            /**\n             * Launches the action\n             *\n             * @param {string} action Action 'run', 'debug', 'evaluate'\n             * @param {string} acting I18n for the action in progress\n             * @param {string} data Data attached to the action\n             */\n            function executionRequest(action, acting, data) {\n                if (!data) {\n                    data = {};\n                }\n                if (!lastConsole.isConnected()) {\n                    VPLUI.requestAction(action, '', data, options.ajaxurl)\n                    .done(function(response) {\n                        VPLUI.webSocketMonitor(response, action, acting, executionActions);\n                    })\n                    .fail(showErrorMessage);\n                }\n            }\n            /**\n             * Launches the run action\n             */\n            function runAction() {\n                executionRequest('run', 'running', {\n                    XGEOMETRY: VNCClient.getCanvasSize(),\n                    currentFileName: fileManager.getCurrentFileName(),\n                });\n            }\n            menuButtons.add({\n                name: 'run',\n                originalAction: function() {\n                    executionActions.setLastAction(runAction);\n                    runAction();\n                },\n                bindKey: {\n                    win: 'Ctrl-F11',\n                    mac: 'Command-U'\n                }\n            });\n            /**\n             * Launches the debug action\n             */\n            function debugAction() {\n                executionRequest('debug', 'debugging', {\n                    XGEOMETRY: VNCClient.getCanvasSize(),\n                    currentFileName: fileManager.getCurrentFileName(),\n                });\n            }\n            menuButtons.add({\n                name: 'debug',\n                originalAction: function() {\n                    executionActions.setLastAction(debugAction);\n                    debugAction();\n                },\n                bindKey: {\n                    win: 'Alt-F11',\n                    mac: 'Option-U'\n                }\n            });\n            /**\n             * Launches the evaluate action\n             */\n            function evaluateAction() {\n                executionRequest('evaluate', 'evaluating');\n            }\n            menuButtons.add({\n                name: 'evaluate',\n                originalAction: function() {\n                    executionActions.setLastAction(evaluateAction);\n                    evaluateAction();\n                },\n                bindKey: {\n                    win: 'Shift-F11',\n                    mac: 'Command-Option-U'\n                }\n            });\n            menuButtons.add({\n                name: 'comments',\n                originalAction: function() {\n                    dialogComments.dialog('open');\n                },\n            });\n            menuButtons.add({\n                name: 'console',\n                originalAction: function() {\n                    if (lastConsole.isOpen()) {\n                        lastConsole.close();\n                    } else {\n                        lastConsole.show();\n                    }\n                }\n            });\n            menuButtons.add({name: 'user'});\n            menuButtons.add({\n                name: 'about',\n                originalAction: function() {\n                    aboutDialog.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'timeleft',\n                originalAction: function() {\n                    menuButtons.toggleTimeLeft();\n                }\n            });\n            menuButtons.add({\n                name: 'more',\n                originalAction: function() {\n                    var tag = $('#vpl_ide_menuextra');\n                    if (tag.is(\":visible\")) {\n                        menuButtons.setText('more', 'more', VPLUtil.str('more'));\n                        tag.hide();\n                    } else {\n                        menuButtons.setText('more', 'less', VPLUtil.str('less'));\n                        tag.show();\n                    }\n                    VPLUtil.delay('updateMenu', updateMenu);\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\n                }\n            });\n            menuButtons.add({\n                name: 'shrightpanel',\n                icon: 'close-rightpanel',\n                originalAction: function() {\n                    if (resultContainer.vplVisible) {\n                        resultContainer.hide();\n                        resultContainer.vplVisible = false;\n                        menuButtons.setText('shrightpanel', 'open-rightpanel', VPLUtil.str('shrightpanel'));\n                    } else {\n                        menuButtons.setText('shrightpanel', 'close-rightpanel', VPLUtil.str('shrightpanel'));\n                        resultContainer.show();\n                        resultContainer.vplVisible = true;\n                    }\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\n                },\n                bindKey: {\n                    win: 'Ctrl-M',\n                    mac: 'Ctrl-M'\n                }\n            });\n            var rightpanelstyle = \"position:absolute;right:0;top:60px;z-index:100;margin:3px\";\n            tr.append('<span style=\"' + rightpanelstyle + '\">' + menuButtons.getHTML('shrightpanel') + '</span>');\n            var rightPanelButton = $('#vpl_ide_shrightpanel');\n            menuButtons.setText('shrightpanel', 'close-rightpanel', VPLUtil.str('shrightpanel'));\n\n            rightPanelButton.button();\n            rightPanelButton.css('padding', '0');\n            $('#vpl_ide_shrightpanel.ui-button-text').css('padding', '0');\n            rightPanelButton.on('click', function() {\n                menuButtons.launchAction('shrightpanel');\n            });\n            rightPanelButton.hide();\n            menu.addClass(\"ui-widget-header ui-corner-all\");\n            var menuHtml = \"\";\n            menuHtml += menuButtons.getHTML('more');\n            menuHtml += menuButtons.getHTML('save');\n            menuHtml += \"<span id='vpl_ide_mexecution'>\";\n            menuHtml += menuButtons.getHTML('run');\n            menuHtml += menuButtons.getHTML('debug');\n            menuHtml += menuButtons.getHTML('evaluate');\n            menuHtml += menuButtons.getHTML('comments');\n            menuHtml += menuButtons.getHTML('console');\n            menuHtml += \"</span> \";\n            menuHtml += \"<span id='vpl_ide_menuextra'>\";\n            menuHtml += \"<span id='vpl_ide_file'>\";\n            // TODO autosave not implemented.\n            menuHtml += menuButtons.getHTML('filelist');\n            menuHtml += menuButtons.getHTML('new');\n            menuHtml += menuButtons.getHTML('rename');\n            menuHtml += menuButtons.getHTML('delete');\n            menuHtml += menuButtons.getHTML('import');\n            menuHtml += menuButtons.getHTML('download');\n            menuHtml += menuButtons.getHTML('resetfiles');\n            menuHtml += menuButtons.getHTML('sort');\n            menuHtml += menuButtons.getHTML('multidelete');\n            menuHtml += menuButtons.getHTML('showparentfiles');\n            menuHtml += menuButtons.getHTML('fontsize');\n            menuHtml += menuButtons.getHTML('theme');\n            menuHtml += \"</span> \";\n            // TODO print still not implemented.\n            menuHtml += \"<span id='vpl_ide_edit'>\";\n            menuHtml += menuButtons.getHTML('undo');\n            menuHtml += menuButtons.getHTML('redo');\n            menuHtml += menuButtons.getHTML('select_all');\n            menuHtml += menuButtons.getHTML('find');\n            menuHtml += menuButtons.getHTML('find_replace');\n            menuHtml += menuButtons.getHTML('next');\n            menuHtml += \"</span> \";\n            menuHtml += \"</span> \";\n            menuHtml += menuButtons.getHTML('fullscreen') + ' ';\n            menuHtml += menuButtons.getHTML('about') + ' ';\n            menuHtml += menuButtons.getHTML('user') + ' ';\n            menuHtml += menuButtons.getHTML('timeleft');\n            menuHtml += '<div class=\"clearfix\"></div>';\n            menu.append(menuHtml);\n            $('#vpl_ide_more').button();\n            $('#vpl_ide_save').button();\n            $('#vpl_ide_menuextra').hide();\n            $('#vpl_ide_file').controlgroup();\n            $('#vpl_ide_edit').controlgroup();\n            $('#vpl_ide_mexecution').controlgroup();\n            $('#vpl_ide_fullscreen').button();\n            $('#vpl_ide_acetheme').button();\n            $('#vpl_ide_about').button();\n            $('#vpl_ide_user').button().css('float', 'right').hide();\n            $('#vpl_ide_timeleft').button().css('float', 'right').hide();\n            $('#vpl_menu .ui-button').css('padding', '6px');\n            $('#vpl_menu .ui-button-text').css('padding', '0');\n            var alwaysActive = ['filelist', 'more', 'fullscreen', 'about', 'resetfiles',\n                                'download', 'comments', 'console', 'import',\n                                'fontsize', 'timeleft'];\n            for (var i = 0; i < alwaysActive.length; i++) {\n                menuButtons.enable(alwaysActive[i], true);\n            }\n            menuButtons.setExtracontent('user', options.username);\n            menuButtons.setTimeLeft(options);\n            updateMenu = function() {\n                var i;\n                var file = fileManager.currentFile();\n                var nfiles = fileManager.length();\n                if (nfiles) {\n                    tabs.show();\n                } else {\n                    tabs.hide();\n                }\n                if (fileManager.isFileListVisible()) {\n                    menuButtons.setText('filelist', 'filelistclose', VPLUtil.str('filelist'));\n                } else {\n                    menuButtons.setText('filelist', 'filelist', VPLUtil.str('filelist'));\n                }\n                var modified = fileManager.isModified();\n                menuButtons.enable('save', modified);\n                var running = VPLUI.monitorRunning();\n                if (running) {\n                    menuButtons.setText('run', 'running');\n                } else {\n                    menuButtons.setText('run', 'run');\n                }\n                menuButtons.enable('run', !running && (!modified || options.example) && isOptionAllowed('run'));\n                menuButtons.enable('debug', !running && (!modified || options.example) && isOptionAllowed('debug'));\n                menuButtons.enable('evaluate', !running && (!modified || options.example) && isOptionAllowed('evaluate'));\n                menuButtons.enable('download', !modified);\n                menuButtons.enable('new', nfiles < maxNumberOfFiles);\n                menuButtons.enable('sort', nfiles - minNumberOfFiles > 1);\n                menuButtons.enable('multidelete', nfiles - minNumberOfFiles > 1);\n                menuButtons.enable('showparentfiles', !modified);\n                menuButtons.enable('theme', true);\n                var sel;\n                if (!file || nfiles === 0) {\n                    sel = ['rename', 'delete', 'undo', 'redo', 'select_all', 'find', 'find_replace', 'next'];\n                    for (i = 0; i < sel.length; i++) {\n                        menuButtons.enable(sel[i], false);\n                    }\n                    return;\n                }\n                menuButtons.enable('rename', file.getId() >= minNumberOfFiles && nfiles !== 0);\n                menuButtons.enable('delete', file.getId() >= minNumberOfFiles && nfiles !== 0);\n                menuButtons.enable('undo', file.hasUndo());\n                menuButtons.enable('redo', file.hasRedo());\n                menuButtons.enable('select_all', file.hasSelectAll());\n                menuButtons.enable('find', file.hasFind());\n                menuButtons.enable('find_replace', file.hasFindReplace());\n                menuButtons.enable('next', file.hasNext());\n                VPLUtil.delay('updateFileList', fileManager.updateFileList);\n            };\n\n            executionActions = {\n                'open': updateMenu,\n                'close': updateMenu,\n                'getConsole': function() {\n                    return lastConsole;\n                },\n                'setResult': self.setResult,\n                'ajaxurl': options.ajaxurl,\n                'run': function(content, coninfo, ws) {\n                    var parsed = /^([^:]*):?(.*)/.exec(content);\n                    var type = VPLUtil.sanitizeText(parsed[1]);\n                    if (type == 'terminal' || type == 'webterminal') {\n                        if (lastConsole && lastConsole.isOpen()) {\n                            lastConsole.close();\n                        }\n                        lastConsole = terminal;\n                        terminal.connect(coninfo.executionURL, function() {\n                            ws.close();\n                            focusCurrentFile();\n                        });\n                        if (type == 'webterminal') {\n                            var URLfavicon = (coninfo.secure ? \"https\" : \"http\") + \"://\" + coninfo.server + \":\" + coninfo.portToUse;\n                            URLfavicon += \"/favicon.ico\";\n                            var imgFavicon = $('<img>');\n                            imgFavicon.attr('src', URLfavicon);\n                            imgFavicon.attr('style', 'display:none');\n                            $('body').append(imgFavicon);\n                        }\n                    } else if (type == 'vnc') {\n                        if (lastConsole && lastConsole.isOpen()) {\n                            lastConsole.close();\n                        }\n                        lastConsole = VNCClient;\n                        VNCClient.connect(coninfo.secure, coninfo.server, coninfo.portToUse, coninfo.VNCpassword,\n                                coninfo.executionPath, function() {\n                                    ws.close();\n                                    focusCurrentFile();\n                                });\n                    } else if (type == \"browser\") {\n                        var URL = (coninfo.secure ? \"https\" : \"http\") + \"://\" + coninfo.server + \":\" + coninfo.portToUse + \"/\";\n                        URL += VPLUtil.sanitizeText(parsed[2]) + \"/httpPassthrough\";\n                        if (isTeacher) {\n                            URL += \"?private\";\n                        }\n                        var message = '<a href=\"' + URL + '\" target=\"_blank\">';\n                        message += VPLUtil.str('open') + '</a>';\n                        var options = {\n                            width: 200,\n                            icon: 'run',\n                            title: VPLUtil.str('run'),\n                        };\n                        showMessage(message, options);\n                    } else {\n                        VPLUtil.log(\"Type of run error \" + content, true);\n                    }\n                },\n                'lastAction': false,\n                'getLastAction': function() {\n                    var ret = this.lastAction;\n                    this.lastAction = false;\n                    return ret;\n                },\n                'setLastAction': function(action) {\n                    this.lastAction = action;\n                }\n            };\n\n            tabs.on(\"tabsactivate\", function() {\n                fileManager.currentFile('focus');\n                VPLUtil.delay('updateMenu', updateMenu);\n                VPLUtil.delay('autoResizeTab', autoResizeTab);\n            });\n\n            // VPLIDE resize view control.\n            var jw = $(window);\n            jw.on('resize', autoResizeTab);\n            // Save? before exit.\n            if (!options.example) {\n                jw.on('beforeunload', function() {\n                    if (fileManager.isModified()) {\n                        return str('changesNotSaved');\n                    }\n                    return undefined;\n                });\n            }\n            fileManager = new FileManager();\n\n            autoResizeTab();\n            // Checks menu width every 1 sec as it can change without event.\n            (function() {\n                var oldMenuWidth = menu.width();\n                /**\n                 * Checks menu width change\n                 */\n                function checkMenuWidth() {\n                    var newMenuWidth = menu.width();\n                    if (oldMenuWidth != newMenuWidth) {\n                        oldMenuWidth = newMenuWidth;\n                        autoResizeTab();\n                    }\n                }\n                checkMenuWidth();\n                setInterval(checkMenuWidth, 1000);\n            }());\n            fileManager.resetModified();\n            VPLUI.requestAction('load', 'loading', options, options.loadajaxurl)\n            .done(function(response) {\n                var allOK = true;\n                var files = response.files;\n                var showFileList = false;\n                for (var i = 0; i < files.length; i++) {\n                    var file = files[i];\n                    var r = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                    if (r) {\n                        r.resetModified();\n                        if (i < minNumberOfFiles || files.length <= 5) {\n                            fileManager.open(r);\n                        } else {\n                            showFileList = true;\n                        }\n                    } else {\n                        allOK = false;\n                    }\n                }\n                tabs.tabs('option', 'active', 0);\n                if (response.compilationexecution) {\n                    self.setResult(response.compilationexecution, false);\n                }\n                menuButtons.setTimeLeft(response);\n                if (response.comments > '') {\n                    $('#vpl_ide_input_comments').val(response.comments);\n                }\n                if (allOK) {\n                    fileManager.resetModified();\n                } else {\n                    fileManager.setModified();\n                }\n                if (fileManager.length() === 0 && maxNumberOfFiles > 0) {\n                    menuButtons.getAction('new')();\n                } else if (!options.saved) {\n                    fileManager.setModified();\n                }\n                fileManager.setFontSize(options.fontSize);\n                fileManager.setVersion(response.version);\n                fileManager.fileListVisible(showFileList);\n                VPLUtil.afterAll('AfterLoadFiles', function() {\n                    updateMenu();\n                    autoResizeTab();\n                    adjustTabsTitles(true);\n                    if (fileManager.length() > 0) {\n                        var file = fileManager.getFiles()[0];\n                        file.open();\n                        file.focus();\n                    }\n                });\n            })\n            .fail(showErrorMessage);\n        };\n        window.VPLIDE = VPLIDE;\n        return {\n            init: function(rootId, options) {\n                vplIdeInstance = new VPLIDE(rootId, options);\n            }\n        };\n    }\n);\n"],"names":["define","$","jqui","coreURL","VPLUtil","VPLUI","VPLFile","VPLIDEButtons","VPLTerminal","VPLVNCClient","VPLIDE","vplIdeInstance","rootId","options","fileManager","adjustTabsTitles","autoResizeTab","showErrorMessage","updateMenu","executionActions","self","this","minNumberOfFiles","minfiles","maxNumberOfFiles","maxfiles","restrictedEdit","restrictededitor","example","readOnly","readOnlyFiles","isTeacher","fullScreen","scrollBarWidth","str","rootObj","append","relativeUrl","Error","activateModification","optionsToCheck","loadajaxurl","ajaxurl","new","rename","delete","comments","acetheme","sort","multidelete","import","isOptionAllowed","op","dragoverHandler","e","originalEvent","dataTransfer","dropEffect","preventDefault","dropHandler","stopImmediatePropagation","droppedFiles","listDroppedFiles","entry","path","Promise","resolve","isFile","file","fullName","name","Object","defineProperty","get","push","isDirectory","createReader","readEntries","entries","dirPromises","i","length","all","then","catch","err","log","dt","promises","items","webkitGetAsEntry","getAsFile","callback","files","readSelectedFiles","addFile","fileListVisibleIfNeeded","restrictedPaste","stopPropagation","console","fontSize","parseInt","on","menu","menuButtons","tr","fileListContainer","fileList","fileListContent","tabsUl","tabs","resultContainer","result","renameDiretoryAction","doNothing","vplMinWidth","updateEvaluationNumber","res","nevaluations","text","reductionbyevaluation","freeevaluations","setExtracontent","lastResult","getTerminal","terminal","setResultGrade","content","raw","titleclass","find","titleTag","replaceWith","setResultTab","contentclass","contentTag","HTMLcontent","contents","html","applyMathJax","window","MathJax","math","Hub","Queue","startup","promise","typesetPromise","setResult","go","getFiles","fileNames","getFileName","clearAnnotations","hasContent","gradeShow","formated","show","grade","sanitizeText","variables","processResult","compilation","evaluation","execution","VPLDescription","vplVisible","accordion","anot","getAnnotations","j","type","gotoFile","row","hide","delay","heightStyle","header","animate","beforeActivate","event","ui","newHeader","hasClass","width","gotoFileLink","currentTarget","addClass","iconFolder","tabsAir","getTabsAir","outerWidth","resizeTabWidth","maxWidth","diffLeft","position","left","originalPosition","resizable","vplOriginalWidth","diffWidth","size","originalSize","currentFile","resizableOptions","containment","resize","start","off","stop","handles","focusCurrentFile","center","newWidth","tabsUlWidth","last","children","parentScrollLeft","parent","scrollLeft","fileTab","getTabNameId","scroll","finish","index","oldWidth","planb","disable","css","right","rel","wfl","newHeight","outerHeight","offset","top","height","panelHeight","resizeHeight","dialogbaseOptions","extend","close","showMessage","message","dialogNew","newFileHandler","keyCode","dialog","val","encoding","newfile","open","getTabPos","getId","focus","dialogButtons","title","buttons","setDialogTitleIcon","dialogRename","renameHandler","renameFile","dialogRenameDirectory","renameDirectoryHandler","renameDirectory","target","hasAttribute","dirname","getAttribute","dialogComments","oldStudentComments","setModified","aboutDialog","OKButtons","shortcutDialog","getShortcuts","next","filter","button","dialogSort","dialogSortButtons","regNoNumber","sorted","newOrder","each","orig","id","replace","list","sortable","placeholder","item","removeClass","disableSelection","maxHeight","dialogMultidelete","dialogMultideleteButtons","prop","toDeleteList","label","data","deleteFile","updateFileList","dialogFontsize","fontsizeSlider","dialogFontFizeButtons","value","slider","setFontSize","setUserPreferences","getFontSize","min","max","change","dialogAceTheme","acethemeSelect","dialogAceThemeButtons","setTheme","aceTheme","modal","getTheme","VNCClient","lastConsole","fileSelect","resetFiles","requestAction","done","response","fileName","hasOwnProperty","fail","add","originalAction","fileListVisible","isFileListVisible","bindKey","win","mac","filename","ok","icon","closeFile","trigger","openpopup","url","showparentfilesurl","Math","screen","availWidth","availHeight","print","editorName","setText","scrollTop","username","setTimeout","location","download","noconfirmation","executionRequest","action","acting","isConnected","webSocketMonitor","runAction","XGEOMETRY","getCanvasSize","currentFileName","getCurrentFileName","debugAction","evaluateAction","getFilesToSave","version","getVersion","JSON","stringify","postMaxSize","doSave","requestsconfirmation","$checkbox","donotshowagain","question","yes","resetModified","setVersion","setTimeLeft","monitorRunning","processid","getProcessId","setLastAction","isOpen","toggleTimeLeft","tag","is","getHTML","rightPanelButton","launchAction","menuHtml","controlgroup","alwaysActive","enable","nfiles","modified","isModified","sel","running","hasUndo","hasRedo","hasSelectAll","hasFind","hasFindReplace","hasNext","coninfo","ws","parsed","exec","connect","executionURL","URLfavicon","secure","server","portToUse","imgFavicon","attr","VNCpassword","executionPath","URL","ret","lastAction","jw","openFiles","fileNameIncluded","checkName","toLowerCase","nameMod","indexOf","twoBlockly","oldname","newname","isBlockly","v","generateFileList","fileNameExists","localClipboard","setClipboard","t","getClipboard","fileId","theme","addTab","fid","hlink","removeTab","remove","isReadOnly","pos","setGetkeys","hideIDEStatus","ptab","splice","getFilePosById","isClosed","b","showError","validPath","setContent","getUniqueId","extendToBinary","extendToBlockly","extendToCodeEditor","setFileName","isBinary","fileExtension","getContent","gotoFileName","directoryExists","dirName","startsWith","oldName","newName","oldNameLength","checkDirName","newFileNames","substr","oldNames","arguments","fun","args","Array","prototype","slice","shift","apply","currentPos","getFileTab","l","gotoLine","a","fname","fpos","line","getFile","getDirectoryStructure","structure","isDir","addFilePath","split","curdir","pathdir","p","part","lines","lister","dir","indent","fd","sname","attrs","dirline","iconModified","iconReadOnly","iconRequired","getAction","oldMenuWidth","checkMenuWidth","newMenuWidth","setInterval","allOK","showFileList","r","compilationexecution","saved","afterAll","init"],"mappings":"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"}