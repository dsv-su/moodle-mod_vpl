{"version":3,"file":"vplide.min.js","sources":["../src/vplide.js"],"sourcesContent":["// This file is part of VPL for Moodle - http://vpl.dis.ulpgc.es/\n//\n// VPL for Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// VPL for Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with VPL for Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * IDE Control\n *\n * @copyright 2017 Juan Carlos Rodríguez-del-Pino\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author Juan Carlos Rodríguez-del-Pino <jcrodriguez@dis.ulpgc.es>\n */\n\n/* globals MathJax */\n/* globals openpopup */\n\ndefine(\n    [\n        'jquery',\n        'jqueryui',\n        'core/url',\n        'mod_vpl/vplutil',\n        'mod_vpl/vplui',\n        'mod_vpl/vplidefile',\n        'mod_vpl/vplidebutton',\n        'mod_vpl/vplterminal',\n        'mod_vpl/vplvnc',\n    ],\n    function($, jqui, coreURL, VPLUtil, VPLUI, VPLFile, VPLIDEButtons, VPLTerminal, VPLVNCClient) {\n        if (typeof VPLIDE !== 'undefined') {\n            return VPLIDE;\n        }\n        var vplIdeInstance;\n        var VPLIDE = function(rootId, options) {\n            var self = this;\n            var fileManager;\n            var adjustTabsTitles;\n            var autoResizeTab;\n            var showErrorMessage;\n            var updateMenu;\n            var executionActions;\n            var minNumberOfFiles = options.minfiles || 0;\n            var maxNumberOfFiles = options.maxfiles || 0;\n            var restrictedEdit = options.restrictededitor || options.example;\n            var readOnly = options.example;\n            var readOnlyFiles = options.readOnlyFiles;\n            var isTeacher = options.isTeacher;\n            var fullScreen = false;\n            var scrollBarWidth = VPLUI.scrollBarWidth();\n            var str = VPLUtil.str;\n            var rootObj = $('#' + rootId);\n            $(\"head\").append('<meta name=\"viewport\" content=\"initial-scale=1\">')\n                          .append('<meta name=\"viewport\" width=\"device-width\">')\n                          .append('<link rel=\"stylesheet\" href=\"' + coreURL.relativeUrl('/mod/vpl/editor/VPLIDE.css') + '\"/>');\n            if (typeof rootObj != 'object') {\n                throw new Error(\"VPL: constructor tag_id not found\");\n            }\n            var optionsToCheck = {\n                'new': true,\n                'rename': true,\n                'delete': true,\n                'save': true,\n                'run': true,\n                'edit': true,\n                'debug': true,\n                'evaluate': true,\n                'import': true,\n                'resetfiles': true,\n                'sort': true,\n                'multidelete': true,\n                'showparentfiles': true,\n                'acetheme': true,\n                'console': true,\n                'comments': true\n            };\n            if ((typeof options.loadajaxurl) == 'undefined') {\n                options.loadajaxurl = options.ajaxurl;\n            }\n            (function() {\n                var activateModification = (minNumberOfFiles < maxNumberOfFiles);\n                options.new = activateModification;\n                options.rename = activateModification;\n                options.delete = activateModification;\n                options.comments = options.comments && !options.example;\n                options.acetheme = true;\n            })();\n            options.sort = (maxNumberOfFiles - minNumberOfFiles >= 2);\n            options.multidelete = options.sort;\n            options.import = !restrictedEdit;\n            var isOptionAllowed = function(op) {\n                if (!optionsToCheck[op]) {\n                    return true;\n                }\n                return options[op];\n            };\n            options.console = isOptionAllowed('run') || isOptionAllowed('debug');\n            if ((typeof options.fontSize) == 'undefined') {\n                options.fontSize = 12;\n            }\n            options.fontSize = parseInt(options.fontSize);\n            /**\n             * Handler for dragover event.\n             * @param {object} e event.\n             */\n            function dragoverHandler(e) {\n                if (restrictedEdit) {\n                    e.originalEvent.dataTransfer.dropEffect = 'none';\n                } else {\n                    e.originalEvent.dataTransfer.dropEffect = 'copy';\n                }\n                e.preventDefault();\n            }\n            /**\n             * Handler for drop event.\n             * @param {object} e event.\n             * @returns {boolean}\n             */\n            function dropHandler(e) {\n                if (restrictedEdit) { // No drop allowed.\n                    e.stopImmediatePropagation();\n                    return false;\n                }\n                var droppedFiles = [];\n                // Function that lists all files and subfiles of given entry into droppedFiles.\n                var listDroppedFiles = function(entry, path = '') {\n                    return new Promise(function(resolve) {\n                        if (entry.isFile) {\n                            // Current entry is a file : add it to the list.\n                            entry.file(function(file) {\n                                // Change its name s.t. it preserves directories structure.\n                                var fullName = path + file.name;\n                                Object.defineProperty(file, \"name\", {\n                                    get: function() {\n                                            return fullName;\n                                         }\n                                });\n                                droppedFiles.push(file);\n                                resolve();\n                            });\n                        } else if (entry.isDirectory) {\n                            // Current entry is a directory : process its content.\n                            var dirReader = entry.createReader();\n                            dirReader.readEntries(function(entries) {\n                                var dirPromises = [];\n                                for (var i=0; i<entries.length; i++) {\n                                    dirPromises.push(listDroppedFiles(entries[i], path + entry.name + \"/\"));\n                                }\n                                Promise.all(dirPromises).then(resolve).catch(function(err) {\n                                    VPLUtil.log(\"Error reading directory entries: \" + err);\n                                });\n                            });\n                        } else {\n                            // This is neither a directory nor a file : ignore it.\n                            resolve();\n                        }\n                    });\n                };\n                var dt = e.originalEvent.dataTransfer;\n\n                // List every element of the drop event.\n                var promises = [];\n                for (var i = 0; i < dt.items.length; i++) {\n                    var entry = dt.items[i].webkitGetAsEntry();\n                    if (!entry) { // Used if testing with Behat\n                        const file = dt.items[i].getAsFile();\n                        if (file) {\n                            // Create a fake entry to handle it like a file.\n                            entry = {\n                                isFile: true,\n                                isDirectory: false,\n                                file: function(callback) {\n                                    callback(file);\n                                }\n                            };\n                            promises.push(listDroppedFiles(entry));\n                        }\n                    } else if (entry.isFile || entry.isDirectory) {\n                        promises.push(listDroppedFiles(entry));\n                    }\n                }\n\n                // Drop files.\n                if (dt.files.length > 0) {\n                    Promise.all(promises)\n                    .then(function() {\n                        VPLUI.readSelectedFiles(droppedFiles, function(file) {\n                            return fileManager.addFile(file, true, updateMenu, showErrorMessage);\n                        },\n                        function() {\n                            fileManager.fileListVisibleIfNeeded();\n                        });\n                        return;\n                    })\n                    .catch(function(err) {\n                        VPLUtil.log(\"Error processing dropped files: \" + err);\n                    });\n\n                    e.stopImmediatePropagation();\n                    return false;\n                }\n                return false;\n            }\n            rootObj.on('drop', dropHandler);\n            rootObj.on('dragover', dragoverHandler);\n            /**\n             * Handler for paste limited by restrictedEdit var.\n             * @param {object} e event.\n             * @returns {boolean}\n             */\n            function restrictedPaste(e) {\n                if (restrictedEdit) {\n                    e.stopPropagation();\n                    return false;\n                }\n                return true;\n            }\n            // Init editor vars.\n            var menu = $('#vpl_menu');\n            var menuButtons = new VPLIDEButtons(menu, isOptionAllowed);\n            var tr = $('#vpl_tr');\n            var fileListContainer = $('#vpl_filelist');\n            var fileList = $('#vpl_filelist_header');\n            var fileListContent = $('#vpl_filelist_content');\n            var tabsUl = $('#vpl_tabs_ul');\n            var tabs = $('#vpl_tabs');\n            var resultContainer = $('#vpl_results');\n            var result = $('#vpl_results_accordion');\n            var renameDiretoryAction = VPLUtil.doNothing;\n            fileListContainer.vplMinWidth = 80;\n            resultContainer.vplMinWidth = 100;\n            /**\n             * Avoids selecting grade.\n             * @param {object} event Unuse.\n             * @param {object} ui UI origen.\n             * @returns {boolean}\n             */\n            function avoidSelectGrade(event, ui) {\n                if (\"newHeader\" in ui) {\n                    if (ui.newHeader.hasClass('vpl_ide_accordion_t_grade')) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            /**\n             * Constructor of FileManager objects\n             */\n            function FileManager() {\n                var tabsUl = $('#vpl_tabs_ul');\n                $('#vpl_tabs').tabs();\n                var tabs = $('#vpl_tabs').tabs(\"widget\");\n                var files = [];\n                var openFiles = [];\n                var modified = true;\n                var self = this;\n                (function() {\n                    var version;\n                    self.setVersion = function(v) {\n                       version = v;\n                    };\n                    self.getVersion = function() {\n                       return version;\n                    };\n                })();\n                this.updateFileList = function() {\n                    self.generateFileList();\n                };\n                this.fileNameExists = function(name) {\n                    var checkName = name.toLowerCase();\n                    for (var i = 0; i < files.length; i++) {\n                        if (files[i].getFileName().toLowerCase() == checkName) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n                /**\n                 * Checks if name is included in current files names\n                 * @param {string} name Name of file\n                 * @returns {boolean} if found or not found\n                 */\n                function fileNameIncluded(name) {\n                    var checkName = name.toLowerCase() + '/';\n                    for (var i = 0; i < files.length; i++) {\n                        var nameMod = files[i].getFileName().toLowerCase() + '/';\n                        // Check for name as directory existent.\n                        if (nameMod.indexOf(checkName) === 0 || checkName.indexOf(nameMod) === 0) {\n                            return true;\n                        }\n                    }\n                    return false;\n                }\n                /**\n                 * Checks if changing file name results in two blovkly files\n                 * @param {string} oldname The old file name\n                 * @param {string} newname The new file name\n                 * @returns {boolean} if results two two blovkly files\n                 */\n                function twoBlockly(oldname, newname) {\n                    if (VPLUtil.isBlockly(oldname)) {\n                        return false;\n                    }\n                    if (VPLUtil.isBlockly(newname)) {\n                        for (var i = 0; i < files.length; i++) {\n                            if (VPLUtil.isBlockly(files[i].getFileName())) {\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                }\n                this.restrictedPaste = restrictedPaste;\n                this.dropHandler = dropHandler;\n                this.dragoverHandler = dragoverHandler;\n                this.readOnly = readOnly;\n                this.readOnlyFiles = readOnlyFiles;\n                this.restrictedEdit = restrictedEdit;\n                this.adjustTabsTitles = adjustTabsTitles;\n                this.minNumberOfFiles = minNumberOfFiles;\n                this.scrollBarWidth = scrollBarWidth;\n                var localClipboard = \"\";\n                this.setClipboard = function(t) {\n                    localClipboard = t;\n                };\n                this.getClipboard = function() {\n                    return localClipboard;\n                };\n                this.getTabPos = function(fileId) {\n                    for (var i = 0; i < openFiles.length; i++) {\n                        if (openFiles[i].getId() == fileId) {\n                            return i;\n                        }\n                    }\n                    return openFiles.length;\n                };\n                this.getTheme = function() {\n                    return options.theme;\n                };\n                this.setTheme = function(theme) {\n                    options.theme = theme;\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].setTheme(theme);\n                    }\n                };\n                this.addTab = function(fid) {\n                    var hlink = '<a href=\"#vpl_file' + fid + '\"></a>';\n                    tabsUl.append('<li id=\"vpl_tab_name' + fid + '\">' + hlink + '</li>');\n                    tabs.append('<div id=\"vpl_file' + fid + '\" class=\"vpl_ide_file\"></div>');\n                };\n                this.removeTab = function(fid) {\n                    tabsUl.find('#vpl_tab_name' + fid).remove();\n                    tabs.find('#vpl_file' + fid).remove();\n                };\n                this.isReadOnly = function(fileName) {\n                    return this.readOnly || this.readOnlyFiles.indexOf(fileName) != -1;\n                };\n                this.open = function(pos) {\n                    var file;\n                    if (typeof pos == 'object') {\n                        file = pos;\n                    } else {\n                        file = files[pos];\n                    }\n                    if (file.isOpen()) {\n                        return;\n                    }\n                    var fid = file.getId();\n                    self.addTab(fid);\n                    openFiles.push(file);\n                    menuButtons.setGetkeys(file.open());\n                    tabs.tabs('refresh');\n                    adjustTabsTitles(false);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    VPLUtil.delay('updateMenu', updateMenu);\n                };\n                this.closeFile = function(file) {\n                    if (!file.isOpen()) {\n                        return;\n                    }\n                    var pos;\n                    var fid = file.getId();\n                    file.close();\n                    VPLUI.hideIDEStatus();\n                    self.removeTab(fid);\n                    var ptab = self.getTabPos(fid);\n                    openFiles.splice(ptab, 1);\n                    tabs.tabs('refresh');\n                    adjustTabsTitles(false);\n                    self.fileListVisible(true);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    VPLUtil.delay('adjustTabsTitles', adjustTabsTitles, false);\n                    if (openFiles.length == ptab) {\n                        ptab--;\n                    }\n                    if (ptab >= 0 && openFiles.length > ptab) {\n                        pos = self.getFilePosById(openFiles[ptab].getId());\n                        self.gotoFile(pos, 'c');\n                        return;\n                    }\n                };\n                this.isClosed = function(pos) {\n                    return !files[pos].isOpen();\n                };\n                this.fileListVisible = function(b) {\n                    if (b === fileListContainer.vplVisible) {\n                        return;\n                    }\n                    if (b) {\n                        VPLUtil.delay('fileListVisible', function() {\n                            fileListContainer.vplVisible = true;\n                            self.updateFileList();\n                            fileListContainer.show();\n                            autoResizeTab();\n                         });\n                    } else {\n                        VPLUtil.delay('fileListVisible', function() {\n                            fileListContainer.vplVisible = false;\n                            fileListContainer.hide();\n                            autoResizeTab();\n                         });\n                    }\n                };\n                this.isFileListVisible = function() {\n                    return fileListContainer.vplVisible;\n                };\n                this.fileListVisibleIfNeeded = function() {\n                    if (this.isFileListVisible()) {\n                        return;\n                    }\n                    for (var i = 0; i < files.length; i++) {\n                        if (!files[i].isOpen()) {\n                            this.fileListVisible(true);\n                            return;\n                        }\n                    }\n                };\n                this.setFontSize = function(size) {\n                    options.fontSize = size;\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].setFontSize(size);\n                    }\n                    terminal.setFontSize(size);\n                };\n                this.getFontSize = function() {\n                    return options.fontSize;\n                };\n                this.addFile = function(file, replace, ok, showError) {\n                    if ((typeof file.name != 'string') || !VPLUtil.validPath(file.name)) {\n                        showError(str('incorrect_file_name') + '\\n(' + file.name + ')');\n                        return false;\n                    }\n                    if (replace !== true) {\n                        replace = false;\n                    }\n                    var pos = this.fileNameExists(file.name);\n                    if (pos != -1) {\n                        if (replace && !files[pos].isReadOnly()) {\n                            files[pos].setContent(file.contents);\n                            self.setModified();\n                            ok();\n                            VPLUtil.delay('updateFileList', self.updateFileList);\n                            return file;\n                        } else {\n                            showError(str('filenotadded', file.name));\n                            return false;\n                        }\n                    }\n                    if (fileNameIncluded(file.name) || twoBlockly('', file.name)) {\n                        showError(str('filenotadded', file.name));\n                        return false;\n                    }\n                    if (files.length >= maxNumberOfFiles) {\n                        showError(str('maxfilesexceeded') + '\\n(' + maxNumberOfFiles + ')');\n                        return false;\n                    }\n                    var fid = VPLUtil.getUniqueId();\n                    var newfile = new VPLFile(fid, file.name, file.contents, this, vplIdeInstance);\n                    if (file.encoding == 1) {\n                        newfile.extendToBinary();\n                    } else {\n                        if (VPLUtil.isBlockly(file.name)) {\n                            newfile.extendToBlockly();\n                        } else {\n                            newfile.extendToCodeEditor();\n                        }\n                    }\n                    newfile.setFileName(file.name);\n                    files.push(newfile);\n                    self.setModified();\n                    if (files.length > 5) {\n                        self.fileListVisible(true);\n                    }\n                    ok();\n                    return newfile;\n                };\n                this.renameFile = function(oldname, newname, showError) {\n                    var pos = this.fileNameExists(oldname);\n                    try {\n                        if (pos == -1) {\n                            throw new Error(\"Internal error: File name not found\");\n                        }\n                        if (files[pos].getId() < this.minNumberOfFiles) {\n                            throw new Error(\"Internal error: Renaming requested filename\");\n                        }\n                        if (files[pos].getFileName() == newname) {\n                            return true; // Equals name file.\n                        }\n                        if (!VPLUtil.validPath(newname) ||\n                               fileNameIncluded(newname) ||\n                               twoBlockly(oldname, newname)) {\n                            throw str('incorrect_file_name');\n                        }\n                        if (VPLUtil.isBinary(oldname) && VPLUtil.fileExtension(oldname) != VPLUtil.fileExtension(newname)) {\n                            throw str('incorrect_file_name');\n                        }\n                        if (VPLUtil.isBlockly(oldname) != VPLUtil.isBlockly(newname)) {\n                            if (files[pos].getContent() > '') {\n                                showMessage(str('delete_file_fq', oldname), {\n                                    ok: function() {\n                                        var file = {\n                                            name: newname,\n                                            contents: '',\n                                            encoding: 0\n                                        };\n                                        fileManager.deleteFile(oldname, showError);\n                                        var fileResult = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                                        if (fileResult) {\n                                            fileManager.gotoFileName(newname);\n                                        }\n                                    }\n                                });\n                            } else {\n                                var file = {\n                                    name: newname,\n                                    contents: '',\n                                    encoding: 0\n                                };\n                                fileManager.deleteFile(oldname, showError);\n                                var fileResult = fileManager.addFile(file, false, updateMenu, showError);\n                                if (fileResult) {\n                                    fileManager.gotoFileName(newname);\n                                }\n                            }\n                            return true;\n                        }\n                        files[pos].setFileName(newname);\n                    } catch (e) {\n                        showError(str('filenotrenamed', oldname) + '\\n' + e);\n                        return false;\n                    }\n                    self.setModified();\n                    adjustTabsTitles(false);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    return true;\n                };\n                this.directoryExists = function(dirName) {\n                    var checkName = dirName.toLowerCase() + '/';\n                    for (var i = 0; i < files.length; i++) {\n                        if (files[i].getFileName().toLowerCase().startsWith(checkName)) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n                this.renameDirectory = function(oldName, newName, showError) {\n                    if (oldName == newName) {\n                        return false;\n                    }\n                    try {\n                        if (!this.directoryExists(oldName)) {\n                            throw new Error(\"Trying to rename a directory that doesn't exist: \" + oldName);\n                        }\n                        if (!VPLUtil.validPath(newName + '/file.txt')) {\n                            throw str('incorrect_directory_name');\n                        }\n                        // Prepare new names\n                        var oldNameLength = oldName.length + 1;\n                        var checkDirName = oldName.toLowerCase() + '/';\n                        var newFileNames = [];\n                        var i;\n                        for (i = 0; i < files.length; i++) {\n                            var fileName = files[i].getFileName();\n                            if (fileName.toLowerCase().startsWith(checkDirName)) {\n                                if (files[i].getId() < this.minNumberOfFiles) { // Renaming required filename\n                                    throw str('incorrect_file_name');\n                                }\n                                newFileNames[i] = newName + '/' + fileName.substr(oldNameLength);\n                            }\n                        }\n                        if (this.directoryExists(newName)) { // Checks if the merge is possible (no repeated names)\n                            var oldNames = [];\n                            for (i = 0; i < files.length; i++) {\n                                oldNames[files[i].getFileName().toLowerCase()] = true;\n                            }\n                            for (i = 0; i < files.length; i++) {\n                                if (newFileNames[i] && oldNames[newFileNames[i].toLowerCase()]) {\n                                    throw str('incorrect_file_name');\n                                }\n                            }\n                        }\n                        // Set the new file names\n                        for (i = 0; i < newFileNames.length; i++) {\n                            if (newFileNames[i]) {\n                                files[i].setFileName(newFileNames[i]);\n                            }\n                        }\n                    } catch (e) {\n                        showError(str('directory_not_renamed', oldName) + '\\n' + e);\n                        return false;\n                    }\n                    self.setModified();\n                    adjustTabsTitles(false);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    return true;\n                };\n                this.deleteFile = function(name, showError) {\n                    var pos = this.fileNameExists(name);\n                    if (pos == -1) {\n                        showError(str('filenotdeleted', name));\n                        return false;\n                    }\n                    if (files[pos].getId() < minNumberOfFiles) {\n                        showError(str('filenotdeleted', name));\n                        return false;\n                    }\n                    this.setModified();\n                    this.closeFile(files[pos]);\n                    files.splice(pos, 1);\n                    if (openFiles.length == 0) {\n                        VPLUI.hideIDEStatus();\n                    }\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    return true;\n                };\n                this.currentFile = function() {\n                    var id = tabs.tabs('option', 'active');\n                    if (id in openFiles) {\n                        var file = openFiles[id];\n                        if (arguments.length === 0) {\n                            return file;\n                        }\n                        var action = arguments[0];\n                        if (typeof file[action] === 'function') {\n                            var fun = file[action];\n                            var args = Array.prototype.slice(arguments);\n                            args.shift();\n                            return fun.apply(file, args);\n                        }\n                    }\n                    return false;\n                };\n                this.getCurrentFileName = function() {\n                    var currentFileName = '';\n                    var currentFile = fileManager.currentFile();\n                    if (currentFile) {\n                        currentFileName = currentFile.name;\n                    }\n                    return currentFileName;\n                };\n                this.currentPos = function() {\n                    return tabs.tabs('option', 'active');\n                };\n                this.getFileTab = function(id) {\n                    for (var i = 0; i < openFiles.length; i++) {\n                        if (openFiles[i].getId() == id) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n                this.getFilePosById = function(id) {\n                    for (var i = 0; i < files.length; i++) {\n                        if (files[i].getId() == id) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n                this.gotoFile = function(pos, l) {\n                    var file = files[pos];\n                    self.open(file);\n                    tabs.tabs('option', 'active', self.getFileTab(file.getId()));\n                    if (l !== 'c') {\n                        file.gotoLine(parseInt(l, 10));\n                    }\n                    file.focus();\n                };\n                this.gotoFileLink = function(a) {\n                    var tag = $(a);\n                    var fname = tag.data('file');\n                    var fpos = -1;\n                    if (fname > '') {\n                        fpos = this.fileNameExists(fname);\n                    } else {\n                        fpos = self.getFilePosById(tag.data('fileid'));\n                    }\n                    if (fpos >= 0) {\n                        var line = tag.data('line');\n                        if (typeof line == 'undefined') {\n                            line = 'c';\n                        }\n                        self.gotoFile(fpos, line);\n                        return true;\n                    }\n                    return false;\n                };\n                this.gotoFileName = function(fname, line) {\n                    var fpos = this.fileNameExists(fname);\n                    if (fpos >= 0) {\n                        if (typeof line == 'undefined') {\n                            line = 'c';\n                        }\n                        self.gotoFile(fpos, line);\n                        return true;\n                    }\n                    return false;\n                };\n                this.getFilesToSave = function() {\n                    var ret = [];\n                    for (var i = 0; i < files.length; i++) {\n                        var file = {};\n                        file.name = files[i].getFileName();\n                        file.contents = files[i].getContent();\n                        file.encoding = files[i].isBinary() ? 1 : 0;\n                        ret.push(file);\n                    }\n                    return ret;\n                };\n                this.resetModified = function() {\n                    modified = false;\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].resetModified();\n                    }\n                    VPLUtil.delay('updateMenu', updateMenu);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                };\n                this.setModified = function() {\n                    modified = true;\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    VPLUtil.delay('updateMenu', updateMenu);\n                };\n                this.isModified = function() {\n                    return modified;\n                };\n                this.length = function() {\n                    return files.length;\n                };\n                this.clearAnnotations = function() {\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].clearAnnotations();\n                    }\n                };\n                this.getFile = function(i) {\n                    return files[i];\n                };\n                this.getFiles = function() {\n                    return files;\n                };\n                this.getDirectoryStructure = function() {\n                    var structure = {\n                        isDir: true,\n                        content: {},\n                        path: '',\n                    };\n                    /**\n                     * Adds a new file the structure of directories\n                     * @param {int} i Index of file to add in the file array\n                     */\n                    function addFilePath(i) {\n                        var file = files[i];\n                        var fileName = file.getFileName();\n                        var path = fileName.split(\"/\");\n                        var curdir = structure;\n                        var pathdir = '';\n                        for (var p = 0; p < path.length; p++) {\n                            var part = path[p];\n                            if (p == path.length - 1) { // File.\n                                curdir.content[part] = {\n                                    isDir: false,\n                                    content: file,\n                                    pos: i,\n                                };\n                            } else {\n                                pathdir += part;\n                                if (!curdir.content[part]) { // New dir.\n                                    curdir.content[part] = {\n                                        isDir: true,\n                                        content: {},\n                                        path: pathdir,\n                                    };\n                                }\n                                // Descend Dir.\n                                pathdir += '/';\n                                curdir = curdir.content[part];\n                            }\n                        }\n                    }\n                    for (var i in files) {\n                        if (files.hasOwnProperty(i)) {\n                            addFilePath(i);\n                        }\n                    }\n                    return structure;\n                };\n                this.generateFileList = function() {\n                    if (!self.isFileListVisible()) {\n                        return;\n                    }\n                    var dirIndent = '<span class=\"vpl_ide_dirindent\"></span>';\n                    /**\n                     * Generates an array of string with the HTML code to represent the list of IDE files\n                     * @param {Object} dir Current directory\n                     * @param {int} indent Html code to indent subdirectories\n                     * @param {Array} lines Output. Each line contains the HTML to represent an IDE file\n                     */\n                    function lister(dir, indent, lines) {\n                        var name, fd, sname, attrs, dirline, file, path, line;\n                        for (name in dir.content) {\n                            if (dir.content.hasOwnProperty(name)) {\n                                fd = dir.content[name];\n                                if (fd.isDir) {\n                                    var dirpath = VPLUtil.sanitizeText(fd.path);\n                                    attrs = 'href=\"#\" data-dirname=\"' + dirpath + '\" ';\n                                    sname = VPLUtil.sanitizeText(name);\n                                    dirline = indent;\n                                    dirline += VPLUI.iconFolder() + '<a ' + attrs + '>' + sname + '</a>';\n                                    lines.push(dirline);\n                                    lister(fd, indent + dirIndent, lines);\n                                } else {\n                                    file = fd.content;\n                                    sname = VPLUtil.sanitizeText(name);\n                                    path = VPLUtil.sanitizeText(file.getFileName());\n                                    if (file.isOpen()) {\n                                        sname = '<b>' + sname + '</b>';\n                                    }\n                                    attrs = 'href=\"#\" data-fileid=\"' + file.getId() + '\" title=\"' + path + '\"';\n                                    line = '<a ' + attrs + '>' + sname + '</a>';\n                                    if (file.isModified()) {\n                                        line = VPLUI.iconModified() + line;\n                                    }\n                                    if (file.isReadOnly()) {\n                                        line = line + VPLUI.iconReadOnly();\n                                    } else if (file.getId() < minNumberOfFiles) {\n                                        line = line + VPLUI.iconRequired();\n                                    }\n                                    lines.push(indent + line);\n                                }\n                            }\n                        }\n                    }\n\n                    var structure = self.getDirectoryStructure();\n                    var lines = [];\n                    var html = '';\n                    lister(structure, '', lines);\n                    for (var i = 0; i < lines.length; i++) {\n                        html += lines[i] + '<br>';\n                    }\n                    fileListContent.html('<div>' + html + '</div>');\n                };\n                tabsUl.on('click', 'span.vpl_ide_closeicon', function() {\n                    fileManager.closeFile(fileManager.currentFile());\n                });\n                tabsUl.on('dblclick', 'span.vpl_ide_closeicon', menuButtons.getAction('delete'));\n                tabsUl.on('dblclick', 'a', menuButtons.getAction('rename'));\n                fileListContent.on('dblclick', 'a[data-fileid]', menuButtons.getAction('rename'));\n                fileListContent.on('dblclick', 'a[data-dirname]', renameDiretoryAction);\n            }\n            this.updateEvaluationNumber = function(res) {\n                if (typeof res.nevaluations != 'undefined') {\n                    var text = res.nevaluations;\n                    if (typeof res.reductionbyevaluation != 'undefined'\n                         && res.reductionbyevaluation > ''\n                         && res.reductionbyevaluation != 0) {\n                        if (res.freeevaluations != 0) {\n                            text = text + '/' + res.freeevaluations;\n                        }\n                        text = text + ' -' + res.reductionbyevaluation;\n                    }\n                    menuButtons.setExtracontent('evaluate', text);\n                }\n            };\n            this.lastResult = null;\n            this.getTerminal = function() {\n                return terminal;\n            };\n            this.setResultGrade = function(content, raw) {\n                var name = 'grade';\n                var titleclass = 'vpl_ide_accordion_t_' + name;\n                var contentclass = 'vpl_ide_accordion_c_' + name;\n                if (result.find('.' + contentclass).length == 0) {\n                    result.append('<div class=\"' + titleclass + '\"></div>');\n                    result.append('<div class=\"' + contentclass + '\"></div>');\n                }\n                if (typeof raw == 'undefined') {\n                    return result.find('h4.' + titleclass).length > 0;\n                }\n                var titleTag = result.find('.' + titleclass);\n                if (content > '') {\n                    titleTag.replaceWith('<h4 class=\"' + titleclass + '\">' + content + '</h4>');\n                    return true;\n                } else {\n                    titleTag.replaceWith('<div class=\"' + titleclass + '\"></div>');\n                    return false;\n                }\n            };\n            this.setResultTab = function(name, content, raw) {\n                var titleclass = 'vpl_ide_accordion_t_' + name;\n                var contentclass = 'vpl_ide_accordion_c_' + name;\n                if (result.find('.' + contentclass).length == 0) {\n                    result.append('<div class=\"' + titleclass + '\"></div>');\n                    result.append('<div class=\"' + contentclass + '\"></div>');\n                }\n                if (typeof raw == 'undefined') {\n                    return result.find('h4.' + titleclass).length > 0;\n                }\n                var titleTag = result.find('.' + titleclass);\n                var contentTag = result.find('.' + contentclass);\n                var HTMLcontent = $('<div>' + content + '</div>');\n                HTMLcontent.find('h4').replaceWith(function() {\n                    return $(\"<h5>\").append($(this).contents());\n                });\n                if (contentTag.html() == HTMLcontent.html()) {\n                    return content > '';\n                }\n                if (content > '') {\n                    titleTag.replaceWith('<h4 class=\"' + titleclass + '\">' + str(name) + '</h4>');\n                    contentTag.replaceWith('<div class=\"ui-widget ' + contentclass + '\">' + HTMLcontent.html() + '</div>');\n                    return true;\n                } else {\n                    titleTag.replaceWith('<div class=\"' + titleclass + '\"></div>');\n                    contentTag.replaceWith('<div class=\"' + contentclass + '\"></div>');\n                    return false;\n                }\n            };\n            this.setResult = function(res, go) {\n                self.updateEvaluationNumber(res);\n                var files = fileManager.getFiles();\n                var fileNames = [];\n                var i;\n                for (i = 0; i < files.length; i++) {\n                    fileNames[i] = files[i].getFileName();\n                    files[i].clearAnnotations();\n                }\n                var show = false;\n                var hasContent;\n                var grade = VPLUtil.sanitizeText(res.grade);\n                var gradeShow;\n                var formated;\n                gradeShow = self.setResultGrade(grade, res.grade);\n                show = show || gradeShow;\n                hasContent = self.setResultTab('variables', res.variables, res.variables);\n                show = show || hasContent;\n                formated = VPLUtil.processResult(res.compilation, fileNames, files, true, false);\n                hasContent = self.setResultTab('compilation', formated, res.compilation);\n                show = show || hasContent;\n                formated = VPLUtil.processResult(res.evaluation, fileNames, files, false, false);\n                hasContent = self.setResultTab('comments', formated, res.evaluation);\n                show = show || hasContent;\n                formated = VPLUtil.sanitizeText(res.execution);\n                hasContent = self.setResultTab('execution', formated, res.execution);\n                show = show || hasContent;\n                hasContent = self.setResultTab('description', window.VPLDescription, window.VPLDescription);\n                if (hasContent && typeof MathJax == 'object') { // MathJax workaround.\n                    var math = result.find(\".vpl_ide_accordion_c_description\")[0];\n                    if (MathJax.Hub && MathJax.Hub.Queue) {\n                        MathJax.Hub.Queue([\"Typeset\", MathJax.Hub, math]);\n                    } else {\n                        MathJax.typesetPromise([math]);\n                    }\n                }\n                show = show || hasContent;\n                if (show) {\n                    resultContainer.show();\n                    resultContainer.vplVisible = true;\n                    result.accordion(\"refresh\");\n                    result.accordion('option', 'active', gradeShow ? 1 : 0);\n                    for (i = 0; i < files.length; i++) {\n                        var anot = files[i].getAnnotations();\n                        for (var j = 0; j < anot.length; j++) {\n                            if (go || anot[j].type == 'error') {\n                                fileManager.gotoFile(i, anot[j].row + 1);\n                                break;\n                            }\n                        }\n                    }\n                    $('#vpl_ide_shrightpanel').show();\n                } else {\n                    resultContainer.hide();\n                    resultContainer.vplVisible = false;\n                    $('#vpl_ide_shrightpanel').hide();\n                }\n                VPLUtil.delay('autoResizeTab', autoResizeTab);\n                VPLUtil.delay('fixAccordion', function() {\n                    result.accordion('option', 'active', gradeShow ? 1 : 0);\n                });\n            };\n\n            result.accordion({\n                heightStyle: 'fill',\n                header: 'h4',\n                animate: false,\n                beforeActivate: avoidSelectGrade,\n            });\n            resultContainer.width(2 * resultContainer.vplMinWidth);\n            result.on('click', 'a', function(event) {\n                if (fileManager.gotoFileLink(event.currentTarget)) {\n                    event.preventDefault();\n                }\n            });\n            resultContainer.vplVisible = false;\n            resultContainer.hide();\n\n            fileListContainer.addClass('ui-tabs ui-widget ui-widget-content ui-corner-all');\n            fileList.text(str('filelist'));\n            fileList.html(VPLUI.iconFolder() + fileList.html());\n            fileList.addClass(\"ui-widget-header ui-button-text-only ui-corner-all\");\n            fileListContent.addClass(\"ui-widget ui-corner-all\");\n            fileListContainer.width(2 * fileListContainer.vplMinWidth);\n            fileListContainer.on('click', 'a', function(event) {\n                event.preventDefault();\n                fileManager.gotoFileLink(event.currentTarget);\n            });\n            fileListContainer.vplVisible = false;\n            fileListContainer.hide();\n            var tabsAir = false;\n            /**\n             * Returns separation space\n             * @returns {int} size in pixels\n             */\n            function getTabsAir() {\n                if (tabsAir === false) {\n                    tabsAir = (tabs.outerWidth(true) - tabs.width()) / 2;\n                }\n                return tabsAir;\n            }\n            /**\n             * Resize tab width\n             * @param {Event} e Unused\n             * @param {Object} ui UI object\n             */\n            function resizeTabWidth(e, ui) {\n                var diffLeft = ui.position.left - ui.originalPosition.left;\n                var maxWidth;\n                if (diffLeft !== 0) {\n                    maxWidth = tabs.width() + fileListContainer.width() - fileListContainer.vplMinWidth;\n                    tabs.resizable('option', 'maxWidth', maxWidth);\n                    fileListContainer.width(fileListContainer.vplOriginalWidth + diffLeft);\n                } else {\n                    maxWidth = tabs.width() + resultContainer.width() - resultContainer.vplMinWidth;\n                    tabs.resizable('option', 'maxWidth', maxWidth);\n                    var diffWidth = ui.size.width - ui.originalSize.width;\n                    resultContainer.width(resultContainer.vplOriginalWidth - diffWidth);\n                }\n                fileManager.currentFile('adjustSize');\n            }\n            var resizableOptions = {\n                containment: 'parent',\n                resize: resizeTabWidth,\n                start: function() {\n                    $(window).off('resize', autoResizeTab);\n                    tabs.resizable('option', 'minWidth', 100);\n                    if (resultContainer.vplVisible) {\n                        resultContainer.vplOriginalWidth = resultContainer.width();\n                    }\n                    if (fileListContainer.vplVisible) {\n                        fileListContainer.vplOriginalWidth = fileListContainer.width();\n                    }\n                },\n                stop: function(e, ui) {\n                    resizeTabWidth(e, ui);\n                    tabs.resizable('option', 'maxWidth', 100000);\n                    tabs.resizable('option', 'minWidth', 0);\n                    autoResizeTab();\n                    $(window).on('resize', autoResizeTab);\n                },\n                handles: \"\"\n            };\n            tabs.resizable(resizableOptions);\n             /**\n              * Updates handles for internal IDE resize\n              */\n            function updateTabsHandles() {\n                var handles = ['e', 'w', 'e', 'e, w'];\n                var index = 0;\n                index += fileListContainer.vplVisible ? 1 : 0;\n                index += resultContainer.vplVisible ? 2 : 0;\n                tabs.resizable('destroy');\n                resizableOptions.handles = handles[index];\n                resizableOptions.disable = index === 0;\n                tabs.resizable(resizableOptions);\n            }\n            /**\n             * Resize the IDE height\n             */\n            function resizeHeight() {\n                var newHeight = $(window).outerHeight();\n                newHeight -= menu.offset().top + menu.height() + (fullScreen ? getTabsAir() : 20);\n                if (newHeight < 250) {\n                    newHeight = 250;\n                }\n                tr.height(newHeight);\n                var panelHeight = newHeight - 3 * getTabsAir();\n                tabs.height(panelHeight);\n                if (resultContainer.vplVisible) {\n                    resultContainer.height(panelHeight + getTabsAir());\n                    result.accordion('refresh');\n                }\n                if (fileListContainer.vplVisible) {\n                    fileListContent.height(panelHeight - (fileList.outerHeight() + getTabsAir()));\n                    fileListContainer.height(panelHeight);\n                }\n            }\n            adjustTabsTitles = function(center) {\n                var newWidth = tabs.width();\n                var tabsUlWidth = 0;\n                tabsUl.width(100000);\n                var last = tabsUl.children('li:visible').last();\n                if (last.length) {\n                    var parentScrollLeft = tabsUl.parent().scrollLeft();\n                    tabsUlWidth = parentScrollLeft + last.position().left + last.width() + tabsAir;\n                    tabsUl.width(tabsUlWidth);\n                    var file = fileManager.currentFile();\n                    if (file && center) {\n                        var fileTab = $(file.getTabNameId());\n                        var scroll = parentScrollLeft + fileTab.position().left;\n                        scroll -= (newWidth - fileTab.outerWidth()) / 2;\n                        if (scroll < 0) {\n                            scroll = 0;\n                        }\n                        tabsUl.parent().finish().animate({\n                            scrollLeft: scroll\n                        }, 'slow');\n                    }\n                }\n                if (tabsUlWidth < newWidth) {\n                    tabsUl.width('');\n                }\n            };\n            autoResizeTab = function() {\n                var oldWidth = tabs.width();\n                var newWidth = menu.width();\n                var planb = false;\n                updateTabsHandles();\n                tr.width(menu.outerWidth());\n                if (fileListContainer.vplVisible) {\n                    var left = fileListContainer.outerWidth() + tabsAir;\n                    oldWidth += left;\n                    if (left >= 100) {\n                        newWidth -= left;\n                        tabs.css('left', left);\n                    } else {\n                        planb = true;\n                    }\n                } else {\n                    tabs.css('left', 0);\n                }\n                if (resultContainer.vplVisible) {\n                    var right = resultContainer.outerWidth() + tabsAir;\n                    oldWidth += right;\n                    newWidth -= right;\n                    if (newWidth < 100) {\n                        planb = true;\n                    }\n                }\n                if (planb) {\n                    var rel = menu.width() / oldWidth;\n                    var wfl = 0;\n                    if (fileListContainer.vplVisible) {\n                        wfl = fileListContainer.width() * rel;\n                        fileListContainer.width(wfl - tabsAir);\n                        wfl += tabsAir;\n                        tabs.css('left', wfl);\n                    }\n                    tabs.width(tabs.width() * rel);\n                    if (resultContainer.vplVisible) {\n                        resultContainer.width(menu.width() - (wfl + tabs.width() + tabsAir));\n                    }\n                } else {\n                    tabs.width(newWidth);\n                }\n                adjustTabsTitles(true);\n                resizeHeight();\n                fileManager.currentFile('adjustSize');\n            };\n            /**\n             * Transfer focus to current file\n             */\n            function focusCurrentFile() {\n                fileManager.currentFile('focus');\n            }\n            var dialogbaseOptions = $.extend({}, {\n                close: focusCurrentFile\n            }, VPLUI.dialogbaseOptions);\n            /**\n             * Shows a dialog with a message.\n             * @param {string} message\n             * @param {Object} options icon, title, actions handler (ok, yes, no, close)\n             * @returns {JQuery} JQueryUI Dialog object already open\n             */\n            function showMessage(message, options) {\n                return VPLUI.showMessage(message, $.extend({}, dialogbaseOptions, options));\n            }\n            showErrorMessage = function(message) {\n                return VPLUI.showErrorMessage(message, {\n                    close: focusCurrentFile\n                });\n            };\n\n            var dialogNew = $('#vpl_ide_dialog_new');\n            /**\n             * The event handler for the new file action\n             * @param {Object} event\n             * @return {boolean}\n             */\n            function newFileHandler(event) {\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n                    return true;\n                }\n                dialogNew.dialog('close');\n                var file = {\n                    name: $('#vpl_ide_input_newfilename').val(),\n                    contents: '',\n                    encoding: 0\n                };\n                var newfile = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                if (newfile) {\n                    fileManager.open(newfile);\n                    tabs.tabs('option', 'active', fileManager.getTabPos(newfile.getId()));\n                    newfile.focus();\n                    return true;\n                }\n                return false;\n            }\n\n            var dialogButtons = {};\n            dialogButtons[str('ok')] = newFileHandler;\n            dialogButtons[str('cancel')] = function() {\n                $(this).dialog('close');\n            };\n            dialogNew.find('input').on('keypress', newFileHandler);\n            dialogNew.dialog($.extend({}, dialogbaseOptions, {\n                title: str('create_new_file'),\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogNew, 'new');\n\n            var dialogRename = $('#vpl_ide_dialog_rename');\n            /**\n             * The event handler for the rename current file action\n             * @param {Object} event\n             */\n            function renameHandler(event) {\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n                    return;\n                }\n                dialogRename.dialog('close');\n                fileManager.renameFile(fileManager.currentFile('getFileName'),\n                        $('#vpl_ide_input_renamefilename').val(), showErrorMessage);\n                event.preventDefault();\n            }\n            dialogRename.find('input').on('keypress', renameHandler);\n            dialogButtons[str('ok')] = renameHandler;\n            dialogRename.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    $('#vpl_ide_input_renamefilename').val(fileManager.currentFile('getFileName'));\n                },\n                title: str('rename_file'),\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogRename, 'rename');\n\n            var dialogRenameDirectory = $('#vpl_ide_dialog_renamedir');\n            /**\n             * The event handler for rename a directory\n             * @param {Object} event\n             */\n            function renameDirectoryHandler(event) {\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n                    return;\n                }\n                dialogRenameDirectory.dialog('close');\n                fileManager.renameDirectory($('#vpl_ide_input_olddirectoryname').val(),\n                        $('#vpl_ide_input_renamedirectory').val(), showErrorMessage);\n                event.preventDefault();\n            }\n            dialogRenameDirectory.find('input').on('keypress', renameDirectoryHandler);\n            dialogButtons[str('ok')] = renameDirectoryHandler;\n            dialogRenameDirectory.dialog($.extend({}, dialogbaseOptions, {\n                title: str('rename_directory'),\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogRenameDirectory, 'filelist');\n            renameDiretoryAction = function(event) {\n                if (event.target.hasAttribute('data-dirname')) {\n                    var dirname = event.target.getAttribute('data-dirname');\n                    $('#vpl_ide_input_olddirectoryname').val(dirname);\n                    $('#vpl_ide_input_renamedirectory').val(dirname);\n                    dialogRenameDirectory.dialog('open');\n                }\n            };\n            var dialogComments = $('#vpl_ide_dialog_comments');\n            var oldStudentComments = '';\n            dialogButtons[str('ok')] = function() {\n                if (oldStudentComments != $('#vpl_ide_input_comments').val()) {\n                    fileManager.setModified();\n                }\n                $(this).dialog('close');\n            };\n            dialogComments.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    oldStudentComments = $('#vpl_ide_input_comments').val();\n                },\n                title: str('comments'),\n                width: '40em',\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogComments, 'comments');\n\n            $('#vpl_ide_input_comments').width('30em');\n            var aboutDialog = $('#vpl_ide_dialog_about');\n            var OKButtons = {};\n            OKButtons[str('ok')] = function() {\n                $(this).dialog('close');\n            };\n            var shortcutDialog = $('#vpl_ide_dialog_shortcuts');\n            shortcutDialog.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    var html = menuButtons.getShortcuts(fileManager.currentFile('getEditor'));\n                    $('#vpl_ide_dialog_shortcuts').html(html);\n                },\n                title: str('shortcuts'),\n                width: 400,\n                height: 300,\n                buttons: OKButtons\n            }));\n            shortcutDialog.dialog('option', 'height', 300);\n            VPLUI.setDialogTitleIcon(shortcutDialog, 'shortcuts');\n\n            OKButtons[str('shortcuts')] = function() {\n                $(this).dialog('close');\n                shortcutDialog.dialog('open');\n            };\n            aboutDialog.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    var html = menuButtons.getShortcuts(fileManager.currentFile('getEditor'));\n                    aboutDialog.next().find(\"button\").filter(\n                        function() {\n                            return $(this).text() == str('shortcuts');\n                        }\n                  ).button(html != '' ? 'enable' : 'disable');\n                },\n                title: str('about'),\n                width: 400,\n                height: 300,\n                buttons: OKButtons\n            }));\n            aboutDialog.dialog('option', 'height', 300);\n            VPLUI.setDialogTitleIcon(aboutDialog, 'about');\n\n            var dialogSort = $('#vpl_ide_dialog_sort');\n            var dialogSortButtons = {};\n            dialogSortButtons[str('ok')] = function() {\n                var files = fileManager.getFiles();\n                var regNoNumber = /[^\\d]*/;\n                var sorted = [];\n                var i = 0;\n                var newOrder = $('#vpl_sort_list li');\n                if (newOrder.length != files.length) {\n                    return;\n                }\n                newOrder.each(function() {\n                    var orig = parseInt(this.id.replace(regNoNumber, ''));\n                    sorted.push(files[orig]);\n                });\n                for (i = 0; i < newOrder.length; i++) {\n                    files[i] = sorted[i];\n                }\n                fileManager.setModified();\n                $(this).dialog('close');\n            };\n            dialogSortButtons[str('cancel')] = function() {\n                $(this).dialog('close');\n            };\n            dialogSort.dialog($.extend({}, dialogbaseOptions, {\n                title: str('sort'),\n                buttons: dialogSortButtons,\n                open: function() {\n                    var list = $('#vpl_sort_list');\n                    list.html('');\n                    var files = fileManager.getFiles();\n                    for (var i = 0; i < files.length; i++) {\n                        var file = $('<li id=\"vpl_fsort_' + i + '\"class=\"ui-widget-content\"></li>');\n                        if (files[i].getId() < minNumberOfFiles) {\n                            file.addClass('ui-state-disabled');\n                        }\n                        file.text((i + 1) + '-' + files[i].getFileName());\n                        list.append(file);\n                    }\n                    list.sortable({\n                        items: \"li:not(.ui-state-disabled)\",\n                        placeholder: \"ui-state-highlight\",\n                        start: function(event, ui) {\n                            ui.item.addClass('ui-state-highlight');\n                        },\n                        stop: function(event, ui) {\n                            ui.item.removeClass('ui-state-highlight');\n                        },\n                    });\n                    list.disableSelection();\n                },\n                maxHeight: 400\n            }));\n            VPLUI.setDialogTitleIcon(dialogSort, 'sort');\n\n            var dialogMultidelete = $('#vpl_ide_dialog_multidelete');\n            var dialogMultideleteButtons = {};\n            dialogMultideleteButtons[str('selectall')] = function() {\n                $(this).find('input').prop(\"checked\", true);\n            };\n            dialogMultideleteButtons[str('deselectall')] = function() {\n                $(this).find('input').prop(\"checked\", false);\n            };\n            dialogMultideleteButtons[str('deleteselected')] = function() {\n                var files = fileManager.getFiles();\n                var toDeleteList = [];\n                var labelList = $('#vpl_multidelete_list label');\n                labelList.each(function() {\n                    var label = $(this);\n                    if (label.find('input').prop('checked')) {\n                        var id = label.data('fileid');\n                        toDeleteList.push(files[id].getFileName());\n                    }\n                });\n                for (var i = 0; i < toDeleteList.length; i++) {\n                    fileManager.deleteFile(toDeleteList[i], showErrorMessage);\n                }\n                VPLUtil.delay('updateMenu', updateMenu);\n                VPLUtil.delay('updateFileList', fileManager.updateFileList);\n                $(this).dialog('close');\n            };\n            dialogMultideleteButtons[str('cancel')] = function() {\n                $(this).dialog('close');\n            };\n            dialogMultidelete.dialog($.extend({}, dialogbaseOptions, {\n                title: str('multidelete'),\n                buttons: dialogMultideleteButtons,\n                open: function() {\n                    var list = $('#vpl_multidelete_list');\n                    list.html('');\n                    var files = fileManager.getFiles();\n                    for (var i = minNumberOfFiles; i < files.length; i++) {\n                        var name = VPLUtil.sanitizeText(files[i].getFileName());\n                        var file = $('<label><input type=\"checkbox\"> ' + name + '</label>');\n                        file.data('fileid', i);\n                        list.append(file);\n                        list.append('<br>');\n                    }\n                    list.find('label').button();\n                },\n                maxHeight: 400,\n                maxWidth: 400\n            }));\n            VPLUI.setDialogTitleIcon(dialogMultidelete, 'multidelete');\n\n            var dialogFontsize = $('#vpl_ide_dialog_fontsize');\n            var fontsizeSlider = $('#vpl_ide_dialog_fontsize .vpl_fontsize_slider');\n            var dialogFontFizeButtons = {};\n            dialogFontFizeButtons[str('ok')] = function() {\n                var value = fontsizeSlider.slider(\"value\");\n                fileManager.setFontSize(value);\n                $(this).dialog('close');\n                VPLUtil.setUserPreferences({fontSize: value});\n            };\n            dialogFontFizeButtons[str('cancel')] = function() {\n                fileManager.setFontSize(fontsizeSlider.data(\"vpl_fontsize\"));\n                $(this).dialog('close');\n            };\n            dialogFontFizeButtons[str('reset')] = function() {\n                fontsizeSlider.slider('value', 12);\n            };\n            dialogFontsize.dialog($.extend({}, dialogbaseOptions, {\n                title: str('fontsize'),\n                buttons: dialogFontFizeButtons,\n                open: function() {\n                    fontsizeSlider.data(\"vpl_fontsize\", fileManager.getFontSize());\n                    fontsizeSlider.slider('value', fileManager.getFontSize());\n                },\n            }));\n            fontsizeSlider.slider({\n                min: 1,\n                max: 48,\n                change: function() {\n                    var value = fontsizeSlider.slider(\"value\");\n                    fileManager.setFontSize(value);\n                    dialogFontsize.find('.vpl_fontsize_slider_value').text(value);\n                }\n            });\n            VPLUI.setDialogTitleIcon(dialogFontsize, 'fontsize');\n\n            var dialogAceTheme = $('#vpl_ide_dialog_acetheme');\n            var acethemeSelect = $('#vpl_ide_dialog_acetheme select');\n            var dialogAceThemeButtons = {};\n            dialogAceThemeButtons[str('ok')] = function() {\n                fileManager.setTheme(acethemeSelect.val());\n                $(this).dialog('close');\n                VPLUtil.setUserPreferences({aceTheme: acethemeSelect.val()});\n            };\n            dialogAceThemeButtons[str('cancel')] = function() {\n                fileManager.setTheme(acethemeSelect.data(\"acetheme\"));\n                $(this).dialog('close');\n            };\n            dialogAceThemeButtons[str('reset')] = function() {\n                acethemeSelect.val(acethemeSelect.data(\"acetheme\"));\n                fileManager.setTheme(acethemeSelect.val());\n            };\n            dialogAceTheme.dialog($.extend({}, dialogbaseOptions, {\n                title: str('theme'),\n                buttons: dialogAceThemeButtons,\n                modal: false,\n                open: function() {\n                    acethemeSelect.data(\"acetheme\", fileManager.getTheme());\n                    acethemeSelect.val(fileManager.getTheme());\n                },\n            }));\n            acethemeSelect.on('change', function() {\n                    fileManager.setTheme(acethemeSelect.val());\n            });\n            VPLUI.setDialogTitleIcon(dialogAceTheme, 'theme');\n\n            var terminal = new VPLTerminal('vpl_dialog_terminal', 'vpl_terminal', str);\n            var VNCClient = new VPLVNCClient('vpl_dialog_vnc', str);\n            var lastConsole = terminal;\n            var fileSelect = $('#vpl_ide_input_file');\n            var fileSelectHandler = function() {\n                VPLUI.readSelectedFiles(this.files, function(file) {\n                    return fileManager.addFile(file, true, updateMenu, showErrorMessage);\n                },\n                function() {\n                    fileManager.fileListVisibleIfNeeded();\n                });\n            };\n            fileSelect.on('change', fileSelectHandler);\n            // Menu acctions.\n            menuButtons.add({\n                name: 'filelist',\n                originalAction: function() {\n                    fileManager.fileListVisible(!fileManager.isFileListVisible());\n                    VPLUtil.delay('updateMenu', updateMenu);\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\n                    VPLUtil.delay('updateFileList', fileManager.updateFileList);\n                },\n                bindKey: {\n                    win: 'Ctrl-L',\n                    mac: 'Ctrl-L'\n                }\n            });\n\n            menuButtons.add({\n                name: 'new',\n                originalAction: function() {\n                    if (fileManager.length() < maxNumberOfFiles) {\n                        dialogNew.dialog('open');\n                    }\n                },\n                bindKey: {\n                    win: 'Alt-N',\n                    mac: 'Option-N'\n                }\n            });\n            menuButtons.add({\n                name: 'rename',\n                originalAction: function() {\n                    var file = fileManager.currentFile();\n                    if (file && file.getId() >= minNumberOfFiles) {\n                        dialogRename.dialog('open');\n                    }\n                },\n                bindKey: {\n                    win: 'Ctrl-R',\n                    mac: 'Ctrl-R'\n                }\n            });\n            menuButtons.add({\n                name: 'delete',\n                originalAction: function() {\n                    var file = fileManager.currentFile();\n                    if (!file) {\n                        return;\n                    }\n                    var filename = file.getFileName();\n                    var message = str('delete_file_fq', filename);\n                    showMessage(message, {\n                        ok: function() {\n                            fileManager.deleteFile(filename, showErrorMessage);\n                        },\n                        title: str('delete_file_q'),\n                        icon: 'trash'\n                    });\n                },\n                bindKey: {\n                    win: 'Ctrl-D',\n                    mac: 'Ctrl-D'\n                }\n            });\n            menuButtons.add({\n                name: 'close',\n                originalAction: function() {\n                    var file = fileManager.currentFile();\n                    if (!file) {\n                        return;\n                    }\n                    fileManager.closeFile(file);\n                },\n                bindKey: {\n                    win: 'Alt-W',\n                    mac: 'Option-W'\n                }\n            });\n            menuButtons.add({\n                name: 'import',\n                originalAction: function() {\n                    fileSelect.val('');\n                    fileSelect.trigger('click');\n                },\n                bindKey: {\n                    win: 'Ctrl-I',\n                    mac: 'Ctrl-I'\n                }\n            });\n            menuButtons.add({\n                name: 'sort',\n                originalAction: function() {\n                    dialogSort.dialog('open');\n                },\n                bindKey: {\n                    win: 'Ctrl-O',\n                    mac: 'Ctrl-O'\n                }\n            });\n            menuButtons.add({\n                name: 'multidelete',\n                originalAction: function() {\n                    dialogMultidelete.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'showparentfiles',\n                originalAction: function() {\n                    openpopup(null, {\n                        url: options.showparentfilesurl,\n                        options: 'width=' + Math.max(screen.availWidth / 2, 780) +\n                                 ',height=' + screen.availHeight +\n                                 ',left=' + (screen.availWidth / 4)\n                    });\n                }\n            });\n            menuButtons.add({\n                name: 'fontsize',\n                originalAction: function() {\n                    dialogFontsize.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'theme',\n                originalAction: function() {\n                    dialogAceTheme.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'print',\n                originalAction: function() {\n                    window.print();\n                },\n                bindKey: {\n                    win: 'Alt-P',\n                    mac: 'Command-P'\n                }\n            });\n            menuButtons.add({\n                name: 'undo',\n                originalAction: function() {\n                    fileManager.currentFile('undo');\n                }\n            });\n            menuButtons.add({\n                name: 'redo',\n                originalAction: function() {\n                    fileManager.currentFile('redo');\n                }\n            });\n            menuButtons.add({\n                name: 'select_all',\n                editorName: 'selectall',\n                originalAction: function() {\n                    fileManager.currentFile('selectAll');\n                }\n            });\n            menuButtons.add({\n                name: 'find',\n                originalAction: function() {\n                    fileManager.currentFile('find');\n                }\n            });\n            menuButtons.add({\n                name: 'find_replace',\n                editorName: 'replace',\n                originalAction: function() {\n                    fileManager.currentFile('replace');\n                }\n            });\n            menuButtons.add({\n                name: 'next',\n                editorName: 'findnext',\n                originalAction: function() {\n                    fileManager.currentFile('next');\n                }\n            });\n            menuButtons.add({\n                name: 'fullscreen',\n                originalAction: function() {\n                    if (fullScreen) {\n                        rootObj.removeClass('vpl_ide_root_fullscreen');\n                        $('body').removeClass('vpl_body_fullscreen');\n                        menuButtons.setText('fullscreen', 'fullscreen');\n                        $('#vpl_ide_user').hide();\n                        fullScreen = false;\n                    } else {\n                        $('body').addClass('vpl_body_fullscreen').scrollTop(0);\n                        rootObj.addClass('vpl_ide_root_fullscreen');\n                        menuButtons.setText('fullscreen', 'regularscreen');\n                        if (options.username) {\n                            $('#vpl_ide_user').show();\n                        }\n                        fullScreen = true;\n                    }\n                    focusCurrentFile();\n                    setTimeout(autoResizeTab, 10);\n                },\n                bindKey: {\n                    win: 'Alt-F',\n                    mac: 'Ctrl-F'\n                }\n            });\n            menuButtons.add({\n                name: 'download',\n                originalAction: function() {\n                    window.location = options.download;\n                }\n            });\n            /**\n             * Reset files action\n             */\n            function resetFiles() {\n                VPLUI.requestAction('resetfiles', '', {}, options.ajaxurl)\n                .done(function(response) {\n                    var files = response.files;\n                    for (var fileName in files) {\n                        if (files.hasOwnProperty(fileName)) {\n                            fileManager.addFile(files[fileName], true, VPLUtil.doNothing, showErrorMessage);\n                        }\n                    }\n                    fileManager.fileListVisibleIfNeeded();\n                    VPLUtil.delay('updateMenu', updateMenu);\n                }).fail(showErrorMessage);\n            }\n            menuButtons.add({\n                name: 'resetfiles',\n                originalAction: function() {\n                    showMessage(str('sureresetfiles'), {\n                        title: str('resetfiles'),\n                        ok: resetFiles,\n                        icon: 'resetfiles'\n                    });\n                }\n            });\n            var noconfirmation = false;\n            menuButtons.add({\n                name: 'save',\n                originalAction: function() {\n                    var data = {\n                        files: fileManager.getFilesToSave(),\n                        comments: $('#vpl_ide_input_comments').val(),\n                        version: noconfirmation ? -1 : fileManager.getVersion()\n                    };\n                    if (JSON.stringify(data).length > options.postMaxSize) {\n                        showErrorMessage(str('maxpostsizeexceeded'));\n                        return;\n                    }\n                    /**\n                     * Save action\n                     */\n                    function doSave() {\n                        VPLUI.requestAction('save', 'saving', data, options.ajaxurl)\n                        .done(function(response) {\n                            if (response.requestsconfirmation && !noconfirmation) {\n                                var checkboxID = 'vpl_donotshowagain';\n                                var donotshowagain = '<input type=\"checkbox\" id=\"' + checkboxID + '\"'\n                                                    + ' class=\"align-text-bottom mr-1 mt-3\">'\n                                                    + '<label for=\"' + checkboxID + '\">' + str('donotshowagain') + '</label>';\n                                var $checkbox;\n                                showMessage(response.question + '<br>' + donotshowagain, {\n                                    title: str('saving'),\n                                    icon: 'alert',\n                                    yes: function() {\n                                        if ($checkbox.length == 1 && $checkbox.prop('checked')) {\n                                            noconfirmation = true;\n                                        }\n                                        data.version = 0;\n                                        doSave();\n                                    }\n                                });\n                                $checkbox = $('#' + checkboxID);\n                            } else {\n                                fileManager.resetModified();\n                                fileManager.setVersion(response.version);\n                                menuButtons.setTimeLeft(response);\n                                VPLUtil.delay('updateMenu', updateMenu);\n                                if (VPLUI.monitorRunning()) {\n                                    data.processid = VPLUtil.getProcessId();\n                                    VPLUI.requestAction('update', 'updating', data, options.ajaxurl);\n                                }\n                            }\n                        }).fail(showErrorMessage);\n                    }\n                    doSave();\n                },\n                bindKey: {\n                    win: 'Ctrl-S',\n                    mac: 'Command-S'\n                }\n            });\n\n            /**\n             * Launches the action\n             *\n             * @param {string} action Action 'run', 'debug', 'evaluate'\n             * @param {string} acting I18n for the action in progress\n             * @param {string} data Data attached to the action\n             */\n            function executionRequest(action, acting, data) {\n                if (!data) {\n                    data = {};\n                }\n                if (!lastConsole.isConnected()) {\n                    VPLUI.requestAction(action, '', data, options.ajaxurl)\n                    .done(function(response) {\n                        VPLUI.webSocketMonitor(response, action, acting, executionActions);\n                    })\n                    .fail(showErrorMessage);\n                }\n            }\n            /**\n             * Launches the run action\n             */\n            function runAction() {\n                executionRequest('run', 'running', {\n                    XGEOMETRY: VNCClient.getCanvasSize(),\n                    currentFileName: fileManager.getCurrentFileName(),\n                });\n            }\n            menuButtons.add({\n                name: 'run',\n                originalAction: function() {\n                    executionActions.setLastAction(runAction);\n                    runAction();\n                },\n                bindKey: {\n                    win: 'Ctrl-F11',\n                    mac: 'Command-U'\n                }\n            });\n            /**\n             * Launches the debug action\n             */\n            function debugAction() {\n                executionRequest('debug', 'debugging', {\n                    XGEOMETRY: VNCClient.getCanvasSize(),\n                    currentFileName: fileManager.getCurrentFileName(),\n                });\n            }\n            menuButtons.add({\n                name: 'debug',\n                originalAction: function() {\n                    executionActions.setLastAction(debugAction);\n                    debugAction();\n                },\n                bindKey: {\n                    win: 'Alt-F11',\n                    mac: 'Option-U'\n                }\n            });\n            /**\n             * Launches the evaluate action\n             */\n            function evaluateAction() {\n                executionRequest('evaluate', 'evaluating');\n            }\n            menuButtons.add({\n                name: 'evaluate',\n                originalAction: function() {\n                    executionActions.setLastAction(evaluateAction);\n                    evaluateAction();\n                },\n                bindKey: {\n                    win: 'Shift-F11',\n                    mac: 'Command-Option-U'\n                }\n            });\n            menuButtons.add({\n                name: 'comments',\n                originalAction: function() {\n                    dialogComments.dialog('open');\n                },\n            });\n            menuButtons.add({\n                name: 'console',\n                originalAction: function() {\n                    if (lastConsole.isOpen()) {\n                        lastConsole.close();\n                    } else {\n                        lastConsole.show();\n                    }\n                }\n            });\n            menuButtons.add({name: 'user'});\n            menuButtons.add({\n                name: 'about',\n                originalAction: function() {\n                    aboutDialog.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'timeleft',\n                originalAction: function() {\n                    menuButtons.toggleTimeLeft();\n                }\n            });\n            menuButtons.add({\n                name: 'more',\n                originalAction: function() {\n                    var tag = $('#vpl_ide_menuextra');\n                    if (tag.is(\":visible\")) {\n                        menuButtons.setText('more', 'more', VPLUtil.str('more'));\n                        tag.hide();\n                    } else {\n                        menuButtons.setText('more', 'less', VPLUtil.str('less'));\n                        tag.show();\n                    }\n                    VPLUtil.delay('updateMenu', updateMenu);\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\n                }\n            });\n            menuButtons.add({\n                name: 'shrightpanel',\n                icon: 'close-rightpanel',\n                originalAction: function() {\n                    if (resultContainer.vplVisible) {\n                        resultContainer.hide();\n                        resultContainer.vplVisible = false;\n                        menuButtons.setText('shrightpanel', 'open-rightpanel', VPLUtil.str('shrightpanel'));\n                    } else {\n                        menuButtons.setText('shrightpanel', 'close-rightpanel', VPLUtil.str('shrightpanel'));\n                        resultContainer.show();\n                        resultContainer.vplVisible = true;\n                    }\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\n                },\n                bindKey: {\n                    win: 'Ctrl-M',\n                    mac: 'Ctrl-M'\n                }\n            });\n            var rightpanelstyle = \"position:absolute;right:0;top:60px;z-index:100;margin:3px\";\n            tr.append('<span style=\"' + rightpanelstyle + '\">' + menuButtons.getHTML('shrightpanel') + '</span>');\n            var rightPanelButton = $('#vpl_ide_shrightpanel');\n            menuButtons.setText('shrightpanel', 'close-rightpanel', VPLUtil.str('shrightpanel'));\n\n            rightPanelButton.button();\n            rightPanelButton.css('padding', '0');\n            $('#vpl_ide_shrightpanel.ui-button-text').css('padding', '0');\n            rightPanelButton.on('click', function() {\n                menuButtons.launchAction('shrightpanel');\n            });\n            rightPanelButton.hide();\n            menu.addClass(\"ui-widget-header ui-corner-all\");\n            var menuHtml = \"\";\n            menuHtml += menuButtons.getHTML('more');\n            menuHtml += menuButtons.getHTML('save');\n            menuHtml += \"<span id='vpl_ide_mexecution'>\";\n            menuHtml += menuButtons.getHTML('run');\n            menuHtml += menuButtons.getHTML('debug');\n            menuHtml += menuButtons.getHTML('evaluate');\n            menuHtml += menuButtons.getHTML('comments');\n            menuHtml += menuButtons.getHTML('console');\n            menuHtml += \"</span> \";\n            menuHtml += \"<span id='vpl_ide_menuextra'>\";\n            menuHtml += \"<span id='vpl_ide_file'>\";\n            // TODO autosave not implemented.\n            menuHtml += menuButtons.getHTML('filelist');\n            menuHtml += menuButtons.getHTML('new');\n            menuHtml += menuButtons.getHTML('rename');\n            menuHtml += menuButtons.getHTML('delete');\n            menuHtml += menuButtons.getHTML('import');\n            menuHtml += menuButtons.getHTML('download');\n            menuHtml += menuButtons.getHTML('resetfiles');\n            menuHtml += menuButtons.getHTML('sort');\n            menuHtml += menuButtons.getHTML('multidelete');\n            menuHtml += menuButtons.getHTML('showparentfiles');\n            menuHtml += menuButtons.getHTML('fontsize');\n            menuHtml += menuButtons.getHTML('theme');\n            menuHtml += \"</span> \";\n            // TODO print still not implemented.\n            menuHtml += \"<span id='vpl_ide_edit'>\";\n            menuHtml += menuButtons.getHTML('undo');\n            menuHtml += menuButtons.getHTML('redo');\n            menuHtml += menuButtons.getHTML('select_all');\n            menuHtml += menuButtons.getHTML('find');\n            menuHtml += menuButtons.getHTML('find_replace');\n            menuHtml += menuButtons.getHTML('next');\n            menuHtml += \"</span> \";\n            menuHtml += \"</span> \";\n            menuHtml += menuButtons.getHTML('fullscreen') + ' ';\n            menuHtml += menuButtons.getHTML('about') + ' ';\n            menuHtml += menuButtons.getHTML('user') + ' ';\n            menuHtml += menuButtons.getHTML('timeleft');\n            menuHtml += '<div class=\"clearfix\"></div>';\n            menu.append(menuHtml);\n            $('#vpl_ide_more').button();\n            $('#vpl_ide_save').button();\n            $('#vpl_ide_menuextra').hide();\n            $('#vpl_ide_file').controlgroup();\n            $('#vpl_ide_edit').controlgroup();\n            $('#vpl_ide_mexecution').controlgroup();\n            $('#vpl_ide_fullscreen').button();\n            $('#vpl_ide_acetheme').button();\n            $('#vpl_ide_about').button();\n            $('#vpl_ide_user').button().css('float', 'right').hide();\n            $('#vpl_ide_timeleft').button().css('float', 'right').hide();\n            $('#vpl_menu .ui-button').css('padding', '6px');\n            $('#vpl_menu .ui-button-text').css('padding', '0');\n            var alwaysActive = ['filelist', 'more', 'fullscreen', 'about', 'resetfiles',\n                                'download', 'comments', 'console', 'import',\n                                'fontsize', 'timeleft'];\n            for (var i = 0; i < alwaysActive.length; i++) {\n                menuButtons.enable(alwaysActive[i], true);\n            }\n            menuButtons.setExtracontent('user', options.username);\n            menuButtons.setTimeLeft(options);\n            updateMenu = function() {\n                var i;\n                var file = fileManager.currentFile();\n                var nfiles = fileManager.length();\n                if (nfiles) {\n                    tabs.show();\n                } else {\n                    tabs.hide();\n                }\n                if (fileManager.isFileListVisible()) {\n                    menuButtons.setText('filelist', 'filelistclose', VPLUtil.str('filelist'));\n                } else {\n                    menuButtons.setText('filelist', 'filelist', VPLUtil.str('filelist'));\n                }\n                var modified = fileManager.isModified();\n                menuButtons.enable('save', modified);\n                var running = VPLUI.monitorRunning();\n                if (running) {\n                    menuButtons.setText('run', 'running');\n                } else {\n                    menuButtons.setText('run', 'run');\n                }\n                menuButtons.enable('run', !running && (!modified || options.example) && isOptionAllowed('run'));\n                menuButtons.enable('debug', !running && (!modified || options.example) && isOptionAllowed('debug'));\n                menuButtons.enable('evaluate', !running && (!modified || options.example) && isOptionAllowed('evaluate'));\n                menuButtons.enable('download', !modified);\n                menuButtons.enable('new', nfiles < maxNumberOfFiles);\n                menuButtons.enable('sort', nfiles - minNumberOfFiles > 1);\n                menuButtons.enable('multidelete', nfiles - minNumberOfFiles > 1);\n                menuButtons.enable('showparentfiles', !modified);\n                menuButtons.enable('theme', true);\n                var sel;\n                if (!file || nfiles === 0) {\n                    sel = ['rename', 'delete', 'undo', 'redo', 'select_all', 'find', 'find_replace', 'next'];\n                    for (i = 0; i < sel.length; i++) {\n                        menuButtons.enable(sel[i], false);\n                    }\n                    return;\n                }\n                menuButtons.enable('rename', file.getId() >= minNumberOfFiles && nfiles !== 0);\n                menuButtons.enable('delete', file.getId() >= minNumberOfFiles && nfiles !== 0);\n                menuButtons.enable('undo', file.hasUndo());\n                menuButtons.enable('redo', file.hasRedo());\n                menuButtons.enable('select_all', file.hasSelectAll());\n                menuButtons.enable('find', file.hasFind());\n                menuButtons.enable('find_replace', file.hasFindReplace());\n                menuButtons.enable('next', file.hasNext());\n                VPLUtil.delay('updateFileList', fileManager.updateFileList);\n            };\n\n            executionActions = {\n                'open': updateMenu,\n                'close': updateMenu,\n                'getConsole': function() {\n                    return lastConsole;\n                },\n                'setResult': self.setResult,\n                'ajaxurl': options.ajaxurl,\n                'run': function(content, coninfo, ws) {\n                    var parsed = /^([^:]*):?(.*)/.exec(content);\n                    var type = VPLUtil.sanitizeText(parsed[1]);\n                    if (type == 'terminal' || type == 'webterminal') {\n                        if (lastConsole && lastConsole.isOpen()) {\n                            lastConsole.close();\n                        }\n                        lastConsole = terminal;\n                        terminal.connect(coninfo.executionURL, function() {\n                            ws.close();\n                            focusCurrentFile();\n                        });\n                        if (type == 'webterminal') {\n                            var URLfavicon = (coninfo.secure ? \"https\" : \"http\") + \"://\" + coninfo.server + \":\" + coninfo.portToUse;\n                            URLfavicon += \"/favicon.ico\";\n                            var imgFavicon = $('<img>');\n                            imgFavicon.attr('src', URLfavicon);\n                            imgFavicon.attr('style', 'display:none');\n                            $('body').append(imgFavicon);\n                        }\n                    } else if (type == 'vnc') {\n                        if (lastConsole && lastConsole.isOpen()) {\n                            lastConsole.close();\n                        }\n                        lastConsole = VNCClient;\n                        VNCClient.connect(coninfo.secure, coninfo.server, coninfo.portToUse, coninfo.VNCpassword,\n                                coninfo.executionPath, function() {\n                                    ws.close();\n                                    focusCurrentFile();\n                                });\n                    } else if (type == \"browser\") {\n                        var URL = (coninfo.secure ? \"https\" : \"http\") + \"://\" + coninfo.server + \":\" + coninfo.portToUse + \"/\";\n                        URL += VPLUtil.sanitizeText(parsed[2]) + \"/httpPassthrough\";\n                        if (isTeacher) {\n                            URL += \"?private\";\n                        }\n                        var message = '<a href=\"' + URL + '\" target=\"_blank\">';\n                        message += VPLUtil.str('open') + '</a>';\n                        var options = {\n                            width: 200,\n                            icon: 'run',\n                            title: VPLUtil.str('run'),\n                        };\n                        showMessage(message, options);\n                    } else {\n                        VPLUtil.log(\"Type of run error \" + content, true);\n                    }\n                },\n                'lastAction': false,\n                'getLastAction': function() {\n                    var ret = this.lastAction;\n                    this.lastAction = false;\n                    return ret;\n                },\n                'setLastAction': function(action) {\n                    this.lastAction = action;\n                }\n            };\n\n            tabs.on(\"tabsactivate\", function() {\n                fileManager.currentFile('focus');\n                VPLUtil.delay('updateMenu', updateMenu);\n                VPLUtil.delay('autoResizeTab', autoResizeTab);\n            });\n\n            // VPLIDE resize view control.\n            var jw = $(window);\n            jw.on('resize', autoResizeTab);\n            // Save? before exit.\n            if (!options.example) {\n                jw.on('beforeunload', function() {\n                    if (fileManager.isModified()) {\n                        return str('changesNotSaved');\n                    }\n                    return undefined;\n                });\n            }\n            fileManager = new FileManager();\n\n            autoResizeTab();\n            // Checks menu width every 1 sec as it can change without event.\n            (function() {\n                var oldMenuWidth = menu.width();\n                /**\n                 * Checks menu width change\n                 */\n                function checkMenuWidth() {\n                    var newMenuWidth = menu.width();\n                    if (oldMenuWidth != newMenuWidth) {\n                        oldMenuWidth = newMenuWidth;\n                        autoResizeTab();\n                    }\n                }\n                checkMenuWidth();\n                setInterval(checkMenuWidth, 1000);\n            }());\n            fileManager.resetModified();\n            VPLUI.requestAction('load', 'loading', options, options.loadajaxurl)\n            .done(function(response) {\n                var allOK = true;\n                var files = response.files;\n                var showFileList = false;\n                for (var i = 0; i < files.length; i++) {\n                    var file = files[i];\n                    var r = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                    if (r) {\n                        r.resetModified();\n                        if (i < minNumberOfFiles || files.length <= 5) {\n                            fileManager.open(r);\n                        } else {\n                            showFileList = true;\n                        }\n                    } else {\n                        allOK = false;\n                    }\n                }\n                tabs.tabs('option', 'active', 0);\n                if (response.compilationexecution) {\n                    self.setResult(response.compilationexecution, false);\n                }\n                menuButtons.setTimeLeft(response);\n                if (response.comments > '') {\n                    $('#vpl_ide_input_comments').val(response.comments);\n                }\n                if (allOK) {\n                    fileManager.resetModified();\n                } else {\n                    fileManager.setModified();\n                }\n                if (fileManager.length() === 0 && maxNumberOfFiles > 0) {\n                    menuButtons.getAction('new')();\n                } else if (!options.saved) {\n                    fileManager.setModified();\n                }\n                fileManager.setFontSize(options.fontSize);\n                fileManager.setVersion(response.version);\n                fileManager.fileListVisible(showFileList);\n                VPLUtil.afterAll('AfterLoadFiles', function() {\n                    updateMenu();\n                    autoResizeTab();\n                    adjustTabsTitles(true);\n                    if (fileManager.length() > 0) {\n                        var file = fileManager.getFiles()[0];\n                        file.open();\n                        file.focus();\n                    }\n                });\n            })\n            .fail(showErrorMessage);\n        };\n        window.VPLIDE = VPLIDE;\n        return {\n            init: function(rootId, options) {\n                vplIdeInstance = new VPLIDE(rootId, options);\n            }\n        };\n    }\n);\n"],"names":["define","$","jqui","coreURL","VPLUtil","VPLUI","VPLFile","VPLIDEButtons","VPLTerminal","VPLVNCClient","VPLIDE","vplIdeInstance","rootId","options","fileManager","adjustTabsTitles","autoResizeTab","showErrorMessage","updateMenu","executionActions","self","this","minNumberOfFiles","minfiles","maxNumberOfFiles","maxfiles","restrictedEdit","restrictededitor","example","readOnly","readOnlyFiles","isTeacher","fullScreen","scrollBarWidth","str","rootObj","append","relativeUrl","Error","activateModification","optionsToCheck","loadajaxurl","ajaxurl","new","rename","delete","comments","acetheme","sort","multidelete","import","isOptionAllowed","op","dragoverHandler","e","originalEvent","dataTransfer","dropEffect","preventDefault","dropHandler","stopImmediatePropagation","droppedFiles","listDroppedFiles","entry","path","Promise","resolve","isFile","file","fullName","name","Object","defineProperty","get","push","isDirectory","createReader","readEntries","entries","dirPromises","i","length","all","then","catch","err","log","dt","promises","items","webkitGetAsEntry","getAsFile","callback","files","readSelectedFiles","addFile","fileListVisibleIfNeeded","restrictedPaste","stopPropagation","console","fontSize","parseInt","on","menu","menuButtons","tr","fileListContainer","fileList","fileListContent","tabsUl","tabs","resultContainer","result","renameDiretoryAction","doNothing","vplMinWidth","updateEvaluationNumber","res","nevaluations","text","reductionbyevaluation","freeevaluations","setExtracontent","lastResult","getTerminal","terminal","setResultGrade","content","raw","titleclass","find","titleTag","replaceWith","setResultTab","contentclass","contentTag","HTMLcontent","contents","html","setResult","go","getFiles","fileNames","getFileName","clearAnnotations","hasContent","gradeShow","formated","show","grade","sanitizeText","variables","processResult","compilation","evaluation","execution","window","VPLDescription","MathJax","math","Hub","Queue","typesetPromise","vplVisible","accordion","anot","getAnnotations","j","type","gotoFile","row","hide","delay","heightStyle","header","animate","beforeActivate","event","ui","newHeader","hasClass","width","gotoFileLink","currentTarget","addClass","iconFolder","tabsAir","getTabsAir","outerWidth","resizeTabWidth","maxWidth","diffLeft","position","left","originalPosition","resizable","vplOriginalWidth","diffWidth","size","originalSize","currentFile","resizableOptions","containment","resize","start","off","stop","handles","focusCurrentFile","center","newWidth","tabsUlWidth","last","children","parentScrollLeft","parent","scrollLeft","fileTab","getTabNameId","scroll","finish","index","oldWidth","planb","disable","css","right","rel","wfl","newHeight","outerHeight","offset","top","height","panelHeight","resizeHeight","dialogbaseOptions","extend","close","showMessage","message","dialogNew","newFileHandler","keyCode","dialog","val","encoding","newfile","open","getTabPos","getId","focus","dialogButtons","title","buttons","setDialogTitleIcon","dialogRename","renameHandler","renameFile","dialogRenameDirectory","renameDirectoryHandler","renameDirectory","target","hasAttribute","dirname","getAttribute","dialogComments","oldStudentComments","setModified","aboutDialog","OKButtons","shortcutDialog","getShortcuts","next","filter","button","dialogSort","dialogSortButtons","regNoNumber","sorted","newOrder","each","orig","id","replace","list","sortable","placeholder","item","removeClass","disableSelection","maxHeight","dialogMultidelete","dialogMultideleteButtons","prop","toDeleteList","label","data","deleteFile","updateFileList","dialogFontsize","fontsizeSlider","dialogFontFizeButtons","value","slider","setFontSize","setUserPreferences","getFontSize","min","max","change","dialogAceTheme","acethemeSelect","dialogAceThemeButtons","setTheme","aceTheme","modal","getTheme","VNCClient","lastConsole","fileSelect","resetFiles","requestAction","done","response","fileName","hasOwnProperty","fail","add","originalAction","fileListVisible","isFileListVisible","bindKey","win","mac","filename","ok","icon","closeFile","trigger","openpopup","url","showparentfilesurl","Math","screen","availWidth","availHeight","print","editorName","setText","scrollTop","username","setTimeout","location","download","noconfirmation","executionRequest","action","acting","isConnected","webSocketMonitor","runAction","XGEOMETRY","getCanvasSize","currentFileName","getCurrentFileName","debugAction","evaluateAction","getFilesToSave","version","getVersion","JSON","stringify","postMaxSize","doSave","requestsconfirmation","$checkbox","donotshowagain","question","yes","resetModified","setVersion","setTimeLeft","monitorRunning","processid","getProcessId","setLastAction","isOpen","toggleTimeLeft","tag","is","getHTML","rightPanelButton","launchAction","menuHtml","controlgroup","alwaysActive","enable","nfiles","modified","isModified","sel","running","hasUndo","hasRedo","hasSelectAll","hasFind","hasFindReplace","hasNext","coninfo","ws","parsed","exec","connect","executionURL","URLfavicon","secure","server","portToUse","imgFavicon","attr","VNCpassword","executionPath","URL","ret","lastAction","jw","openFiles","fileNameIncluded","checkName","toLowerCase","nameMod","indexOf","twoBlockly","oldname","newname","isBlockly","v","generateFileList","fileNameExists","localClipboard","setClipboard","t","getClipboard","fileId","theme","addTab","fid","hlink","removeTab","remove","isReadOnly","pos","setGetkeys","hideIDEStatus","ptab","splice","getFilePosById","isClosed","b","showError","validPath","setContent","getUniqueId","extendToBinary","extendToBlockly","extendToCodeEditor","setFileName","isBinary","fileExtension","getContent","gotoFileName","directoryExists","dirName","startsWith","oldName","newName","oldNameLength","checkDirName","newFileNames","substr","oldNames","arguments","fun","args","Array","prototype","slice","shift","apply","currentPos","getFileTab","l","gotoLine","a","fname","fpos","line","getFile","getDirectoryStructure","structure","isDir","addFilePath","split","curdir","pathdir","p","part","lines","lister","dir","indent","fd","sname","attrs","dirline","iconModified","iconReadOnly","iconRequired","getAction","oldMenuWidth","checkMenuWidth","newMenuWidth","setInterval","allOK","showFileList","r","compilationexecution","saved","afterAll","init"],"mappings":"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"}