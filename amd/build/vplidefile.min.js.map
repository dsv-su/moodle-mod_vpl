{"version":3,"file":"vplidefile.min.js","sources":["../src/vplidefile.js"],"sourcesContent":["// This file is part of VPL for Moodle - http://vpl.dis.ulpgc.es/\n//\n// VPL for Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// VPL for Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with VPL for Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * File management\n *\n * @copyright 2013 Juan Carlos Rodríguez-del-Pino\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author Juan Carlos Rodríguez-del-Pino <jcrodriguez@dis.ulpgc.es>\n */\n\ndefine(\n    [\n        'jquery',\n        'jqueryui',\n        'mod_vpl/vplutil',\n        'mod_vpl/vplui',\n        'mod_vpl/vplidecodefile',\n        'mod_vpl/vplideblocklyfile',\n        'mod_vpl/vplidebinaryfile',\n    ],\n    function($, jqui, VPLUtil, VPLUI, codeExtension, blocklyExtension, binaryExtension) {\n        return function(id, name, value, fileManager, vplIdeInstance) {\n            var tid = \"#vpl_file\" + id;\n            var tabnameid = \"#vpl_tab_name\" + id;\n            var fileName = name;\n            var modified = true;\n            var opened = false;\n            var langType = 'text';\n            var self = this;\n            this.getContent = function() {\n                return value;\n            };\n            this.setContent = function(c) {\n                value = c;\n            };\n            this.getFileManager = function() {\n                return fileManager;\n            };\n            this.getFileName = function() {\n                return fileName;\n            };\n            this.getId = function() {\n                return id;\n            };\n            this.getTabNameId = function() {\n                return tabnameid;\n            };\n            this.getTId = function() {\n                return tid;\n            };\n            this.getFileName = function() {\n                return fileName;\n            };\n            this.isModified = function() {\n                return modified;\n            };\n            this.resetModified = function() {\n                modified = false;\n                this.showFileName();\n            };\n            this.setModified = function() {\n                modified = true;\n                this.showFileName();\n            };\n            this.getTabPos = function() {\n                return fileManager.getTabPos(this);\n            };\n            this.setLang = function(lang) {\n                langType = lang;\n            };\n            this.getLang = function() {\n                return langType;\n            };\n            this.isOpen = function() {\n                return opened;\n            };\n            this.setOpen = function(openState) {\n                opened = openState;\n            };\n            this.getVPLIDE = function() {\n                return vplIdeInstance;\n            };\n            this.change = function() {\n                if (!modified) {\n                    this.setModified();\n                    fileManager.generateFileList();\n                    this.showFileName();\n                    VPLUtil.longDelay('setModified', fileManager.setModified);\n                }\n            };\n            this.setFileName = function(name) {\n                if (!VPLUtil.validPath(name)) {\n                    return false;\n                }\n                if (name != fileName) {\n                    fileName = name;\n                    self.change();\n                }\n                this.setReadOnly(fileManager.isReadOnly(name));\n                if (!this.isOpen()) {\n                    return true;\n                }\n                this.showFileName();\n                this.langSelection();\n                return true;\n            };\n            this.showFileName = function() {\n                var name = this.getFileName();\n                var fn = VPLUtil.getFileName(name);\n                if (fn.length > 20) {\n                    fn = fn.substring(0, 16) + '...';\n                }\n                var html = (modified ? VPLUI.iconModified() : '') + fn;\n                if (this.isReadOnly()) {\n                    html = html + VPLUI.iconReadOnly();\n                } else if (this.getId() < fileManager.minNumberOfFiles) {\n                    html = html + VPLUI.iconRequired();\n                }\n                html = html + VPLUI.iconClose();\n                $(tabnameid + ' a').html(html);\n                if (fn != name) {\n                    $(tabnameid + ' a').attr('title', name);\n                }\n                VPLUtil.afterAll('adjustTabsTitles' + self.id, function() {\n                    fileManager.adjustTabsTitles(true);\n                    VPLUtil.delay('adjustTabsTitles' + self.id, function() {\n                        self.adjustSize();\n                    });\n                });\n            };\n\n            this.destroy = function() {\n                $(tabnameid).remove();\n                $(tid).remove();\n            };\n\n            this.adjustSize = function() {\n                if (!this.isOpen()) {\n                    return false;\n                }\n                var editTag = $(tid);\n                var tabs = editTag.parent();\n                if (editTag.length === 0) {\n                    return false;\n                }\n                var editorHeight = editTag.height();\n                var editorWidth = editTag.width();\n                var newHeight = tabs.height();\n                newHeight -= editTag.position().top;\n                var newWidth = $('#vpl_tabs_scroll').width();\n                if (newHeight != editorHeight || newWidth != editorWidth) {\n                    $(editTag).height(newHeight);\n                    $(editTag).width(newWidth);\n                    return true;\n                }\n                return false;\n            };\n            this.updateStatus = VPLUI.hideIDEStatus;\n            this.gotoLine = VPLUtil.doNothing;\n            this.setReadOnly = VPLUtil.doNothing;\n            this.isReadOnly = VPLUtil.returnFalse;\n            this.focus = VPLUI.hideIDEStatus;\n            this.blur = VPLUtil.doNothing;\n            this.undo = VPLUtil.doNothing;\n            this.redo = VPLUtil.doNothing;\n            this.selectAll = VPLUtil.doNothing;\n            this.open = VPLUtil.doNothing;\n            this.hasUndo = VPLUtil.returnFalse;\n            this.hasRedo = VPLUtil.returnFalse;\n            this.hasSelectAll = VPLUtil.returnFalse;\n            this.hasFind = VPLUtil.returnFalse;\n            this.hasFindReplace = VPLUtil.returnFalse;\n            this.hasNext = VPLUtil.returnFalse;\n            this.find = VPLUtil.doNothing;\n            this.replace = VPLUtil.doNothing;\n            this.next = VPLUtil.doNothing;\n            this.getAnnotations = function() {\n                return [];\n            };\n            this.setAnnotations = VPLUtil.doNothing;\n            this.setFontSize = VPLUtil.doNothing;\n            this.setTheme = VPLUtil.doNothing;\n            this.clearAnnotations = VPLUtil.doNothing;\n            this.langSelection = VPLUtil.doNothing;\n            this.isBinary = VPLUtil.returnFalse;\n            // Adds support for current extensions\n            this.extendToCodeEditor = codeExtension;\n            this.extendToBlockly = blocklyExtension;\n            this.extendToBinary = binaryExtension;\n        };\n    }\n);\n"],"names":["define","$","jqui","VPLUtil","VPLUI","codeExtension","blocklyExtension","binaryExtension","id","name","value","fileManager","vplIdeInstance","tid","tabnameid","fileName","modified","opened","langType","self","this","getContent","setContent","c","getFileManager","getFileName","getId","getTabNameId","getTId","isModified","resetModified","showFileName","setModified","getTabPos","setLang","lang","getLang","isOpen","setOpen","openState","getVPLIDE","change","generateFileList","longDelay","setFileName","validPath","setReadOnly","isReadOnly","langSelection","fn","length","substring","html","iconModified","iconReadOnly","minNumberOfFiles","iconRequired","iconClose","attr","afterAll","adjustTabsTitles","delay","adjustSize","destroy","remove","editTag","tabs","parent","editorHeight","height","editorWidth","width","newHeight","position","top","newWidth","updateStatus","hideIDEStatus","gotoLine","doNothing","returnFalse","focus","blur","undo","redo","selectAll","open","hasUndo","hasRedo","hasSelectAll","hasFind","hasFindReplace","hasNext","find","replace","next","getAnnotations","setAnnotations","setFontSize","setTheme","clearAnnotations","isBinary","extendToCodeEditor","extendToBlockly","extendToBinary"],"mappings":"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"}