{"version":3,"file":"vplutil.min.js","sources":["../src/vplutil.js"],"sourcesContent":["// This file is part of VPL for Moodle - http://vpl.dis.ulpgc.es/\n//\n// VPL for Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// VPL for Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with VPL for Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tools for the VPL IDE\n *\n * @copyright 2016 Juan Carlos Rodríguez-del-Pino\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author Juan Carlos Rodríguez-del-Pino <jcrodriguez@dis.ulpgc.es>\n */\n\n/* globals Blockly */\n/* globals ace */\n\ndefine(\n    [\n        'jquery',\n        'core/log',\n        'core/url'\n    ],\n    function($, log, url) {\n        var VPLUtil = {};\n        VPLUtil.doNothing = $.noop;\n        VPLUtil.returnFalse = function() {\n            return false;\n        };\n        VPLUtil.returnTrue = function() {\n            return true;\n        };\n        var debugMode = false;\n        VPLUtil.log = function(m, forced) {\n            if (debugMode || forced) {\n                log.debug(m);\n            }\n        };\n        VPLUtil.setUserPreferences = function(pref) {\n            $.ajax({\n                async: true,\n                type: \"POST\",\n                url: url.relativeUrl('/mod/vpl/editor/userpreferences.json.php'),\n                'data': JSON.stringify(pref),\n                contentType: \"application/json; charset=utf-8\",\n                dataType: \"json\"\n            });\n        };\n        VPLUtil.getUserPreferences = function(func) {\n            $.ajax({\n                async: true,\n                type: \"POST\",\n                url: url.relativeUrl('/mod/vpl/editor/userpreferences.json.php'),\n                'data': JSON.stringify({getPreferences: true}),\n                contentType: \"application/json; charset=utf-8\",\n                dataType: \"json\"\n            }).done(func);\n        };\n        VPLUtil.sanitizeHTML = function(t) {\n            if (typeof t == 'undefined' || t.replace(/^\\s+$/g, '') == '') {\n                return '';\n            }\n            return $('<div>' + t + '</div>').html();\n        };\n        VPLUtil.sanitizeText = function(s) {\n            if (typeof s == 'undefined' || s.replace(/^\\s+$/g, '') == '') {\n                return '';\n            }\n            return s.replace(/&/g, \"&amp;\")\n                    .replace(/</g, \"&lt;\")\n                    .replace(/>/g, \"&gt;\")\n                    .replace(/\"/g, \"&quot;\")\n                    .replace(/'/g, \"&#39;\");\n        };\n\n        VPLUtil.setProtocol = function(coninfo) {\n            var secure;\n            if (coninfo.securePort == 0 || coninfo.port == 0) {\n                secure = coninfo.port == 0;\n            } else {\n                switch (coninfo.wsProtocol) {\n                    case 'always_use_wss':\n                        secure = true;\n                        break;\n                    case 'always_use_ws':\n                        secure = false;\n                        break;\n                    default:\n                        secure = window.location.protocol == 'https:';\n                }\n            }\n            var URLBase = (secure ? 'wss://' : 'ws://') + coninfo.server;\n            coninfo.secure = secure;\n            coninfo.portToUse = secure ? coninfo.securePort : coninfo.port;\n            URLBase += ':' + coninfo.portToUse + '/';\n            coninfo.monitorURL = URLBase + coninfo.monitorPath;\n            coninfo.executionURL = URLBase + coninfo.executionPath;\n        };\n        VPLUtil.ArrayBuffer2String = function(data) {\n            var view = new Uint8Array(data);\n            var chunks = [];\n            var chunkSize = 32000;\n            var i, len;\n            for (i = 0, len = view.length; i < len; i += chunkSize) {\n                chunks.push(String.fromCharCode.apply(String, view.subarray(i, Math.min(i + chunkSize, len))));\n            }\n            return chunks.join('');\n        };\n        VPLUtil.String2ArrayBuffer = function(data) {\n            var len = data.length;\n            var ret = new ArrayBuffer(len);\n            var u8 = new Uint8Array(ret);\n            for (var i = 0; i < len; i++) {\n                u8[i] = data.charCodeAt(i);\n            }\n            return ret;\n        };\n\n        (function() {\n            var fileUniqueId = 0;\n            VPLUtil.getUniqueId = function() {\n                return fileUniqueId++;\n            };\n        })();\n        (function() {\n            var regExt = /\\.([^.]*)$/;\n            var regImg = /^(gif|jpg|jpeg|png|ico)$/i;\n            var regBin = /^(zip|jar|pdf|tar|bin|7z|arj|deb|gzip|rar|rpm|dat|db|dll|rtf|doc|docx|odt|exe|com)$/i;\n            var regBlk = /^blockly[0123]?$/;\n            VPLUtil.fileExtension = function(fileName) {\n                var res = regExt.exec(fileName);\n                return res !== null ? res[1] : '';\n            };\n            VPLUtil.isImage = function(fileName) {\n                return regImg.test(VPLUtil.fileExtension(fileName));\n            };\n            VPLUtil.isBinary = function(fileName) {\n                return VPLUtil.isImage(fileName) || regBin.test(VPLUtil.fileExtension(fileName));\n            };\n            VPLUtil.isBlockly = function(fileName) {\n                return regBlk.test(VPLUtil.fileExtension(fileName));\n            };\n            var regInvalidFileName = /[\\cA-\\cZ]|[:-@]|[{-~]|\\\\|\\[|\\]|[/^`´]|^-|^ | $|\\.\\./;\n            VPLUtil.validFileName = function(fileName) {\n                if (fileName.length < 1) {\n                    return false;\n                }\n                if (fileName.length > 128) {\n                    return false;\n                }\n                return !(regInvalidFileName.test(fileName));\n            };\n        })();\n        VPLUtil.getCurrentTime = function() {\n            return parseInt((new Date()).valueOf() / 1000);\n        };\n        VPLUtil.encodeBinary = function(name, data) {\n            if (!VPLUtil.isBinary(name)) {\n                return btoa(unescape(encodeURIComponent(data)));\n            }\n            return btoa(VPLUtil.ArrayBuffer2String(data));\n        };\n\n        VPLUtil.decodeBinary = function(name, data) {\n            var decoded = atob(data);\n            if (!VPLUtil.isBinary(name)) {\n                return decodeURIComponent(escape(decoded));\n            }\n            return VPLUtil.String2ArrayBuffer(decoded);\n        };\n\n        VPLUtil.validPath = function(path) {\n            if (path.length > 256) {\n                return false;\n            }\n            var dirs = path.split(\"/\");\n            for (var i = 0; i < dirs.length; i++) {\n                if (!VPLUtil.validFileName(dirs[i])) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        VPLUtil.getFileName = function(path) {\n            var dirs = path.split(\"/\");\n            return dirs[dirs.length - 1];\n        };\n        VPLUtil.dataFromURLData = function(data) {\n            return data.substr(data.indexOf(',') + 1);\n        };\n\n        (function() {\n            var MIME = {\n                'gif': 'image/gif',\n                'jpg': 'image/jpeg',\n                'jpeg': 'image/jpeg',\n                'png': 'image/png',\n                'ico': 'image/vnd.microsoft.icon',\n                'pdf': 'application/pdf'\n            };\n            VPLUtil.getMIME = function(fileName) {\n                var ext = VPLUtil.fileExtension(fileName);\n                if (ext in MIME) {\n                    return MIME[ext];\n                }\n                return 'application/octet-stream';\n            };\n            VPLUtil.getTimeLeft = function(timeLeft) {\n                var res = '';\n                var minute = 60;\n                var hour = 60 * minute;\n                var day = 24 * hour;\n                if (timeLeft < 0) {\n                    res += '-';\n                    timeLeft = -timeLeft;\n                }\n                var timePending = timeLeft;\n                var days = parseInt(timePending / day);\n                timePending -= days * day;\n                if (days !== 0) {\n                    res += days + 'T';\n                }\n                var hours = parseInt(timePending / hour);\n                timePending -= hours * hour;\n                var minutes = parseInt(timePending / minute);\n                timePending -= minutes * minute;\n                var seconds = parseInt(timePending);\n                res += ('00' + hours).substr(-2) + ':';\n                res += ('00' + minutes).substr(-2);\n                if (timeLeft < hour) {\n                    res += ':' + ('00' + seconds).substr(-2);\n                }\n                return res;\n            };\n        })();\n        (function() {\n            var maplang = {\n                'Abap': 'abap',\n                'ABC': 'abc',\n                'Ada': 'ada',\n                'ActionScript': 'actionscript',\n                'x86 assembly': 'assembly_x86',\n                'Bash': 'sh',\n                'Batch': 'batchfile',\n                'C': 'c_cpp',\n                'C++': 'c_cpp',\n                'VPL cases': 'cases',\n                'Cobol': 'cobol',\n                'CoffeeScript': 'coffee',\n                'Clojure': 'clojure',\n                'C#': 'csharp',\n                'C# project': 'xml',\n                'CSS': 'css',\n                'D': 'd',\n                'Dart': 'dart',\n                'Eiffel': 'eiffel',\n                'Erlang': 'erlang',\n                'F#': 'fsharp',\n                'F# project': 'xml',\n                'Fortran': 'fortran',\n                'Go': 'golang',\n                'Groovy': 'groovy',\n                'Dot': 'dot',\n                'Haskell': 'haskell',\n                'HTML': 'html',\n                'Haxe': 'haxe',\n                'Java': 'java',\n                'Julia': 'julia',\n                'JavaScript': 'javascript',\n                'JSON': 'json',\n                'JSP': 'jsp',\n                'JSX': 'jsx',\n                'OCaml': 'ocaml',\n                'Kotlin': 'kotlin',\n                'Makefile': 'makefile',\n                'Matlab': 'matlab',\n                'Markdown': 'markdown',\n                'LaTeX': 'latex',\n                'Less': 'less',\n                'LISP': 'lisp',\n                'Lua': 'lua',\n                'Pascal': 'pascal',\n                'Perl': 'perl',\n                'PHP': 'php',\n                'Plain text': 'plain_text',\n                'Prolog': 'prolog',\n                'PSeInt': 'pseint',\n                'Python': 'python',\n                'R': 'r',\n                'reStructuredText': 'rst',\n                'Ruby': 'ruby',\n                'Rust': 'rust',\n                'SASS': 'sass',\n                'Scala': 'scala',\n                'Scheme': 'scheme',\n                'SCSS': 'scss',\n                'Bash/shell': 'sh',\n                'Swift': 'swift',\n                'SQL': 'sql',\n                'SVG': 'svg',\n                'TeX': 'tex',\n                'tcl': 'tcl',\n                'TypeScript': 'typescript',\n                'Twig': 'twig',\n                'VBScript': 'vbscript',\n                'Verilog': 'verilog',\n                'VisualBasic': 'vbscript',\n                'VisualBasic project': 'xml',\n                'VHDL': 'vhdl',\n                'XML': 'xml',\n                'Yaml': 'yaml'\n            };\n            var mapname = {\n                'abap': 'Abap',\n                'abc': 'ABC',\n                'ada': 'Ada', 'ads': 'Ada', 'adb': 'Ada',\n                'as': 'ActionScript', 'as3': 'ActionScript',\n                'asm': 'x86 assembly',\n                'bash': 'Bash',\n                'bat': 'Batch',\n                'c': 'C', 'C': 'C++', 'cc': 'C++', 'cpp': 'C++', 'c++': 'C++',\n                'hxx': 'C++', 'h': 'C', 'H': 'C++',\n                'cases': 'VPL cases',\n                'cbl': 'Cobol', 'cob': 'Cobol',\n                'coffee': 'CoffeeScript',\n                'clj': 'Clojure',\n                'cs': 'C#',\n                'csproj': 'C# project',\n                'css': 'CSS',\n                'd': 'D',\n                'dart': 'Dart',\n                'e': 'Eiffel',\n                'erl': 'Erlang', 'hrl': 'Erlang',\n                'f': 'Fortran', 'f77': 'Fortran', 'f90': 'Fortran', 'for': 'Fortran',\n                'fs': 'F#',\n                'fsproj': 'F# project',\n                'go': 'Go',\n                'groovy': 'Groovy',\n                'gv': 'Dot',\n                'hs': 'Haskell',\n                'htm': 'HTML', 'html': 'HTML',\n                'hx': 'Haxe',\n                'java': 'Java',\n                'jl': 'Julia',\n                'js': 'JavaScript',\n                'json': 'JSON',\n                'jsp': 'JSP',\n                'jsx': 'JSX',\n                'kt': 'Kotlin', 'kts': 'Kotlin',\n                'm': 'Matlab',\n                'md': 'Markdown',\n                'ml': 'OCaml', 'mli': 'OCaml',\n                'latex': 'LaTeX',\n                'less': 'Less',\n                'lisp': 'LISP', 'lsp': 'LISP',\n                'lua': 'Lua',\n                'pas': 'Pascal', 'p': 'Pascal',\n                'perl': 'Perl', 'prl': 'Perl',\n                'php': 'PHP',\n                'pro': 'Prolog', 'pl': 'Prolog',\n                'psc': 'pseint',\n                'py': 'Python',\n                'R': 'R', 'r': 'R',\n                'rb': 'Ruby', 'ruby': 'Ruby',\n                'rs': 'Rust',\n                'rst': 'reStructuredText',\n                's': 'x86 assembly',\n                'sass': 'SASS',\n                'scala': 'Scala',\n                'scm': 'Scheme',\n                'scss': 'SCSS',\n                'sh': 'Bash/shell',\n                'swift': 'Swift',\n                'sql': 'SQL',\n                'svg': 'SVG',\n                'tex': 'TeX',\n                'tcl': 'TCL',\n                'ts': 'TypeScript',\n                'twig': 'Twig',\n                'vb': 'VisualBasic',\n                'vbproj': 'VisualBasic project',\n                'vbs': 'VBSscript',\n                'v': 'Verilog', 'vh': 'Verilog',\n                'vhd': 'VHDL', 'vhdl': 'VHDL',\n                'xml': 'XML',\n                'yaml': 'YAML',\n                // Add dot to indicate that is not a file extension.\n                '.makefile': 'Makefile',\n                '.Makefile': 'Makefile'\n            };\n\n            /**\n             * Returns the language names\n             * @returns {object} copy of the language names\n             */\n            VPLUtil.getLangNames = function() {\n                return Object.assign({}, mapname);\n            };\n\n            /**\n             * Returns the Ace9 language type for a file\n             * @param {string} filenamepath\n             * @returns {string} language type\n             * @see https://ace.c9.io/#nav=api&api=edit_session\n             */\n            VPLUtil.langType = function(filenamepath) {\n                var ext = VPLUtil.fileExtension(filenamepath);\n                if (ext in mapname) {\n                    return maplang[mapname[ext]];\n                }\n                var extfile = '.' + VPLUtil.getFileName(filenamepath);\n                if (extfile in mapname) {\n                    return maplang[mapname[extfile]];\n                }\n                return 'plain_text';\n            };\n\n            /**\n             * Returns the language name for a file\n             * @param {string} filenamepath\n             * @returns {string} language name\n             */\n            VPLUtil.langName = function(filenamepath) {\n                var ext = VPLUtil.fileExtension(filenamepath);\n                if (ext in mapname) {\n                    return mapname[ext];\n                }\n                var extfile = '.' + VPLUtil.getFileName(filenamepath);\n                if (extfile in mapname) {\n                    return mapname[extfile];\n                }\n                return 'Plain text';\n            };\n\n            VPLUtil.useHardTabs = function(filenamepath) {\n                var type = VPLUtil.langType(filenamepath);\n                return type == 'makefile' || type == 'golang';\n            };\n        })();\n        (function() {\n            var i18n = {};\n            var strreg = /\\{\\\\*\\$a\\\\*}/g;\n            VPLUtil.str = function(key, parm) {\n                if (!i18n[key]) {\n                    return '{' + key + '}';\n                }\n                if (typeof parm != 'undefined') {\n                    return i18n[key].replace(strreg, parm);\n                } else {\n                    return i18n[key];\n                }\n            };\n            VPLUtil.setStr = function(newi18n) {\n                for (var key in newi18n) {\n                    if (newi18n.hasOwnProperty(key)) {\n                        i18n[key] = newi18n[key];\n                    }\n                }\n            };\n            VPLUtil.setStr(window.VPLi18n);\n        })();\n        (function() {\n            var delayedActions = {};\n            var afterAllActions = {};\n            var shortTimeout = 20;\n            var longTimeout = 100;\n            var numberDelayed = 0;\n            var internalDelay = function(timeout, id, func, arg1, arg2) {\n                if (typeof delayedActions[id] != 'undefined') {\n                    clearTimeout(delayedActions[id]);\n                    numberDelayed--;\n                }\n                numberDelayed++;\n                delayedActions[id] = setTimeout(function() {\n                    numberDelayed--;\n                    func(arg1, arg2);\n                    delete delayedActions[id];\n                }, timeout);\n            };\n            VPLUtil.delay = function(id, func, arg1, arg2) {\n                internalDelay(shortTimeout, id, func, arg1, arg2);\n            };\n            VPLUtil.longDelay = function(id, func, arg1, arg2) {\n                internalDelay(longTimeout, id, func, arg1, arg2);\n            };\n            var setAfterTimeout = function(id, func, arg1, arg2) {\n                if (typeof afterAllActions[id] != 'undefined') {\n                    clearTimeout(afterAllActions[id]);\n                }\n                afterAllActions[id] = setTimeout(function() {\n                        if (numberDelayed > 0) {\n                            afterAllActions[id] = setAfterTimeout(id, func, arg1, arg2);\n                        } else {\n                             func(arg1, arg2);\n                             delete afterAllActions[id];\n                        }\n                    }, longTimeout);\n            };\n            VPLUtil.afterAll = function(id, func, arg1, arg2) {\n                setAfterTimeout(id, func, arg1, arg2);\n            };\n        })();\n        VPLUtil.supportWebSocket = function() {\n            if (\"WebSocket\" in window) {\n                return true;\n            }\n            return false;\n        };\n        VPLUtil.isAndroid = function() {\n            return window.navigator.userAgent.indexOf('Android') > -1;\n        };\n        VPLUtil.isFirefox = function() {\n            return window.navigator.userAgent.indexOf('Firefox') > -1;\n        };\n        VPLUtil.isMac = function() {\n            return window.navigator.userAgent.indexOf('Mac') > -1;\n        };\n        (function() {\n            var lastProccessID = -1;\n            VPLUtil.setProcessId = function(id) {\n                lastProccessID = id;\n            };\n            VPLUtil.getProcessId = function() {\n                return lastProccessID;\n            };\n        })();\n\n        /**\n         * Run a command in a execution server with input/output using a WebSocket\n         * @param {string} URL to VPL editor services in Moodle server\n         * @param {string} command Command to run in execution server\n         * @param {array.<{name: string, contents: string, encoding: number}>} files\n         *         array of objects name, contents and encoding 0 => UTF-8, 1 => Base64\n         * @returns {object} deferred.\n         *         Use done() to set handler to receive the WebSocket. Use fail to set error handler.\n         */\n        VPLUtil.directRun = function(URL, command, files) {\n            var deferred = $.Deferred();\n            $.ajax({\n                async: true,\n                type: \"POST\",\n                url: URL + 'directrun',\n                'data': JSON.stringify({\"command\": command, \"files\": files}),\n                contentType: \"application/json; charset=utf-8\",\n                dataType: \"json\"\n            }).done(function(result) {\n                if (!result.success) {\n                    deferred.reject(result.error);\n                } else {\n                    var response = result.response;\n                    VPLUtil.setProtocol(response);\n                    var ws = new WebSocket(response.executionURL);\n                    log.debug('Conecting with:' + response.executionURL);\n                    deferred.resolve({processid: response.processid, homepath: response.homepath, connection: ws});\n                }\n            }).fail(function(jqXHR, textStatus, errorThrown) {\n                var message = 'Connection fail' + ': ' + textStatus;\n                if (errorThrown.message != undefined) {\n                    message += ': ' + errorThrown.message;\n                }\n                log.debug(message);\n                deferred.reject(message);\n            });\n            return deferred;\n        };\n        /**\n         * Function to experiment with Direct run.\n         * Limits: one data send and 10 messages received and 10 minutes connected\n         * @param {string} URL to server\n         * @param {string} command Command to prepare direct run. Execution of command must generate vpl_execution\n         * @param {object} data to send to server\n         */\n         VPLUtil.directRunTest = function(URL, command, data) {\n            var files = [{name: 'a.c', contents: 'int main(){return 0;}', encoding: 0},\n                         {name: 'b.c', contents: 'int f(){return 1;}', encoding: 0}];\n            VPLUtil.directRun(URL, command, files)\n                .done(function(result) {\n                    var mcount = 0;\n                    result.connection.onopen = function() {\n                        log.debug(\"Ws open \" + result.homepath + \" processid \" + result.processid);\n                        if (data != undefined) {\n                            result.connection.send(data);\n                        }\n                        setTimeout(function() { //  Close test if open for more than 10 minutes.\n                            result.connection.close();\n                        }, 60 * 10 * 1000);\n                    };\n                    result.connection.onmessage = function(event) {\n                        log.debug(\"WS Message (\" + ++mcount + \"): \" + event.data);\n                        if (mcount >= 10) {\n                            result.connection.close();\n                        }\n                    };\n                    result.connection.onerror = function(event) {\n                        log.debug(\"WS error: \" + event);\n                    };\n                    result.connection.onclose = function(event) {\n                        log.debug(\"WS close: \" + event.code + \" \" + event.reason);\n                    };\n                })\n                .fail(function(message) {\n                    log.debug(\"Direct run fail. URL: \" + URL + \" command: \" + command + \" message: \" + message);\n                });\n        };\n        VPLUtil.processResult = function(text, filenames, sh, noFormat, folding) {\n            if (typeof text == 'undefined' || text.replace(/^\\s+$/gm, '') == '') {\n                return '';\n            }\n            /**\n             * Adds escape to the text\n             * @param {string} t text to escape\n             * @returns {string} result\n             */\n            function escReg(t) {\n                return t.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/, \"\\\\$&\");\n            }\n            var regtitgra = /\\([-]?[\\d]+[.]?[\\d]*\\)\\s*$/;\n            var regtit = /^-/;\n            var regcas = /^\\s*>/;\n            // TODO adds error? use first anotation for icon.\n            var regError = new RegExp('\\\\[err\\\\]|error|' + escReg(VPLUtil.str('error')), 'i');\n            var regWarning = new RegExp('\\\\[warn\\\\]|warning|note|' + escReg(VPLUtil.str('warning')), 'i');\n            var regInformation = new RegExp('\\\\[info\\\\]|information', 'i');\n            var state = '';\n            var html = '';\n            var comment = '';\n            var case_ = '';\n            var lines = text.split(/\\r\\n|\\n|\\r/);\n            var regFiles = [];\n            var lastAnotation = false;\n            var lastAnotationFile = false;\n            var afterTitle = false;\n            /**\n             * Generate attribute href for the editor in sh\n             * @param {int} i Index of sh\n             * @return {string} href\n             */\n            function getHref(i) {\n                if (typeof sh[i].getTagId === 'undefined') {\n                    return 'href=\"#\" ';\n                } else {\n                    return 'href=\"#' + sh[i].getTagId() + '\" ';\n                }\n            }\n            (function() {\n                for (var i = 0; i < filenames.length; i++) {\n                    var regf = escReg(filenames[i]);\n                    // Filename:N, filename(N), filename N, filename line N, filename on line N.\n                    // N=#|#:#|#,#.\n                    var reg = \"(^| |/)\" + regf + \"( on line | line |:|\\\\()(\\\\d+)(:|,)?(\\\\d+)?(\\\\))?\";\n                    regFiles[i] = new RegExp(reg, 'm');\n                }\n            })();\n            /**\n             * Generate the file links in the comments to point to the files\n             * @param {string} line Line to modify\n             * @param {string} rawline Text to include in annotation\n             * @returns {string} The line modified\n             */\n            function genFileLinks(line, rawline) {\n                var used = false;\n                for (var i = 0; i < regFiles.length; i++) {\n                    var reg = regFiles[i];\n                    var match;\n                    while ((match = reg.exec(line)) !== null) {\n                        var anot = sh[i].getAnnotations();\n                        // Annotation format {row:,column:,raw:,type:error,warning,info;text} .\n                        lastAnotationFile = i;\n                        used = true;\n                        var type;\n                        if (line.search(regError) > -1) {\n                            type = 'error';\n                        } else if (line.search(regWarning) > -1) {\n                            type = 'warning';\n                        } else if (line.search(regInformation) > -1) {\n                            type = 'info';\n                        } else {\n                            type = 'error';\n                        }\n                        lastAnotation = {\n                            'row': (match[3] - 1),\n                            'column': match[5],\n                            'type': type,\n                            'text': rawline,\n                        };\n                        anot.push(lastAnotation);\n                        var fileName = filenames[i];\n                        var href = getHref(i);\n                        var lt = VPLUtil.sanitizeText(fileName);\n                        var data = 'data-file=\"' + fileName + '\" data-line=\"' + match[3] + '\"';\n                        line = line.replace(reg, '$1<a ' + href + ' class=\"vpl_fl\" ' + data + '>' + lt + '$2$3$4$5$6</a>');\n                        sh[i].setAnnotations(anot);\n                    }\n                }\n                if (!used && lastAnotation) {\n                    if (rawline !== '') {\n                        lastAnotation.text += \"\\n\" + rawline;\n                        sh[lastAnotationFile].setAnnotations(sh[lastAnotationFile].getAnnotations());\n                    } else {\n                        lastAnotation = false;\n                    }\n                }\n                return line;\n            }\n            /**\n             * Generates HTML for title line\n             * @param {string} line The line to process\n             * @returns {string} Line in HTML format\n             */\n            function getTitle(line) {\n                lastAnotation = false;\n                line = line.substr(1);\n                var end = regtitgra.exec(line);\n                if (end !== null) {\n                    line = line.substr(0, line.length - end[0].length);\n                }\n                var html = '';\n                if (folding) {\n                    html += '<a href=\"javascript:void(0)\" onclick=\"VPLUtil.showHideDiv(this)\">[+]</a>';\n                }\n                html += '<b class=\"ui-widget-header ui-corner-all\">' + VPLUtil.sanitizeText(line) + '</b><br>';\n                html = genFileLinks(html, line);\n                return html;\n            }\n            /**\n             * Returns comment that has been saved\n             * @returns {string}\n             */\n            function getComment() {\n                lastAnotation = false;\n                var ret = comment;\n                comment = '';\n                return ret;\n            }\n            /**\n             * Adds a new comment in HTML\n             * @param {string} rawline  Comment to add\n             */\n            function addComment(rawline) {\n                var line = VPLUtil.sanitizeText(rawline);\n                comment += genFileLinks(line, rawline) + '<br>';\n            }\n            /**\n             * Adds a new case\n             * @param {*} rawline Text to add\n             */\n            function addCase(rawline) {\n                var line = VPLUtil.sanitizeText(rawline);\n                case_ += genFileLinks(line, rawline) + \"\\n\";\n            }\n            /**\n             * Returns cases saved in HTML\n             * @returns {string}\n             */\n            function getCase() {\n                lastAnotation = false;\n                var ret = case_;\n                case_ = '';\n                return '<pre>' + ret + '</pre>';\n            }\n\n            for (var i = 0; i < lines.length; i++) {\n                var line = lines[i];\n                if (noFormat) {\n                    html += genFileLinks(VPLUtil.sanitizeText(line), line) + \"\\n\";\n                    continue;\n                }\n                var match = regcas.exec(line);\n                var regcasv = regcas.test(line);\n                if ((match !== null) != regcasv) {\n                    VPLUtil.log('error');\n                }\n                if (regtit.test(line)) {\n                    switch (state) {\n                        case 'comment':\n                            html += getComment();\n                            break;\n                        case 'case':\n                            html += getCase();\n                            break;\n                    }\n                    if (afterTitle) {\n                        html += '</div>';\n                    }\n                    html += getTitle(line);\n                    html += folding ? '<div style=\"display:none\">' : '<div>';\n                    afterTitle = true;\n                    state = '';\n                } else if (regcasv) {\n                    if (state == 'comment') {\n                        html += getComment();\n                    }\n                    addCase(line.substr(match[0].length));\n                    state = 'case';\n                } else {\n                    if (state == 'case') {\n                        html += getCase();\n                    }\n                    addComment(line);\n                    state = 'comment';\n                }\n            }\n            switch (state) {\n                case 'comment':\n                    html += getComment();\n                    break;\n                case 'case':\n                    html += getCase();\n                    break;\n            }\n            if (afterTitle) {\n                html += '</div>';\n            }\n            return html;\n        };\n        (function() {\n            var scriptsLoaded = [];\n            VPLUtil.loadScript = function(scripts, end) {\n                if (scripts.length == 0) {\n                    end();\n                    return;\n                }\n                var scriptURL = scripts[0];\n                if (typeof scriptsLoaded[scriptURL] == 'undefined') {\n                    scripts.shift();\n                    scriptsLoaded[scriptURL] = 1;\n                    var script = document.createElement('script');\n                    script.type = 'text/javascript';\n                    script.src = VPLUtil.options.scriptPath + scriptURL;\n                    script.onload = function() {\n                        scriptsLoaded[scriptURL] = 2;\n                        VPLUtil.loadScript(scripts, end);\n                    };\n                    document.head.appendChild(script);\n                } else if (scriptsLoaded[scriptURL] == 2) {\n                    scripts.shift();\n                    VPLUtil.loadScript(scripts, end);\n                } else {\n                    var fullScriptPath = VPLUtil.options.scriptPath + scriptURL;\n                    VPLUtil.log('Loading js ' + fullScriptPath + ' (state ' + scriptsLoaded[scriptURL] + ')');\n                    setTimeout(function() {\n                                  VPLUtil.loadScript(scripts, end);\n                               }, 50);\n                }\n            };\n            VPLUtil.isScriptLoading = function(scriptURL) {\n                if (typeof scriptsLoaded[scriptURL] == 'undefined') {\n                    return false;\n                }\n                return scriptsLoaded[scriptURL] == 1;\n            };\n            VPLUtil.isScriptLoaded = function(scriptURL) {\n                if (typeof scriptsLoaded[scriptURL] == 'undefined') {\n                    return false;\n                }\n                return scriptsLoaded[scriptURL] == 2;\n            };\n        })();\n        (function() {\n            var files = [];\n            var results = [];\n            var shs = [];\n            var nFileGroupHighlighter = 0;\n            /**\n             * Constructor for submission highlighter\n             * @param {Array} files Files to show highlighted\n             * @param {Array} results Output\n             */\n            function FileGroupHighlighter(files, results) {\n                this.files = files;\n                this.results = results;\n                this.shFiles = [];\n                this.shFileNames = [];\n                this.fileGroupId = nFileGroupHighlighter;\n                nFileGroupHighlighter++;\n                this.highlight();\n            }\n\n            FileGroupHighlighter.prototype.highlightBlockly = function(preid) {\n                VPLUtil.loadScript(['/blockly/blockly_compressed.js',\n                    '/blockly/msg/js/en.js',\n                    '/blockly/blocks_compressed.js']\n                , function() {\n                    var tag = $('#' + preid);\n                    var c = tag.html();\n                    $('#' + preid + 'load').remove();\n                    tag.html('');\n                    tag.show();\n                    c = $('<div />').html(c).text().replace(/\\n/g, \"\");\n                    var xml = Blockly.Xml.textToDom(c);\n                    tag.html('').height(300).width(tag.parent().width());\n                    var options = {\n                        toolbox: '',\n                        readOnly: true,\n                        media: '../editor/blockly/media/',\n                    };\n                    var work = Blockly.inject(preid, options);\n                    Blockly.Xml.domToWorkspace(xml, work);\n                    var hg = VPLUtil.adjustBlockly(work, 10, 10);\n                    tag.height(hg);\n                    tag.width('100%');\n                    Blockly.svgResize(work);\n                    Blockly.resizeSvgContents(work);\n                    var h = tag.html();\n                    work.dispose();\n                    tag.html(h);\n                });\n            };\n\n            FileGroupHighlighter.prototype.highlight = function() {\n                var self = this;\n                var needAce = false;\n                var files = this.files;\n                for (let i = 0; i < files.length; i++) {\n                    let file = files[i];\n                    if (VPLUtil.isBinary(file.fileName) || VPLUtil.isBlockly(file.fileName)) {\n                        continue;\n                    } else {\n                        needAce = true;\n                        break;\n                    }\n                }\n                if (needAce && typeof ace === 'undefined') {\n                    VPLUtil.loadScript(['/ace9/ace.js'],\n                        function() {\n                           self.highlight();\n                        });\n                    return;\n                }\n                VPLUtil.delay(\"FFGH.\" + self.fileGroupId, function() {\n                    self.highlightStep(0);\n                });\n            };\n\n            FileGroupHighlighter.prototype.highlightStep = function(pos) {\n                if (pos >= this.files.length) {\n                    this.resultStep(0);\n                    return;\n                }\n                let file = this.files[pos];\n                let preid = 'code' + file.tagId;\n                if (VPLUtil.isBlockly(file.fileName)) {\n                    this.highlightBlockly(preid);\n                } else {\n                    var lang = VPLUtil.langType(file.fileName);\n                    $('#' + preid).show();\n                    $('#' + preid + 'load').remove();\n                    var sh = ace.edit(preid);\n                    sh.setTheme('ace/theme/' + file.theme);\n                    sh.getSession().setMode('ace/mode/' + lang);\n                    sh.renderer.setShowGutter(file.showln);\n                    sh.setReadOnly(true);\n                    sh.setHighlightActiveLine(false);\n                    sh.setAutoScrollEditorIntoView(true);\n                    sh.setOption('maxLines', file.nl);\n                    sh.getAnnotations = function() {\n                        return this.getSession().getAnnotations();\n                    };\n                    sh.setAnnotations = function(a) {\n                        return this.getSession().setAnnotations(a);\n                    };\n                    sh.getTagId = function() {\n                        return this.vplTagId;\n                    };\n                    sh.vplTagId = file.tagId;\n                    this.shFiles.push(sh);\n                    this.shFileNames.push(file.fileName);\n                    shs[file.tagId] = sh;\n                }\n                var self = this;\n                VPLUtil.delay(preid + \".next\", function() {\n                    self.highlightStep(pos + 1);\n                });\n            };\n\n            FileGroupHighlighter.prototype.resultStep = function(pos) {\n                if (pos >= this.results.length) {\n                    return;\n                }\n                var self = this;\n                var result = this.results[pos];\n                var tag = document.getElementById(result.tagId);\n                var text = tag.textContent || tag.innerText;\n                tag.innerHTML = VPLUtil.processResult(text, this.shFileNames, this.shFiles,\n                    result.noFormat, result.folding);\n                VPLUtil.delay(result.tagId + \".next\", function() {\n                    self.resultStep(pos + 1);\n                });\n            };\n\n            VPLUtil.addResults = function(tagId, noFormat, folding) {\n                results.push({'tagId': tagId, 'noFormat': noFormat, 'folding': folding});\n            };\n            VPLUtil.syntaxHighlightFile = function(tagId, fileName, theme, showln, nl) {\n                files.push({\n                    'tagId': tagId,\n                    'fileName': fileName,\n                    'theme': theme,\n                    'showln': showln,\n                    'nl': nl\n                 });\n            };\n            VPLUtil.syntaxHighlight = function() {\n                var groupFiles = files;\n                var groupResults = results;\n                files = [];\n                results = [];\n                new FileGroupHighlighter(groupFiles, groupResults);\n            };\n            VPLUtil.flEventHandler = function(event) {\n                var tag = event.target.getAttribute('href').substring(1);\n                var line = event.target.getAttribute('data-line');\n                var sh = shs[tag];\n                sh.gotoLine(line, 0);\n                sh.scrollToLine(line, true);\n            };\n            VPLUtil.setflEventHandler = function() {\n                var links = document.getElementsByClassName(\"vpl_fl\");\n                for (var i = 0; i < links.length; i++) {\n                    links[i].onclick = VPLUtil.flEventHandler;\n                }\n            };\n            VPLUtil.showHideDiv = function(a) {\n                var text = a;\n                var div = a;\n                if (!div.nextSibling) {\n                    div = div.parentNode;\n                }\n                div = div.nextSibling;\n                while (div.nodeName != 'DIV' && div.nodeName != 'PRE') {\n                    div = div.nextSibling;\n                    if (!div) {\n                        return;\n                    }\n                }\n                if (text) {\n                    if (text.innerHTML == '[+]') {\n                        if (div.savedDisplay) {\n                            div.style.display = div.savedDisplay;\n                        } else {\n                            div.style.display = '';\n                        }\n                        text.innerHTML = '[-]';\n                    } else {\n                        div.savedDisplay = div.style.display;\n                        div.style.display = 'none';\n                        text.innerHTML = '[+]';\n                    }\n                }\n            };\n            VPLUtil.adjustBlockly = function(work, offx, offy) {\n                var blocks = work.getAllBlocks();\n                var miy = 20000;\n                var may = -20000;\n                var mix = 20000;\n                var max = -20000;\n                for (var i = 0; i < blocks.length; i++) {\n                    var xy = blocks[i].getRelativeToSurfaceXY();\n                    miy = Math.min(miy, xy.y);\n                    may = Math.max(may, xy.y);\n                    mix = Math.min(mix, xy.x);\n                    max = Math.max(max, xy.x);\n                }\n                blocks = work.getTopBlocks();\n                for (var j = 0; j < blocks.length; j++) {\n                    blocks[j].moveBy(offx - mix, offy - miy);\n                }\n                return may - miy + 100 + offy;\n            };\n        })();\n        VPLUtil.options = {\n            scriptPath: ''\n        };\n        if (typeof window.VPLDebugMode != 'undefined') {\n            debugMode = window.VPLDebugMode;\n        }\n        VPLUtil.init = function(options) {\n            VPLUtil.options = {\n                scriptPath: ''\n            };\n            $.extend(VPLUtil.options, options);\n            if (typeof window.VPLDebugMode != 'undefined') {\n                debugMode = window.VPLDebugMode;\n            }\n            VPLUtil.log(VPLUtil.options);\n        };\n        // Needs global use of VPLUtil for view source.\n        window.VPLUtil = VPLUtil;\n        return VPLUtil;\n    }\n);\n"],"names":["define","$","log","url","VPLUtil","doNothing","noop","returnFalse","returnTrue","fileUniqueId","MIME","maplang","mapname","i18n","strreg","lastProccessID","scriptsLoaded","debugMode","m","forced","debug","setUserPreferences","pref","ajax","async","type","relativeUrl","JSON","stringify","contentType","dataType","getUserPreferences","func","getPreferences","done","sanitizeHTML","t","replace","html","sanitizeText","s","setProtocol","coninfo","secure","securePort","port","wsProtocol","window","location","protocol","URLBase","server","portToUse","monitorURL","monitorPath","executionURL","executionPath","ArrayBuffer2String","data","i","len","view","Uint8Array","chunks","length","push","String","fromCharCode","apply","subarray","Math","min","join","String2ArrayBuffer","ret","ArrayBuffer","u8","charCodeAt","getUniqueId","regExt","regImg","regBin","regBlk","fileExtension","fileName","res","exec","isImage","test","isBinary","isBlockly","regInvalidFileName","validFileName","getCurrentTime","parseInt","Date","valueOf","encodeBinary","name","btoa","unescape","encodeURIComponent","decodeBinary","decoded","atob","decodeURIComponent","escape","validPath","path","dirs","split","getFileName","dataFromURLData","substr","indexOf","getMIME","ext","getTimeLeft","timeLeft","timePending","days","hours","minutes","seconds","getLangNames","Object","assign","langType","filenamepath","extfile","langName","useHardTabs","str","key","parm","setStr","newi18n","hasOwnProperty","VPLi18n","delayedActions","afterAllActions","numberDelayed","internalDelay","timeout","id","arg1","arg2","clearTimeout","setTimeout","delay","longDelay","setAfterTimeout","afterAll","supportWebSocket","isAndroid","navigator","userAgent","isFirefox","isMac","setProcessId","getProcessId","directRun","URL","command","files","deferred","Deferred","result","success","response","ws","WebSocket","resolve","processid","homepath","connection","reject","error","fail","jqXHR","textStatus","errorThrown","message","undefined","directRunTest","contents","encoding","mcount","onopen","send","close","onmessage","event","onerror","onclose","code","reason","processResult","text","filenames","sh","noFormat","folding","escReg","regtitgra","regtit","regcas","regError","RegExp","regWarning","regInformation","state","comment","case_","lines","regFiles","lastAnotation","lastAnotationFile","afterTitle","getHref","getTagId","genFileLinks","line","rawline","used","match","reg","anot","getAnnotations","search","href","lt","setAnnotations","getTitle","end","getComment","addComment","addCase","getCase","regcasv","loadScript","scripts","scriptURL","shift","script","document","createElement","src","options","scriptPath","onload","head","appendChild","fullScriptPath","isScriptLoading","isScriptLoaded","results","shs","nFileGroupHighlighter","FileGroupHighlighter","shFiles","shFileNames","fileGroupId","highlight","prototype","highlightBlockly","preid","tag","c","remove","show","xml","Blockly","Xml","textToDom","height","width","parent","work","inject","toolbox","readOnly","media","domToWorkspace","hg","adjustBlockly","svgResize","resizeSvgContents","h","dispose","self","this","needAce","file","ace","highlightStep","pos","resultStep","tagId","lang","edit","setTheme","theme","getSession","setMode","renderer","setShowGutter","showln","setReadOnly","setHighlightActiveLine","setAutoScrollEditorIntoView","setOption","nl","a","vplTagId","getElementById","textContent","innerText","innerHTML","addResults","syntaxHighlightFile","syntaxHighlight","groupFiles","groupResults","flEventHandler","target","getAttribute","substring","gotoLine","scrollToLine","setflEventHandler","links","getElementsByClassName","onclick","showHideDiv","div","nextSibling","parentNode","nodeName","savedDisplay","style","display","offx","offy","blocks","getAllBlocks","miy","may","mix","max","xy","getRelativeToSurfaceXY","y","x","getTopBlocks","j","moveBy","VPLDebugMode","init","extend"],"mappings":"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"}